
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ACTION ACTIONS ASSIGN BOOLEAN COMMENT COMMENT_TAG COMPARE CONDITIONS DEDENT EOF EVENT EVENT_TYPE FLOAT FUNC GLOBAL_VAR INDENT INTEGER MAP NAME NEWLINE NUMBER PLAYER_VAR QUOTE RULE VALUE WHITESPACEruleset : rule\n               | rule rulesetrule : RULE \n            | RULE NEWLINE INDENT ruleblock DEDENTruleblock : event ruleblock\n                 | conditions ruleblock\n                 | actions ruleblock\n                 | emptyevent : EVENT blockconditions : CONDITIONS blockactions : ACTIONS blockstatements : statements statement\n                  | statementstatement : simple_stmtsimple_stmt : expr_list NEWLINE\n                   | expr_listcompound_stmt : number_expr\n                     | value_exprblock : NEWLINE INDENT statements DEDENT\n             | simple_stmtexpr_list : compare_expr\n                 | assign_expr\n                 | COMMENT_TAG expr_listexpr : valuevalue : variable\n             | compound_stmt\n             | number_const\n             | vector\n             | array\n             | emptyafter_expr : '(' value_list ')'\n                  | block\n                  | NEWLINEvalue_list : value\n                  | value ',' value_list\n    compare_expr : expr\n                    | compare_expr COMPARE exprassign_expr : value ASSIGN valuenumber_expr : NUMBER after_exprvalue_expr : VALUE after_exprnumber_const : INTEGER\n                    | FLOATvariable : name\n                | global_var\n                | player_varname : NAMEglobal_var : GLOBAL_VARplayer_var : PLAYER_VARvector : COMPARE value ',' value ',' value COMPAREarray : '[' value_list ']'empty : COMMENT\n             |"
    
_lr_action_items = {'RULE':([0,2,3,16,],[3,3,-3,-4,]),'$end':([1,2,3,4,16,],[0,-1,-3,-2,-4,]),'NEWLINE':([3,12,13,14,15,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,71,74,75,78,81,],[5,21,21,21,-51,-20,52,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,62,62,-52,-15,-52,-23,-52,-39,-32,-33,-40,-52,-13,-14,-37,-24,-38,-50,-19,-12,-31,-49,]),'INDENT':([5,21,62,],[6,51,51,]),'EVENT':([6,8,9,10,12,13,14,15,20,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,56,59,61,62,63,67,68,70,71,74,78,81,],[12,12,12,12,-52,-52,-52,-51,-9,-20,-16,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,-52,-52,-10,-11,-15,-52,-23,-52,-39,-32,-33,-40,-37,-24,-38,-50,-19,-31,-49,]),'CONDITIONS':([6,8,9,10,12,13,14,15,20,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,56,59,61,62,63,67,68,70,71,74,78,81,],[13,13,13,13,-52,-52,-52,-51,-9,-20,-16,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,-52,-52,-10,-11,-15,-52,-23,-52,-39,-32,-33,-40,-37,-24,-38,-50,-19,-31,-49,]),'ACTIONS':([6,8,9,10,12,13,14,15,20,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,56,59,61,62,63,67,68,70,71,74,78,81,],[14,14,14,14,-52,-52,-52,-51,-9,-20,-16,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,-52,-52,-10,-11,-15,-52,-23,-52,-39,-32,-33,-40,-37,-24,-38,-50,-19,-31,-49,]),'COMMENT':([6,8,9,10,12,13,14,15,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[15,15,15,15,15,15,15,-51,-9,-20,-16,-21,-22,15,-36,15,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,15,-46,-47,-48,15,15,-10,-11,15,-15,15,-23,15,-39,15,-32,-33,-40,15,-13,-14,-37,-24,15,-38,-50,15,-19,-12,-31,15,-49,]),'DEDENT':([6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,71,74,75,78,81,],[-52,16,-52,-52,-52,-8,-52,-52,-52,-51,-5,-6,-7,-9,-20,-16,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,-52,-52,-10,-11,-52,-15,-52,-23,-52,-39,-32,-33,-40,74,-13,-14,-37,-24,-38,-50,-19,-12,-31,-49,]),'COMMENT_TAG':([12,13,14,15,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,71,74,75,78,81,],[26,26,26,-51,-20,-16,-21,-22,26,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,26,26,26,-15,-52,-23,-52,-39,-32,-33,-40,26,-13,-14,-37,-24,-38,-50,-19,-12,-31,-49,]),'INTEGER':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[41,41,41,-51,-20,-16,-21,-22,41,-36,41,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,41,-46,-47,-48,41,41,41,-15,41,-23,41,-39,41,-32,-33,-40,41,-13,-14,-37,-24,41,-38,-50,41,-19,-12,-31,41,-49,]),'FLOAT':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[42,42,42,-51,-20,-16,-21,-22,42,-36,42,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,42,-46,-47,-48,42,42,42,-15,42,-23,42,-39,42,-32,-33,-40,42,-13,-14,-37,-24,42,-38,-50,42,-19,-12,-31,42,-49,]),'COMPARE':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,80,81,],[28,28,28,-51,-20,-16,53,-22,28,-36,28,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,28,-46,-47,-48,28,28,28,-15,28,-23,28,-39,28,-32,-33,-40,28,-13,-14,-37,-24,28,-38,-50,28,-19,-12,-31,28,81,-49,]),'[':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[43,43,43,-51,-20,-16,-21,-22,43,-36,43,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,43,-46,-47,-48,43,43,43,-15,43,-23,43,-39,43,-32,-33,-40,43,-13,-14,-37,-24,43,-38,-50,43,-19,-12,-31,43,-49,]),'ASSIGN':([12,13,14,15,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,51,52,53,54,56,59,61,62,63,64,65,66,67,68,70,71,74,75,78,81,],[-52,-52,-52,-51,-20,-16,-21,-22,-52,-36,56,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,-52,-52,-52,-15,-52,-23,-52,-39,-32,-33,-40,-52,-13,-14,-37,-24,-38,-50,-19,-12,-31,-49,]),'NAME':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[44,44,44,-51,-20,-16,-21,-22,44,-36,44,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,44,-46,-47,-48,44,44,44,-15,44,-23,44,-39,44,-32,-33,-40,44,-13,-14,-37,-24,44,-38,-50,44,-19,-12,-31,44,-49,]),'GLOBAL_VAR':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[45,45,45,-51,-20,-16,-21,-22,45,-36,45,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,45,-46,-47,-48,45,45,45,-15,45,-23,45,-39,45,-32,-33,-40,45,-13,-14,-37,-24,45,-38,-50,45,-19,-12,-31,45,-49,]),'PLAYER_VAR':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[46,46,46,-51,-20,-16,-21,-22,46,-36,46,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,46,-46,-47,-48,46,46,46,-15,46,-23,46,-39,46,-32,-33,-40,46,-13,-14,-37,-24,46,-38,-50,46,-19,-12,-31,46,-49,]),'NUMBER':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[47,47,47,-51,-20,-16,-21,-22,47,-36,47,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,47,-46,-47,-48,47,47,47,-15,47,-23,47,-39,47,-32,-33,-40,47,-13,-14,-37,-24,47,-38,-50,47,-19,-12,-31,47,-49,]),'VALUE':([12,13,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,78,79,81,],[48,48,48,-51,-20,-16,-21,-22,48,-36,48,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,48,-46,-47,-48,48,48,48,-15,48,-23,48,-39,48,-32,-33,-40,48,-13,-14,-37,-24,48,-38,-50,48,-19,-12,-31,48,-49,]),',':([15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,56,58,59,60,61,62,63,67,68,69,70,71,72,74,76,78,81,],[-51,-20,-16,-21,-22,-52,-36,-52,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-52,-46,-47,-48,-52,-52,-15,-52,-23,69,-52,72,-39,-52,-32,-33,-40,-37,-24,-52,-38,-50,-52,-19,79,-31,-49,]),']':([15,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,56,57,58,59,61,62,63,67,68,70,71,72,74,77,78,81,],[-51,-20,-16,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-52,-46,-47,-48,-52,-52,-15,-52,-23,-52,71,-34,-39,-32,-33,-40,-37,-24,-38,-50,-52,-19,-35,-31,-49,]),')':([15,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,52,53,54,56,58,59,60,61,62,63,67,68,70,71,72,73,74,77,78,81,],[-51,-20,-16,-21,-22,-52,-36,-24,-25,-26,-27,-28,-29,-30,-43,-44,-45,-17,-18,-41,-42,-46,-47,-48,-52,-52,-15,-52,-23,-52,-34,-39,-52,-32,-33,-40,-37,-24,-38,-50,-52,78,-19,-35,-31,-49,]),'(':([47,48,],[60,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ruleset':([0,2,],[1,4,]),'rule':([0,2,],[2,2,]),'ruleblock':([6,8,9,10,],[7,17,18,19,]),'event':([6,8,9,10,],[8,8,8,8,]),'conditions':([6,8,9,10,],[9,9,9,9,]),'actions':([6,8,9,10,],[10,10,10,10,]),'empty':([6,8,9,10,12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[11,11,11,11,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'block':([12,13,14,47,48,],[20,49,50,61,61,]),'simple_stmt':([12,13,14,47,48,51,64,],[22,22,22,22,22,66,66,]),'expr_list':([12,13,14,26,47,48,51,64,],[23,23,23,54,23,23,23,23,]),'compare_expr':([12,13,14,26,47,48,51,64,],[24,24,24,24,24,24,24,24,]),'assign_expr':([12,13,14,26,47,48,51,64,],[25,25,25,25,25,25,25,25,]),'expr':([12,13,14,26,47,48,51,53,64,],[27,27,27,27,27,27,27,67,27,]),'value':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[29,29,29,29,55,58,29,29,29,68,70,58,29,76,58,80,]),'variable':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'compound_stmt':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'number_const':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'vector':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'array':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'name':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'global_var':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'player_var':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'number_expr':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'value_expr':([12,13,14,26,28,43,47,48,51,53,56,60,64,69,72,79,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'value_list':([43,60,72,],[57,73,77,]),'after_expr':([47,48,],[59,63,]),'statements':([51,],[64,]),'statement':([51,64,],[65,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ruleset","S'",1,None,None,None),
  ('ruleset -> rule','ruleset',1,'p_ruleset','Parser.py',6),
  ('ruleset -> rule ruleset','ruleset',2,'p_ruleset','Parser.py',7),
  ('rule -> RULE','rule',1,'p_rule','Parser.py',13),
  ('rule -> RULE NEWLINE INDENT ruleblock DEDENT','rule',5,'p_rule','Parser.py',14),
  ('ruleblock -> event ruleblock','ruleblock',2,'p_ruleblock','Parser.py',26),
  ('ruleblock -> conditions ruleblock','ruleblock',2,'p_ruleblock','Parser.py',27),
  ('ruleblock -> actions ruleblock','ruleblock',2,'p_ruleblock','Parser.py',28),
  ('ruleblock -> empty','ruleblock',1,'p_ruleblock','Parser.py',29),
  ('event -> EVENT block','event',2,'p_event','Parser.py',35),
  ('conditions -> CONDITIONS block','conditions',2,'p_conditions','Parser.py',39),
  ('actions -> ACTIONS block','actions',2,'p_actions','Parser.py',43),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',47),
  ('statements -> statement','statements',1,'p_statements','Parser.py',48),
  ('statement -> simple_stmt','statement',1,'p_statement','Parser.py',54),
  ('simple_stmt -> expr_list NEWLINE','simple_stmt',2,'p_simple_stmt','Parser.py',58),
  ('simple_stmt -> expr_list','simple_stmt',1,'p_simple_stmt','Parser.py',59),
  ('compound_stmt -> number_expr','compound_stmt',1,'p_compound_stmt','Parser.py',63),
  ('compound_stmt -> value_expr','compound_stmt',1,'p_compound_stmt','Parser.py',64),
  ('block -> NEWLINE INDENT statements DEDENT','block',4,'p_block','Parser.py',68),
  ('block -> simple_stmt','block',1,'p_block','Parser.py',69),
  ('expr_list -> compare_expr','expr_list',1,'p_expr_list','Parser.py',77),
  ('expr_list -> assign_expr','expr_list',1,'p_expr_list','Parser.py',78),
  ('expr_list -> COMMENT_TAG expr_list','expr_list',2,'p_expr_list','Parser.py',79),
  ('expr -> value','expr',1,'p_expr','Parser.py',85),
  ('value -> variable','value',1,'p_value','Parser.py',89),
  ('value -> compound_stmt','value',1,'p_value','Parser.py',90),
  ('value -> number_const','value',1,'p_value','Parser.py',91),
  ('value -> vector','value',1,'p_value','Parser.py',92),
  ('value -> array','value',1,'p_value','Parser.py',93),
  ('value -> empty','value',1,'p_value','Parser.py',94),
  ('after_expr -> ( value_list )','after_expr',3,'p_after_expr','Parser.py',98),
  ('after_expr -> block','after_expr',1,'p_after_expr','Parser.py',99),
  ('after_expr -> NEWLINE','after_expr',1,'p_after_expr','Parser.py',100),
  ('value_list -> value','value_list',1,'p_value_list','Parser.py',108),
  ('value_list -> value , value_list','value_list',3,'p_value_list','Parser.py',109),
  ('compare_expr -> expr','compare_expr',1,'p_compare_expr','Parser.py',116),
  ('compare_expr -> compare_expr COMPARE expr','compare_expr',3,'p_compare_expr','Parser.py',117),
  ('assign_expr -> value ASSIGN value','assign_expr',3,'p_assign_expr','Parser.py',123),
  ('number_expr -> NUMBER after_expr','number_expr',2,'p_number_expr','Parser.py',127),
  ('value_expr -> VALUE after_expr','value_expr',2,'p_value_expr','Parser.py',131),
  ('number_const -> INTEGER','number_const',1,'p_number_const','Parser.py',139),
  ('number_const -> FLOAT','number_const',1,'p_number_const','Parser.py',140),
  ('variable -> name','variable',1,'p_variable','Parser.py',144),
  ('variable -> global_var','variable',1,'p_variable','Parser.py',145),
  ('variable -> player_var','variable',1,'p_variable','Parser.py',146),
  ('name -> NAME','name',1,'p_name','Parser.py',150),
  ('global_var -> GLOBAL_VAR','global_var',1,'p_global_var','Parser.py',154),
  ('player_var -> PLAYER_VAR','player_var',1,'p_player_var','Parser.py',158),
  ('vector -> COMPARE value , value , value COMPARE','vector',7,'p_vector','Parser.py',162),
  ('array -> [ value_list ]','array',3,'p_array','Parser.py',166),
  ('empty -> COMMENT','empty',1,'p_empty','Parser.py',172),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',173),
]
