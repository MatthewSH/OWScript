
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ACTION ACTIONS ASSIGN BOOLEAN COMMENT COMPARE CONDITIONS DEDENT EOF EVENT EVENT_TYPE FLOAT FUNC GLOBAL_VAR INDENT INTEGER MAP NAME NEWLINE NUMBER PLAYER_VAR QUOTE RULE VALUE WHITESPACEruleset : rule\n               | rule rulesetrule : RULE \n            | RULE NEWLINE INDENT ruleblock DEDENTruleblock : event\n                 | conditions\n                 | actions\n                 | NEWLINE ruleblockevent : EVENT blockconditions : CONDITIONS blockactions : ACTIONS blockstatements : statements statement\n                  | statementstatement : simple_stmtsimple_stmt : expr_list NEWLINE\n                   | expr_listcompound_stmt : number_expr\n                     | value_exprblock : NEWLINE INDENT statements DEDENT\n             | simple_stmtexpr_list : compare_expr\n                 | assign_expr\n                 | COMMENT expr_listexpr : comparecompare : value\n               | value COMPARE compare\n    value : EVENT_TYPE\n             | variable\n             | compound_stmt\n             | number\n             | vector\n             | emptyafter_expr : '(' value_list ')'\n                  | block\n                  | NEWLINEvalue_list : value\n                  | value ',' value_list\n    compare_expr : expr\n                    | expr COMPARE compare_exprassign_expr : value ASSIGN valuenumber_expr : NUMBER after_exprvalue_expr : VALUE after_exprnumber : INTEGER\n              | FLOATvariable : NAME\n                | global_var\n                | player_varglobal_var : GLOBAL_VARplayer_var : PLAYER_VARvector : COMPARE value ',' value ',' value COMPAREempty :"
    
_lr_action_items = {'RULE':([0,2,3,16,],[3,3,-3,-4,]),'$end':([1,2,3,4,16,],[0,-1,-3,-2,-4,]),'NEWLINE':([3,6,7,12,13,14,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,56,57,58,59,60,61,62,63,65,66,69,70,72,77,],[5,7,7,18,18,18,-20,48,-21,-22,-51,-38,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,57,57,-51,-15,-23,-51,-51,-51,-41,-34,-35,-42,-51,-13,-14,-39,-25,-40,-26,-19,-12,-33,-50,]),'INDENT':([5,18,57,],[6,47,47,]),'EVENT':([6,7,],[12,12,]),'CONDITIONS':([6,7,],[13,13,]),'ACTIONS':([6,7,],[14,14,]),'DEDENT':([8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,56,57,58,59,60,61,62,63,65,66,69,70,72,77,],[16,-5,-6,-7,-51,-51,-51,-8,-9,-20,-16,-21,-22,-51,-38,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,-51,-51,-10,-11,-51,-15,-23,-51,-51,-51,-41,-34,-35,-42,69,-13,-14,-39,-25,-40,-26,-19,-12,-33,-50,]),'COMMENT':([12,13,14,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,56,57,58,59,60,61,62,63,65,66,69,70,72,77,],[23,23,23,-20,-16,-21,-22,23,-38,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,23,23,23,-15,-23,-51,-51,-51,-41,-34,-35,-42,23,-13,-14,-39,-25,-40,-26,-19,-12,-33,-50,]),'EVENT_TYPE':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[28,28,28,-20,-16,-21,-22,28,-38,28,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,28,28,28,-15,-23,28,28,28,-41,28,-34,-35,-42,28,-13,-14,-39,-25,28,-40,-26,-19,-12,-33,28,28,-50,]),'NAME':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[34,34,34,-20,-16,-21,-22,34,-38,34,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,34,34,34,-15,-23,34,34,34,-41,34,-34,-35,-42,34,-13,-14,-39,-25,34,-40,-26,-19,-12,-33,34,34,-50,]),'INTEGER':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[39,39,39,-20,-16,-21,-22,39,-38,39,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,39,39,39,-15,-23,39,39,39,-41,39,-34,-35,-42,39,-13,-14,-39,-25,39,-40,-26,-19,-12,-33,39,39,-50,]),'FLOAT':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[40,40,40,-20,-16,-21,-22,40,-38,40,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,40,40,40,-15,-23,40,40,40,-41,40,-34,-35,-42,40,-13,-14,-39,-25,40,-40,-26,-19,-12,-33,40,40,-50,]),'COMPARE':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,76,77,],[25,25,25,-20,-16,-21,-22,25,50,25,53,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,25,25,25,-15,-23,25,25,25,-41,25,-34,-35,-42,25,-13,-14,-39,53,25,-40,-26,-19,-12,-33,25,25,77,-50,]),'ASSIGN':([12,13,14,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,56,57,58,59,60,61,62,63,65,66,69,70,72,77,],[-51,-51,-51,-20,-16,-21,-22,-51,-38,52,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,-51,-51,-51,-15,-23,-51,-51,-51,-41,-34,-35,-42,-51,-13,-14,-39,-25,-40,-26,-19,-12,-33,-50,]),'GLOBAL_VAR':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[41,41,41,-20,-16,-21,-22,41,-38,41,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,41,41,41,-15,-23,41,41,41,-41,41,-34,-35,-42,41,-13,-14,-39,-25,41,-40,-26,-19,-12,-33,41,41,-50,]),'PLAYER_VAR':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[42,42,42,-20,-16,-21,-22,42,-38,42,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,42,42,42,-15,-23,42,42,42,-41,42,-34,-35,-42,42,-13,-14,-39,-25,42,-40,-26,-19,-12,-33,42,42,-50,]),'NUMBER':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[43,43,43,-20,-16,-21,-22,43,-38,43,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,43,43,43,-15,-23,43,43,43,-41,43,-34,-35,-42,43,-13,-14,-39,-25,43,-40,-26,-19,-12,-33,43,43,-50,]),'VALUE':([12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,77,],[44,44,44,-20,-16,-21,-22,44,-38,44,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,44,44,44,-15,-23,44,44,44,-41,44,-34,-35,-42,44,-13,-14,-39,-25,44,-40,-26,-19,-12,-33,44,44,-50,]),',':([19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,62,63,64,65,66,68,69,71,72,73,77,],[-20,-16,-21,-22,-51,-38,-51,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,-51,-51,-15,-23,-51,64,-51,-51,-41,-51,-34,-35,-42,-39,-25,-51,-40,-26,73,-19,74,-33,-51,-50,]),')':([19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,48,49,50,52,53,54,55,56,57,58,62,63,65,66,67,68,69,72,73,75,77,],[-20,-16,-21,-22,-51,-38,-25,-24,-27,-28,-29,-30,-31,-32,-45,-46,-47,-17,-18,-43,-44,-48,-49,-51,-51,-15,-23,-51,-51,-51,-41,-51,-34,-35,-42,-39,-25,-40,-26,72,-36,-19,-33,-51,-37,-50,]),'(':([43,44,],[55,55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ruleset':([0,2,],[1,4,]),'rule':([0,2,],[2,2,]),'ruleblock':([6,7,],[8,15,]),'event':([6,7,],[9,9,]),'conditions':([6,7,],[10,10,]),'actions':([6,7,],[11,11,]),'block':([12,13,14,43,44,],[17,45,46,56,56,]),'simple_stmt':([12,13,14,43,44,47,59,],[19,19,19,19,19,61,61,]),'expr_list':([12,13,14,23,43,44,47,59,],[20,20,20,49,20,20,20,20,]),'compare_expr':([12,13,14,23,43,44,47,50,59,],[21,21,21,21,21,21,21,62,21,]),'assign_expr':([12,13,14,23,43,44,47,59,],[22,22,22,22,22,22,22,22,]),'expr':([12,13,14,23,43,44,47,50,59,],[24,24,24,24,24,24,24,24,24,]),'value':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[26,26,26,26,51,26,26,26,63,65,63,68,26,71,68,76,]),'compare':([12,13,14,23,43,44,47,50,53,59,],[27,27,27,27,27,27,27,27,66,27,]),'variable':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'compound_stmt':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'number':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'vector':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'empty':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'global_var':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'player_var':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'number_expr':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'value_expr':([12,13,14,23,25,43,44,47,50,52,53,55,59,64,73,74,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'after_expr':([43,44,],[54,58,]),'statements':([47,],[59,]),'statement':([47,59,],[60,70,]),'value_list':([55,73,],[67,75,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ruleset","S'",1,None,None,None),
  ('ruleset -> rule','ruleset',1,'p_ruleset','Parser.py',6),
  ('ruleset -> rule ruleset','ruleset',2,'p_ruleset','Parser.py',7),
  ('rule -> RULE','rule',1,'p_rule','Parser.py',13),
  ('rule -> RULE NEWLINE INDENT ruleblock DEDENT','rule',5,'p_rule','Parser.py',14),
  ('ruleblock -> event','ruleblock',1,'p_ruleblock','Parser.py',26),
  ('ruleblock -> conditions','ruleblock',1,'p_ruleblock','Parser.py',27),
  ('ruleblock -> actions','ruleblock',1,'p_ruleblock','Parser.py',28),
  ('ruleblock -> NEWLINE ruleblock','ruleblock',2,'p_ruleblock','Parser.py',29),
  ('event -> EVENT block','event',2,'p_event','Parser.py',35),
  ('conditions -> CONDITIONS block','conditions',2,'p_conditions','Parser.py',39),
  ('actions -> ACTIONS block','actions',2,'p_actions','Parser.py',43),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',47),
  ('statements -> statement','statements',1,'p_statements','Parser.py',48),
  ('statement -> simple_stmt','statement',1,'p_statement','Parser.py',54),
  ('simple_stmt -> expr_list NEWLINE','simple_stmt',2,'p_simple_stmt','Parser.py',58),
  ('simple_stmt -> expr_list','simple_stmt',1,'p_simple_stmt','Parser.py',59),
  ('compound_stmt -> number_expr','compound_stmt',1,'p_compound_stmt','Parser.py',63),
  ('compound_stmt -> value_expr','compound_stmt',1,'p_compound_stmt','Parser.py',64),
  ('block -> NEWLINE INDENT statements DEDENT','block',4,'p_block','Parser.py',68),
  ('block -> simple_stmt','block',1,'p_block','Parser.py',69),
  ('expr_list -> compare_expr','expr_list',1,'p_expr_list','Parser.py',77),
  ('expr_list -> assign_expr','expr_list',1,'p_expr_list','Parser.py',78),
  ('expr_list -> COMMENT expr_list','expr_list',2,'p_expr_list','Parser.py',79),
  ('expr -> compare','expr',1,'p_expr','Parser.py',85),
  ('compare -> value','compare',1,'p_compare','Parser.py',89),
  ('compare -> value COMPARE compare','compare',3,'p_compare','Parser.py',90),
  ('value -> EVENT_TYPE','value',1,'p_value','Parser.py',97),
  ('value -> variable','value',1,'p_value','Parser.py',98),
  ('value -> compound_stmt','value',1,'p_value','Parser.py',99),
  ('value -> number','value',1,'p_value','Parser.py',100),
  ('value -> vector','value',1,'p_value','Parser.py',101),
  ('value -> empty','value',1,'p_value','Parser.py',102),
  ('after_expr -> ( value_list )','after_expr',3,'p_after_expr','Parser.py',106),
  ('after_expr -> block','after_expr',1,'p_after_expr','Parser.py',107),
  ('after_expr -> NEWLINE','after_expr',1,'p_after_expr','Parser.py',108),
  ('value_list -> value','value_list',1,'p_value_list','Parser.py',114),
  ('value_list -> value , value_list','value_list',3,'p_value_list','Parser.py',115),
  ('compare_expr -> expr','compare_expr',1,'p_compare_expr','Parser.py',122),
  ('compare_expr -> expr COMPARE compare_expr','compare_expr',3,'p_compare_expr','Parser.py',123),
  ('assign_expr -> value ASSIGN value','assign_expr',3,'p_assign_expr','Parser.py',129),
  ('number_expr -> NUMBER after_expr','number_expr',2,'p_number_expr','Parser.py',133),
  ('value_expr -> VALUE after_expr','value_expr',2,'p_value_expr','Parser.py',137),
  ('number -> INTEGER','number',1,'p_number','Parser.py',141),
  ('number -> FLOAT','number',1,'p_number','Parser.py',142),
  ('variable -> NAME','variable',1,'p_variable','Parser.py',146),
  ('variable -> global_var','variable',1,'p_variable','Parser.py',147),
  ('variable -> player_var','variable',1,'p_variable','Parser.py',148),
  ('global_var -> GLOBAL_VAR','global_var',1,'p_global_var','Parser.py',152),
  ('player_var -> PLAYER_VAR','player_var',1,'p_player_var','Parser.py',156),
  ('vector -> COMPARE value , value , value COMPARE','vector',7,'p_vector','Parser.py',160),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',164),
]
