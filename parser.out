Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    QUOTE
    WHITESPACE

Grammar

Rule 0     S' -> program
Rule 1     program -> function program
Rule 2     program -> ruleset program
Rule 3     program -> empty
Rule 4     function -> FUNCTION funcbody
Rule 5     funcbody -> ruleset
Rule 6     funcbody -> rule
Rule 7     funcbody -> ruleblock
Rule 8     funcbody -> block
Rule 9     funcbody -> value
Rule 10    funcbody -> NEWLINE empty
Rule 11    ruleset -> rule
Rule 12    ruleset -> ruleset rule
Rule 13    rule -> RULE
Rule 14    rule -> RULE NEWLINE INDENT ruleblock DEDENT
Rule 15    ruleblock -> event ruleblock
Rule 16    ruleblock -> conditions ruleblock
Rule 17    ruleblock -> actions ruleblock
Rule 18    ruleblock -> NEWLINE ruleblock
Rule 19    ruleblock -> empty
Rule 20    event -> EVENT block
Rule 21    conditions -> CONDITIONS block
Rule 22    actions -> ACTIONS block
Rule 23    statements -> statements statement
Rule 24    statements -> statement
Rule 25    statement -> simple_stmt
Rule 26    simple_stmt -> expr NEWLINE
Rule 27    simple_stmt -> expr
Rule 28    compound_stmt -> number_expr
Rule 29    compound_stmt -> value_expr
Rule 30    compound_stmt -> action_expr
Rule 31    block -> NEWLINE INDENT statements DEDENT
Rule 32    block -> simple_stmt
Rule 33    expr -> compare
Rule 34    expr -> assign
Rule 35    expr -> ANNOTATION expr
Rule 36    arith_expr -> term
Rule 37    arith_expr -> arith_expr + arith_expr
Rule 38    arith_expr -> arith_expr - arith_expr
Rule 39    term -> value
Rule 40    term -> term * term
Rule 41    term -> term / term
Rule 42    value -> variable
Rule 43    value -> compound_stmt
Rule 44    value -> number_const
Rule 45    value -> vector
Rule 46    value -> unary
Rule 47    value -> array
Rule 48    value -> time
Rule 49    value -> ( compare )
Rule 50    value -> function
Rule 51    value -> empty
Rule 52    after_expr -> ( value_list )
Rule 53    after_expr -> block
Rule 54    after_expr -> NEWLINE
Rule 55    value_list -> value
Rule 56    value_list -> value , value_list
Rule 57    unary -> - value
Rule 58    compare -> arith_expr
Rule 59    compare -> compare COMPARE arith_expr
Rule 60    assign -> value ASSIGN compare
Rule 61    number_expr -> NUMBER after_expr
Rule 62    value_expr -> VALUE after_expr
Rule 63    action_expr -> ACTION after_expr
Rule 64    time -> TIME
Rule 65    number_const -> INTEGER
Rule 66    number_const -> FLOAT
Rule 67    variable -> name
Rule 68    variable -> global_var
Rule 69    variable -> player_var
Rule 70    name -> NAME
Rule 71    global_var -> GLOBAL_VAR
Rule 72    player_var -> PLAYER_VAR
Rule 73    vector -> COMPARE value , value , value COMPARE
Rule 74    array -> [ value_list ]
Rule 75    empty -> COMMENT
Rule 76    empty -> <empty>

Terminals, with rules where they appear

(                    : 49 52
)                    : 49 52
*                    : 40
+                    : 37
,                    : 56 73 73
-                    : 38 57
/                    : 41
ACTION               : 63
ACTIONS              : 22
ANNOTATION           : 35
ASSIGN               : 60
BOOLEAN              : 
COMMENT              : 75
COMPARE              : 59 73 73
CONDITIONS           : 21
DEDENT               : 14 31
EVENT                : 20
FLOAT                : 66
FUNCTION             : 4
GLOBAL_VAR           : 71
INDENT               : 14 31
INTEGER              : 65
NAME                 : 70
NEWLINE              : 10 14 18 26 31 54
NUMBER               : 61
PLAYER_VAR           : 72
QUOTE                : 
RULE                 : 13 14
TIME                 : 64
VALUE                : 62
WHITESPACE           : 
[                    : 74
]                    : 74
error                : 

Nonterminals, with rules where they appear

action_expr          : 30
actions              : 17
after_expr           : 61 62 63
arith_expr           : 37 37 38 38 58 59
array                : 47
assign               : 34
block                : 8 20 21 22 53
compare              : 33 49 59 60
compound_stmt        : 43
conditions           : 16
empty                : 3 10 19 51
event                : 15
expr                 : 26 27 35
funcbody             : 4
function             : 1 50
global_var           : 68
name                 : 67
number_const         : 44
number_expr          : 28
player_var           : 69
program              : 1 2 0
rule                 : 6 11 12
ruleblock            : 7 14 15 16 17 18
ruleset              : 2 5 12
simple_stmt          : 25 32
statement            : 23 24
statements           : 23 31
term                 : 36 40 40 41 41
time                 : 48
unary                : 46
value                : 9 39 55 56 57 60 73 73 73
value_expr           : 29
value_list           : 52 56 74
variable             : 42
vector               : 45

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function program
    (2) program -> . ruleset program
    (3) program -> . empty
    (4) function -> . FUNCTION funcbody
    (11) ruleset -> . rule
    (12) ruleset -> . ruleset rule
    (75) empty -> . COMMENT
    (76) empty -> .
    (13) rule -> . RULE
    (14) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    $end            reduce using rule 76 (empty -> .)
    RULE            shift and go to state 8

    program                        shift and go to state 1
    function                       shift and go to state 2
    ruleset                        shift and go to state 3
    empty                          shift and go to state 4
    rule                           shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> function . program
    (1) program -> . function program
    (2) program -> . ruleset program
    (3) program -> . empty
    (4) function -> . FUNCTION funcbody
    (11) ruleset -> . rule
    (12) ruleset -> . ruleset rule
    (75) empty -> . COMMENT
    (76) empty -> .
    (13) rule -> . RULE
    (14) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    $end            reduce using rule 76 (empty -> .)
    RULE            shift and go to state 8

    function                       shift and go to state 2
    program                        shift and go to state 9
    ruleset                        shift and go to state 3
    empty                          shift and go to state 4
    rule                           shift and go to state 6

state 3

    (2) program -> ruleset . program
    (12) ruleset -> ruleset . rule
    (1) program -> . function program
    (2) program -> . ruleset program
    (3) program -> . empty
    (13) rule -> . RULE
    (14) rule -> . RULE NEWLINE INDENT ruleblock DEDENT
    (4) function -> . FUNCTION funcbody
    (11) ruleset -> . rule
    (12) ruleset -> . ruleset rule
    (75) empty -> . COMMENT
    (76) empty -> .

    RULE            shift and go to state 8
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    $end            reduce using rule 76 (empty -> .)

    ruleset                        shift and go to state 3
    program                        shift and go to state 10
    rule                           shift and go to state 11
    function                       shift and go to state 2
    empty                          shift and go to state 4

state 4

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 5

    (4) function -> FUNCTION . funcbody
    (5) funcbody -> . ruleset
    (6) funcbody -> . rule
    (7) funcbody -> . ruleblock
    (8) funcbody -> . block
    (9) funcbody -> . value
    (10) funcbody -> . NEWLINE empty
    (11) ruleset -> . rule
    (12) ruleset -> . ruleset rule
    (13) rule -> . RULE
    (14) rule -> . RULE NEWLINE INDENT ruleblock DEDENT
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block
    (75) empty -> . COMMENT
    (76) empty -> .
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for RULE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for EVENT resolved as shift
  ! shift/reduce conflict for CONDITIONS resolved as shift
  ! shift/reduce conflict for ACTIONS resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    NEWLINE         shift and go to state 18
    RULE            shift and go to state 8
    (               shift and go to state 31
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36
    COMMENT         shift and go to state 7
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    ANNOTATION      shift and go to state 51
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! RULE            [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! EVENT           [ reduce using rule 76 (empty -> .) ]
  ! CONDITIONS      [ reduce using rule 76 (empty -> .) ]
  ! ACTIONS         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    funcbody                       shift and go to state 12
    ruleset                        shift and go to state 13
    rule                           shift and go to state 14
    ruleblock                      shift and go to state 15
    block                          shift and go to state 16
    value                          shift and go to state 17
    empty                          shift and go to state 19
    event                          shift and go to state 20
    conditions                     shift and go to state 21
    actions                        shift and go to state 22
    simple_stmt                    shift and go to state 23
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    compare                        shift and go to state 32
    function                       shift and go to state 33
    expr                           shift and go to state 37
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    term                           shift and go to state 59

state 6

    (11) ruleset -> rule .

    RULE            reduce using rule 11 (ruleset -> rule .)
    FUNCTION        reduce using rule 11 (ruleset -> rule .)
    COMMENT         reduce using rule 11 (ruleset -> rule .)
    $end            reduce using rule 11 (ruleset -> rule .)


state 7

    (75) empty -> COMMENT .

    $end            reduce using rule 75 (empty -> COMMENT .)
    FUNCTION        reduce using rule 75 (empty -> COMMENT .)
    COMMENT         reduce using rule 75 (empty -> COMMENT .)
    RULE            reduce using rule 75 (empty -> COMMENT .)
    ASSIGN          reduce using rule 75 (empty -> COMMENT .)
    *               reduce using rule 75 (empty -> COMMENT .)
    /               reduce using rule 75 (empty -> COMMENT .)
    +               reduce using rule 75 (empty -> COMMENT .)
    -               reduce using rule 75 (empty -> COMMENT .)
    COMPARE         reduce using rule 75 (empty -> COMMENT .)
    NEWLINE         reduce using rule 75 (empty -> COMMENT .)
    )               reduce using rule 75 (empty -> COMMENT .)
    EVENT           reduce using rule 75 (empty -> COMMENT .)
    CONDITIONS      reduce using rule 75 (empty -> COMMENT .)
    ACTIONS         reduce using rule 75 (empty -> COMMENT .)
    DEDENT          reduce using rule 75 (empty -> COMMENT .)
    ,               reduce using rule 75 (empty -> COMMENT .)
    ]               reduce using rule 75 (empty -> COMMENT .)
    ANNOTATION      reduce using rule 75 (empty -> COMMENT .)
    (               reduce using rule 75 (empty -> COMMENT .)
    INTEGER         reduce using rule 75 (empty -> COMMENT .)
    FLOAT           reduce using rule 75 (empty -> COMMENT .)
    [               reduce using rule 75 (empty -> COMMENT .)
    TIME            reduce using rule 75 (empty -> COMMENT .)
    NAME            reduce using rule 75 (empty -> COMMENT .)
    GLOBAL_VAR      reduce using rule 75 (empty -> COMMENT .)
    PLAYER_VAR      reduce using rule 75 (empty -> COMMENT .)
    NUMBER          reduce using rule 75 (empty -> COMMENT .)
    VALUE           reduce using rule 75 (empty -> COMMENT .)
    ACTION          reduce using rule 75 (empty -> COMMENT .)


state 8

    (13) rule -> RULE .
    (14) rule -> RULE . NEWLINE INDENT ruleblock DEDENT

  ! shift/reduce conflict for NEWLINE resolved as shift
    RULE            reduce using rule 13 (rule -> RULE .)
    FUNCTION        reduce using rule 13 (rule -> RULE .)
    COMMENT         reduce using rule 13 (rule -> RULE .)
    $end            reduce using rule 13 (rule -> RULE .)
    ASSIGN          reduce using rule 13 (rule -> RULE .)
    *               reduce using rule 13 (rule -> RULE .)
    /               reduce using rule 13 (rule -> RULE .)
    +               reduce using rule 13 (rule -> RULE .)
    -               reduce using rule 13 (rule -> RULE .)
    COMPARE         reduce using rule 13 (rule -> RULE .)
    )               reduce using rule 13 (rule -> RULE .)
    EVENT           reduce using rule 13 (rule -> RULE .)
    CONDITIONS      reduce using rule 13 (rule -> RULE .)
    ACTIONS         reduce using rule 13 (rule -> RULE .)
    DEDENT          reduce using rule 13 (rule -> RULE .)
    ,               reduce using rule 13 (rule -> RULE .)
    ]               reduce using rule 13 (rule -> RULE .)
    ANNOTATION      reduce using rule 13 (rule -> RULE .)
    (               reduce using rule 13 (rule -> RULE .)
    INTEGER         reduce using rule 13 (rule -> RULE .)
    FLOAT           reduce using rule 13 (rule -> RULE .)
    [               reduce using rule 13 (rule -> RULE .)
    TIME            reduce using rule 13 (rule -> RULE .)
    NAME            reduce using rule 13 (rule -> RULE .)
    GLOBAL_VAR      reduce using rule 13 (rule -> RULE .)
    PLAYER_VAR      reduce using rule 13 (rule -> RULE .)
    NUMBER          reduce using rule 13 (rule -> RULE .)
    VALUE           reduce using rule 13 (rule -> RULE .)
    ACTION          reduce using rule 13 (rule -> RULE .)
    NEWLINE         shift and go to state 60

  ! NEWLINE         [ reduce using rule 13 (rule -> RULE .) ]


state 9

    (1) program -> function program .

    $end            reduce using rule 1 (program -> function program .)


state 10

    (2) program -> ruleset program .

    $end            reduce using rule 2 (program -> ruleset program .)


state 11

    (12) ruleset -> ruleset rule .
    (11) ruleset -> rule .

  ! reduce/reduce conflict for RULE resolved using rule 11 (ruleset -> rule .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 11 (ruleset -> rule .)
  ! reduce/reduce conflict for COMMENT resolved using rule 11 (ruleset -> rule .)
  ! reduce/reduce conflict for $end resolved using rule 11 (ruleset -> rule .)
    RULE            reduce using rule 11 (ruleset -> rule .)
    FUNCTION        reduce using rule 11 (ruleset -> rule .)
    COMMENT         reduce using rule 11 (ruleset -> rule .)
    $end            reduce using rule 11 (ruleset -> rule .)

  ! RULE            [ reduce using rule 12 (ruleset -> ruleset rule .) ]
  ! FUNCTION        [ reduce using rule 12 (ruleset -> ruleset rule .) ]
  ! COMMENT         [ reduce using rule 12 (ruleset -> ruleset rule .) ]
  ! $end            [ reduce using rule 12 (ruleset -> ruleset rule .) ]


state 12

    (4) function -> FUNCTION funcbody .

    FUNCTION        reduce using rule 4 (function -> FUNCTION funcbody .)
    COMMENT         reduce using rule 4 (function -> FUNCTION funcbody .)
    RULE            reduce using rule 4 (function -> FUNCTION funcbody .)
    $end            reduce using rule 4 (function -> FUNCTION funcbody .)
    ASSIGN          reduce using rule 4 (function -> FUNCTION funcbody .)
    *               reduce using rule 4 (function -> FUNCTION funcbody .)
    /               reduce using rule 4 (function -> FUNCTION funcbody .)
    +               reduce using rule 4 (function -> FUNCTION funcbody .)
    -               reduce using rule 4 (function -> FUNCTION funcbody .)
    COMPARE         reduce using rule 4 (function -> FUNCTION funcbody .)
    NEWLINE         reduce using rule 4 (function -> FUNCTION funcbody .)
    )               reduce using rule 4 (function -> FUNCTION funcbody .)
    EVENT           reduce using rule 4 (function -> FUNCTION funcbody .)
    CONDITIONS      reduce using rule 4 (function -> FUNCTION funcbody .)
    ACTIONS         reduce using rule 4 (function -> FUNCTION funcbody .)
    DEDENT          reduce using rule 4 (function -> FUNCTION funcbody .)
    ,               reduce using rule 4 (function -> FUNCTION funcbody .)
    ]               reduce using rule 4 (function -> FUNCTION funcbody .)
    ANNOTATION      reduce using rule 4 (function -> FUNCTION funcbody .)
    (               reduce using rule 4 (function -> FUNCTION funcbody .)
    INTEGER         reduce using rule 4 (function -> FUNCTION funcbody .)
    FLOAT           reduce using rule 4 (function -> FUNCTION funcbody .)
    [               reduce using rule 4 (function -> FUNCTION funcbody .)
    TIME            reduce using rule 4 (function -> FUNCTION funcbody .)
    NAME            reduce using rule 4 (function -> FUNCTION funcbody .)
    GLOBAL_VAR      reduce using rule 4 (function -> FUNCTION funcbody .)
    PLAYER_VAR      reduce using rule 4 (function -> FUNCTION funcbody .)
    NUMBER          reduce using rule 4 (function -> FUNCTION funcbody .)
    VALUE           reduce using rule 4 (function -> FUNCTION funcbody .)
    ACTION          reduce using rule 4 (function -> FUNCTION funcbody .)


state 13

    (5) funcbody -> ruleset .
    (12) ruleset -> ruleset . rule
    (13) rule -> . RULE
    (14) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

  ! shift/reduce conflict for RULE resolved as shift
    FUNCTION        reduce using rule 5 (funcbody -> ruleset .)
    COMMENT         reduce using rule 5 (funcbody -> ruleset .)
    $end            reduce using rule 5 (funcbody -> ruleset .)
    ASSIGN          reduce using rule 5 (funcbody -> ruleset .)
    *               reduce using rule 5 (funcbody -> ruleset .)
    /               reduce using rule 5 (funcbody -> ruleset .)
    +               reduce using rule 5 (funcbody -> ruleset .)
    -               reduce using rule 5 (funcbody -> ruleset .)
    COMPARE         reduce using rule 5 (funcbody -> ruleset .)
    NEWLINE         reduce using rule 5 (funcbody -> ruleset .)
    )               reduce using rule 5 (funcbody -> ruleset .)
    EVENT           reduce using rule 5 (funcbody -> ruleset .)
    CONDITIONS      reduce using rule 5 (funcbody -> ruleset .)
    ACTIONS         reduce using rule 5 (funcbody -> ruleset .)
    DEDENT          reduce using rule 5 (funcbody -> ruleset .)
    ,               reduce using rule 5 (funcbody -> ruleset .)
    ]               reduce using rule 5 (funcbody -> ruleset .)
    ANNOTATION      reduce using rule 5 (funcbody -> ruleset .)
    (               reduce using rule 5 (funcbody -> ruleset .)
    INTEGER         reduce using rule 5 (funcbody -> ruleset .)
    FLOAT           reduce using rule 5 (funcbody -> ruleset .)
    [               reduce using rule 5 (funcbody -> ruleset .)
    TIME            reduce using rule 5 (funcbody -> ruleset .)
    NAME            reduce using rule 5 (funcbody -> ruleset .)
    GLOBAL_VAR      reduce using rule 5 (funcbody -> ruleset .)
    PLAYER_VAR      reduce using rule 5 (funcbody -> ruleset .)
    NUMBER          reduce using rule 5 (funcbody -> ruleset .)
    VALUE           reduce using rule 5 (funcbody -> ruleset .)
    ACTION          reduce using rule 5 (funcbody -> ruleset .)
    RULE            shift and go to state 8

  ! RULE            [ reduce using rule 5 (funcbody -> ruleset .) ]

    rule                           shift and go to state 61

state 14

    (6) funcbody -> rule .
    (11) ruleset -> rule .

  ! reduce/reduce conflict for RULE resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for COMMENT resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for $end resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for * resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for / resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for + resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for - resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for COMPARE resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ) resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for EVENT resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for CONDITIONS resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ACTIONS resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for DEDENT resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for , resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ] resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ANNOTATION resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ( resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for INTEGER resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for FLOAT resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for [ resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for TIME resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for NAME resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for PLAYER_VAR resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for VALUE resolved using rule 6 (funcbody -> rule .)
  ! reduce/reduce conflict for ACTION resolved using rule 6 (funcbody -> rule .)
    FUNCTION        reduce using rule 6 (funcbody -> rule .)
    COMMENT         reduce using rule 6 (funcbody -> rule .)
    RULE            reduce using rule 6 (funcbody -> rule .)
    $end            reduce using rule 6 (funcbody -> rule .)
    ASSIGN          reduce using rule 6 (funcbody -> rule .)
    *               reduce using rule 6 (funcbody -> rule .)
    /               reduce using rule 6 (funcbody -> rule .)
    +               reduce using rule 6 (funcbody -> rule .)
    -               reduce using rule 6 (funcbody -> rule .)
    COMPARE         reduce using rule 6 (funcbody -> rule .)
    NEWLINE         reduce using rule 6 (funcbody -> rule .)
    )               reduce using rule 6 (funcbody -> rule .)
    EVENT           reduce using rule 6 (funcbody -> rule .)
    CONDITIONS      reduce using rule 6 (funcbody -> rule .)
    ACTIONS         reduce using rule 6 (funcbody -> rule .)
    DEDENT          reduce using rule 6 (funcbody -> rule .)
    ,               reduce using rule 6 (funcbody -> rule .)
    ]               reduce using rule 6 (funcbody -> rule .)
    ANNOTATION      reduce using rule 6 (funcbody -> rule .)
    (               reduce using rule 6 (funcbody -> rule .)
    INTEGER         reduce using rule 6 (funcbody -> rule .)
    FLOAT           reduce using rule 6 (funcbody -> rule .)
    [               reduce using rule 6 (funcbody -> rule .)
    TIME            reduce using rule 6 (funcbody -> rule .)
    NAME            reduce using rule 6 (funcbody -> rule .)
    GLOBAL_VAR      reduce using rule 6 (funcbody -> rule .)
    PLAYER_VAR      reduce using rule 6 (funcbody -> rule .)
    NUMBER          reduce using rule 6 (funcbody -> rule .)
    VALUE           reduce using rule 6 (funcbody -> rule .)
    ACTION          reduce using rule 6 (funcbody -> rule .)

  ! RULE            [ reduce using rule 11 (ruleset -> rule .) ]
  ! FUNCTION        [ reduce using rule 11 (ruleset -> rule .) ]
  ! COMMENT         [ reduce using rule 11 (ruleset -> rule .) ]
  ! $end            [ reduce using rule 11 (ruleset -> rule .) ]
  ! ASSIGN          [ reduce using rule 11 (ruleset -> rule .) ]
  ! *               [ reduce using rule 11 (ruleset -> rule .) ]
  ! /               [ reduce using rule 11 (ruleset -> rule .) ]
  ! +               [ reduce using rule 11 (ruleset -> rule .) ]
  ! -               [ reduce using rule 11 (ruleset -> rule .) ]
  ! COMPARE         [ reduce using rule 11 (ruleset -> rule .) ]
  ! NEWLINE         [ reduce using rule 11 (ruleset -> rule .) ]
  ! )               [ reduce using rule 11 (ruleset -> rule .) ]
  ! EVENT           [ reduce using rule 11 (ruleset -> rule .) ]
  ! CONDITIONS      [ reduce using rule 11 (ruleset -> rule .) ]
  ! ACTIONS         [ reduce using rule 11 (ruleset -> rule .) ]
  ! DEDENT          [ reduce using rule 11 (ruleset -> rule .) ]
  ! ,               [ reduce using rule 11 (ruleset -> rule .) ]
  ! ]               [ reduce using rule 11 (ruleset -> rule .) ]
  ! ANNOTATION      [ reduce using rule 11 (ruleset -> rule .) ]
  ! (               [ reduce using rule 11 (ruleset -> rule .) ]
  ! INTEGER         [ reduce using rule 11 (ruleset -> rule .) ]
  ! FLOAT           [ reduce using rule 11 (ruleset -> rule .) ]
  ! [               [ reduce using rule 11 (ruleset -> rule .) ]
  ! TIME            [ reduce using rule 11 (ruleset -> rule .) ]
  ! NAME            [ reduce using rule 11 (ruleset -> rule .) ]
  ! GLOBAL_VAR      [ reduce using rule 11 (ruleset -> rule .) ]
  ! PLAYER_VAR      [ reduce using rule 11 (ruleset -> rule .) ]
  ! NUMBER          [ reduce using rule 11 (ruleset -> rule .) ]
  ! VALUE           [ reduce using rule 11 (ruleset -> rule .) ]
  ! ACTION          [ reduce using rule 11 (ruleset -> rule .) ]


state 15

    (7) funcbody -> ruleblock .

    FUNCTION        reduce using rule 7 (funcbody -> ruleblock .)
    COMMENT         reduce using rule 7 (funcbody -> ruleblock .)
    RULE            reduce using rule 7 (funcbody -> ruleblock .)
    $end            reduce using rule 7 (funcbody -> ruleblock .)
    ASSIGN          reduce using rule 7 (funcbody -> ruleblock .)
    *               reduce using rule 7 (funcbody -> ruleblock .)
    /               reduce using rule 7 (funcbody -> ruleblock .)
    +               reduce using rule 7 (funcbody -> ruleblock .)
    -               reduce using rule 7 (funcbody -> ruleblock .)
    COMPARE         reduce using rule 7 (funcbody -> ruleblock .)
    NEWLINE         reduce using rule 7 (funcbody -> ruleblock .)
    )               reduce using rule 7 (funcbody -> ruleblock .)
    EVENT           reduce using rule 7 (funcbody -> ruleblock .)
    CONDITIONS      reduce using rule 7 (funcbody -> ruleblock .)
    ACTIONS         reduce using rule 7 (funcbody -> ruleblock .)
    DEDENT          reduce using rule 7 (funcbody -> ruleblock .)
    ,               reduce using rule 7 (funcbody -> ruleblock .)
    ]               reduce using rule 7 (funcbody -> ruleblock .)
    ANNOTATION      reduce using rule 7 (funcbody -> ruleblock .)
    (               reduce using rule 7 (funcbody -> ruleblock .)
    INTEGER         reduce using rule 7 (funcbody -> ruleblock .)
    FLOAT           reduce using rule 7 (funcbody -> ruleblock .)
    [               reduce using rule 7 (funcbody -> ruleblock .)
    TIME            reduce using rule 7 (funcbody -> ruleblock .)
    NAME            reduce using rule 7 (funcbody -> ruleblock .)
    GLOBAL_VAR      reduce using rule 7 (funcbody -> ruleblock .)
    PLAYER_VAR      reduce using rule 7 (funcbody -> ruleblock .)
    NUMBER          reduce using rule 7 (funcbody -> ruleblock .)
    VALUE           reduce using rule 7 (funcbody -> ruleblock .)
    ACTION          reduce using rule 7 (funcbody -> ruleblock .)


state 16

    (8) funcbody -> block .

    FUNCTION        reduce using rule 8 (funcbody -> block .)
    COMMENT         reduce using rule 8 (funcbody -> block .)
    RULE            reduce using rule 8 (funcbody -> block .)
    $end            reduce using rule 8 (funcbody -> block .)
    ASSIGN          reduce using rule 8 (funcbody -> block .)
    *               reduce using rule 8 (funcbody -> block .)
    /               reduce using rule 8 (funcbody -> block .)
    +               reduce using rule 8 (funcbody -> block .)
    -               reduce using rule 8 (funcbody -> block .)
    COMPARE         reduce using rule 8 (funcbody -> block .)
    NEWLINE         reduce using rule 8 (funcbody -> block .)
    )               reduce using rule 8 (funcbody -> block .)
    EVENT           reduce using rule 8 (funcbody -> block .)
    CONDITIONS      reduce using rule 8 (funcbody -> block .)
    ACTIONS         reduce using rule 8 (funcbody -> block .)
    DEDENT          reduce using rule 8 (funcbody -> block .)
    ,               reduce using rule 8 (funcbody -> block .)
    ]               reduce using rule 8 (funcbody -> block .)
    ANNOTATION      reduce using rule 8 (funcbody -> block .)
    (               reduce using rule 8 (funcbody -> block .)
    INTEGER         reduce using rule 8 (funcbody -> block .)
    FLOAT           reduce using rule 8 (funcbody -> block .)
    [               reduce using rule 8 (funcbody -> block .)
    TIME            reduce using rule 8 (funcbody -> block .)
    NAME            reduce using rule 8 (funcbody -> block .)
    GLOBAL_VAR      reduce using rule 8 (funcbody -> block .)
    PLAYER_VAR      reduce using rule 8 (funcbody -> block .)
    NUMBER          reduce using rule 8 (funcbody -> block .)
    VALUE           reduce using rule 8 (funcbody -> block .)
    ACTION          reduce using rule 8 (funcbody -> block .)


state 17

    (9) funcbody -> value .
    (60) assign -> value . ASSIGN compare
    (39) term -> value .

  ! shift/reduce conflict for ASSIGN resolved as shift
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for COMMENT resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for RULE resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for $end resolved using rule 9 (funcbody -> value .)
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! reduce/reduce conflict for * resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for / resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for + resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for - resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for COMPARE resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for ) resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for EVENT resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for CONDITIONS resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for ACTIONS resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for DEDENT resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for , resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for ] resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for ANNOTATION resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for ( resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for INTEGER resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for FLOAT resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for [ resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for TIME resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for NAME resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for PLAYER_VAR resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for VALUE resolved using rule 9 (funcbody -> value .)
  ! reduce/reduce conflict for ACTION resolved using rule 9 (funcbody -> value .)
    FUNCTION        reduce using rule 9 (funcbody -> value .)
    COMMENT         reduce using rule 9 (funcbody -> value .)
    RULE            reduce using rule 9 (funcbody -> value .)
    $end            reduce using rule 9 (funcbody -> value .)
    *               reduce using rule 9 (funcbody -> value .)
    /               reduce using rule 9 (funcbody -> value .)
    +               reduce using rule 9 (funcbody -> value .)
    -               reduce using rule 9 (funcbody -> value .)
    COMPARE         reduce using rule 9 (funcbody -> value .)
    NEWLINE         reduce using rule 9 (funcbody -> value .)
    )               reduce using rule 9 (funcbody -> value .)
    EVENT           reduce using rule 9 (funcbody -> value .)
    CONDITIONS      reduce using rule 9 (funcbody -> value .)
    ACTIONS         reduce using rule 9 (funcbody -> value .)
    DEDENT          reduce using rule 9 (funcbody -> value .)
    ,               reduce using rule 9 (funcbody -> value .)
    ]               reduce using rule 9 (funcbody -> value .)
    ANNOTATION      reduce using rule 9 (funcbody -> value .)
    (               reduce using rule 9 (funcbody -> value .)
    INTEGER         reduce using rule 9 (funcbody -> value .)
    FLOAT           reduce using rule 9 (funcbody -> value .)
    [               reduce using rule 9 (funcbody -> value .)
    TIME            reduce using rule 9 (funcbody -> value .)
    NAME            reduce using rule 9 (funcbody -> value .)
    GLOBAL_VAR      reduce using rule 9 (funcbody -> value .)
    PLAYER_VAR      reduce using rule 9 (funcbody -> value .)
    NUMBER          reduce using rule 9 (funcbody -> value .)
    VALUE           reduce using rule 9 (funcbody -> value .)
    ACTION          reduce using rule 9 (funcbody -> value .)
    ASSIGN          shift and go to state 62

  ! ASSIGN          [ reduce using rule 9 (funcbody -> value .) ]
  ! FUNCTION        [ reduce using rule 39 (term -> value .) ]
  ! COMMENT         [ reduce using rule 39 (term -> value .) ]
  ! RULE            [ reduce using rule 39 (term -> value .) ]
  ! $end            [ reduce using rule 39 (term -> value .) ]
  ! ASSIGN          [ reduce using rule 39 (term -> value .) ]
  ! *               [ reduce using rule 39 (term -> value .) ]
  ! /               [ reduce using rule 39 (term -> value .) ]
  ! +               [ reduce using rule 39 (term -> value .) ]
  ! -               [ reduce using rule 39 (term -> value .) ]
  ! COMPARE         [ reduce using rule 39 (term -> value .) ]
  ! NEWLINE         [ reduce using rule 39 (term -> value .) ]
  ! )               [ reduce using rule 39 (term -> value .) ]
  ! EVENT           [ reduce using rule 39 (term -> value .) ]
  ! CONDITIONS      [ reduce using rule 39 (term -> value .) ]
  ! ACTIONS         [ reduce using rule 39 (term -> value .) ]
  ! DEDENT          [ reduce using rule 39 (term -> value .) ]
  ! ,               [ reduce using rule 39 (term -> value .) ]
  ! ]               [ reduce using rule 39 (term -> value .) ]
  ! ANNOTATION      [ reduce using rule 39 (term -> value .) ]
  ! (               [ reduce using rule 39 (term -> value .) ]
  ! INTEGER         [ reduce using rule 39 (term -> value .) ]
  ! FLOAT           [ reduce using rule 39 (term -> value .) ]
  ! [               [ reduce using rule 39 (term -> value .) ]
  ! TIME            [ reduce using rule 39 (term -> value .) ]
  ! NAME            [ reduce using rule 39 (term -> value .) ]
  ! GLOBAL_VAR      [ reduce using rule 39 (term -> value .) ]
  ! PLAYER_VAR      [ reduce using rule 39 (term -> value .) ]
  ! NUMBER          [ reduce using rule 39 (term -> value .) ]
  ! VALUE           [ reduce using rule 39 (term -> value .) ]
  ! ACTION          [ reduce using rule 39 (term -> value .) ]


state 18

    (10) funcbody -> NEWLINE . empty
    (18) ruleblock -> NEWLINE . ruleblock
    (31) block -> NEWLINE . INDENT statements DEDENT
    (75) empty -> . COMMENT
    (76) empty -> .
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for EVENT resolved as shift
  ! shift/reduce conflict for CONDITIONS resolved as shift
  ! shift/reduce conflict for ACTIONS resolved as shift
    INDENT          shift and go to state 66
    COMMENT         shift and go to state 7
    FUNCTION        reduce using rule 76 (empty -> .)
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    -               reduce using rule 76 (empty -> .)
    COMPARE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    (               reduce using rule 76 (empty -> .)
    INTEGER         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    [               reduce using rule 76 (empty -> .)
    TIME            reduce using rule 76 (empty -> .)
    NAME            reduce using rule 76 (empty -> .)
    GLOBAL_VAR      reduce using rule 76 (empty -> .)
    PLAYER_VAR      reduce using rule 76 (empty -> .)
    NUMBER          reduce using rule 76 (empty -> .)
    VALUE           reduce using rule 76 (empty -> .)
    ACTION          reduce using rule 76 (empty -> .)
    NEWLINE         shift and go to state 63
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36

  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! EVENT           [ reduce using rule 76 (empty -> .) ]
  ! CONDITIONS      [ reduce using rule 76 (empty -> .) ]
  ! ACTIONS         [ reduce using rule 76 (empty -> .) ]

    empty                          shift and go to state 64
    ruleblock                      shift and go to state 65
    event                          shift and go to state 20
    conditions                     shift and go to state 21
    actions                        shift and go to state 22

state 19

    (19) ruleblock -> empty .
    (51) value -> empty .

  ! reduce/reduce conflict for FUNCTION resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for COMMENT resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for RULE resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for * resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for / resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for + resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for - resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for COMPARE resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ) resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for EVENT resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for CONDITIONS resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ACTIONS resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for DEDENT resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for , resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ] resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ANNOTATION resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ( resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for [ resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for TIME resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for NAME resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for PLAYER_VAR resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for NUMBER resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for VALUE resolved using rule 19 (ruleblock -> empty .)
  ! reduce/reduce conflict for ACTION resolved using rule 19 (ruleblock -> empty .)
    FUNCTION        reduce using rule 19 (ruleblock -> empty .)
    COMMENT         reduce using rule 19 (ruleblock -> empty .)
    RULE            reduce using rule 19 (ruleblock -> empty .)
    $end            reduce using rule 19 (ruleblock -> empty .)
    ASSIGN          reduce using rule 19 (ruleblock -> empty .)
    *               reduce using rule 19 (ruleblock -> empty .)
    /               reduce using rule 19 (ruleblock -> empty .)
    +               reduce using rule 19 (ruleblock -> empty .)
    -               reduce using rule 19 (ruleblock -> empty .)
    COMPARE         reduce using rule 19 (ruleblock -> empty .)
    NEWLINE         reduce using rule 19 (ruleblock -> empty .)
    )               reduce using rule 19 (ruleblock -> empty .)
    EVENT           reduce using rule 19 (ruleblock -> empty .)
    CONDITIONS      reduce using rule 19 (ruleblock -> empty .)
    ACTIONS         reduce using rule 19 (ruleblock -> empty .)
    DEDENT          reduce using rule 19 (ruleblock -> empty .)
    ,               reduce using rule 19 (ruleblock -> empty .)
    ]               reduce using rule 19 (ruleblock -> empty .)
    ANNOTATION      reduce using rule 19 (ruleblock -> empty .)
    (               reduce using rule 19 (ruleblock -> empty .)
    INTEGER         reduce using rule 19 (ruleblock -> empty .)
    FLOAT           reduce using rule 19 (ruleblock -> empty .)
    [               reduce using rule 19 (ruleblock -> empty .)
    TIME            reduce using rule 19 (ruleblock -> empty .)
    NAME            reduce using rule 19 (ruleblock -> empty .)
    GLOBAL_VAR      reduce using rule 19 (ruleblock -> empty .)
    PLAYER_VAR      reduce using rule 19 (ruleblock -> empty .)
    NUMBER          reduce using rule 19 (ruleblock -> empty .)
    VALUE           reduce using rule 19 (ruleblock -> empty .)
    ACTION          reduce using rule 19 (ruleblock -> empty .)

  ! FUNCTION        [ reduce using rule 51 (value -> empty .) ]
  ! COMMENT         [ reduce using rule 51 (value -> empty .) ]
  ! RULE            [ reduce using rule 51 (value -> empty .) ]
  ! $end            [ reduce using rule 51 (value -> empty .) ]
  ! ASSIGN          [ reduce using rule 51 (value -> empty .) ]
  ! *               [ reduce using rule 51 (value -> empty .) ]
  ! /               [ reduce using rule 51 (value -> empty .) ]
  ! +               [ reduce using rule 51 (value -> empty .) ]
  ! -               [ reduce using rule 51 (value -> empty .) ]
  ! COMPARE         [ reduce using rule 51 (value -> empty .) ]
  ! NEWLINE         [ reduce using rule 51 (value -> empty .) ]
  ! )               [ reduce using rule 51 (value -> empty .) ]
  ! EVENT           [ reduce using rule 51 (value -> empty .) ]
  ! CONDITIONS      [ reduce using rule 51 (value -> empty .) ]
  ! ACTIONS         [ reduce using rule 51 (value -> empty .) ]
  ! DEDENT          [ reduce using rule 51 (value -> empty .) ]
  ! ,               [ reduce using rule 51 (value -> empty .) ]
  ! ]               [ reduce using rule 51 (value -> empty .) ]
  ! ANNOTATION      [ reduce using rule 51 (value -> empty .) ]
  ! (               [ reduce using rule 51 (value -> empty .) ]
  ! INTEGER         [ reduce using rule 51 (value -> empty .) ]
  ! FLOAT           [ reduce using rule 51 (value -> empty .) ]
  ! [               [ reduce using rule 51 (value -> empty .) ]
  ! TIME            [ reduce using rule 51 (value -> empty .) ]
  ! NAME            [ reduce using rule 51 (value -> empty .) ]
  ! GLOBAL_VAR      [ reduce using rule 51 (value -> empty .) ]
  ! PLAYER_VAR      [ reduce using rule 51 (value -> empty .) ]
  ! NUMBER          [ reduce using rule 51 (value -> empty .) ]
  ! VALUE           [ reduce using rule 51 (value -> empty .) ]
  ! ACTION          [ reduce using rule 51 (value -> empty .) ]


state 20

    (15) ruleblock -> event . ruleblock
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block
    (75) empty -> . COMMENT
    (76) empty -> .

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for EVENT resolved as shift
  ! shift/reduce conflict for CONDITIONS resolved as shift
  ! shift/reduce conflict for ACTIONS resolved as shift
    NEWLINE         shift and go to state 63
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36
    COMMENT         shift and go to state 7
    FUNCTION        reduce using rule 76 (empty -> .)
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    -               reduce using rule 76 (empty -> .)
    COMPARE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    (               reduce using rule 76 (empty -> .)
    INTEGER         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    [               reduce using rule 76 (empty -> .)
    TIME            reduce using rule 76 (empty -> .)
    NAME            reduce using rule 76 (empty -> .)
    GLOBAL_VAR      reduce using rule 76 (empty -> .)
    PLAYER_VAR      reduce using rule 76 (empty -> .)
    NUMBER          reduce using rule 76 (empty -> .)
    VALUE           reduce using rule 76 (empty -> .)
    ACTION          reduce using rule 76 (empty -> .)

  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! EVENT           [ reduce using rule 76 (empty -> .) ]
  ! CONDITIONS      [ reduce using rule 76 (empty -> .) ]
  ! ACTIONS         [ reduce using rule 76 (empty -> .) ]

    event                          shift and go to state 20
    ruleblock                      shift and go to state 67
    conditions                     shift and go to state 21
    actions                        shift and go to state 22
    empty                          shift and go to state 68

state 21

    (16) ruleblock -> conditions . ruleblock
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block
    (75) empty -> . COMMENT
    (76) empty -> .

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for EVENT resolved as shift
  ! shift/reduce conflict for CONDITIONS resolved as shift
  ! shift/reduce conflict for ACTIONS resolved as shift
    NEWLINE         shift and go to state 63
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36
    COMMENT         shift and go to state 7
    FUNCTION        reduce using rule 76 (empty -> .)
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    -               reduce using rule 76 (empty -> .)
    COMPARE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    (               reduce using rule 76 (empty -> .)
    INTEGER         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    [               reduce using rule 76 (empty -> .)
    TIME            reduce using rule 76 (empty -> .)
    NAME            reduce using rule 76 (empty -> .)
    GLOBAL_VAR      reduce using rule 76 (empty -> .)
    PLAYER_VAR      reduce using rule 76 (empty -> .)
    NUMBER          reduce using rule 76 (empty -> .)
    VALUE           reduce using rule 76 (empty -> .)
    ACTION          reduce using rule 76 (empty -> .)

  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! EVENT           [ reduce using rule 76 (empty -> .) ]
  ! CONDITIONS      [ reduce using rule 76 (empty -> .) ]
  ! ACTIONS         [ reduce using rule 76 (empty -> .) ]

    conditions                     shift and go to state 21
    ruleblock                      shift and go to state 69
    event                          shift and go to state 20
    actions                        shift and go to state 22
    empty                          shift and go to state 68

state 22

    (17) ruleblock -> actions . ruleblock
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block
    (75) empty -> . COMMENT
    (76) empty -> .

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for EVENT resolved as shift
  ! shift/reduce conflict for CONDITIONS resolved as shift
  ! shift/reduce conflict for ACTIONS resolved as shift
    NEWLINE         shift and go to state 63
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36
    COMMENT         shift and go to state 7
    FUNCTION        reduce using rule 76 (empty -> .)
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    -               reduce using rule 76 (empty -> .)
    COMPARE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    (               reduce using rule 76 (empty -> .)
    INTEGER         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    [               reduce using rule 76 (empty -> .)
    TIME            reduce using rule 76 (empty -> .)
    NAME            reduce using rule 76 (empty -> .)
    GLOBAL_VAR      reduce using rule 76 (empty -> .)
    PLAYER_VAR      reduce using rule 76 (empty -> .)
    NUMBER          reduce using rule 76 (empty -> .)
    VALUE           reduce using rule 76 (empty -> .)
    ACTION          reduce using rule 76 (empty -> .)

  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! EVENT           [ reduce using rule 76 (empty -> .) ]
  ! CONDITIONS      [ reduce using rule 76 (empty -> .) ]
  ! ACTIONS         [ reduce using rule 76 (empty -> .) ]

    actions                        shift and go to state 22
    ruleblock                      shift and go to state 70
    event                          shift and go to state 20
    conditions                     shift and go to state 21
    empty                          shift and go to state 68

state 23

    (32) block -> simple_stmt .

    FUNCTION        reduce using rule 32 (block -> simple_stmt .)
    COMMENT         reduce using rule 32 (block -> simple_stmt .)
    RULE            reduce using rule 32 (block -> simple_stmt .)
    $end            reduce using rule 32 (block -> simple_stmt .)
    ASSIGN          reduce using rule 32 (block -> simple_stmt .)
    *               reduce using rule 32 (block -> simple_stmt .)
    /               reduce using rule 32 (block -> simple_stmt .)
    +               reduce using rule 32 (block -> simple_stmt .)
    -               reduce using rule 32 (block -> simple_stmt .)
    COMPARE         reduce using rule 32 (block -> simple_stmt .)
    NEWLINE         reduce using rule 32 (block -> simple_stmt .)
    )               reduce using rule 32 (block -> simple_stmt .)
    EVENT           reduce using rule 32 (block -> simple_stmt .)
    CONDITIONS      reduce using rule 32 (block -> simple_stmt .)
    ACTIONS         reduce using rule 32 (block -> simple_stmt .)
    DEDENT          reduce using rule 32 (block -> simple_stmt .)
    ,               reduce using rule 32 (block -> simple_stmt .)
    ]               reduce using rule 32 (block -> simple_stmt .)
    ANNOTATION      reduce using rule 32 (block -> simple_stmt .)
    (               reduce using rule 32 (block -> simple_stmt .)
    INTEGER         reduce using rule 32 (block -> simple_stmt .)
    FLOAT           reduce using rule 32 (block -> simple_stmt .)
    [               reduce using rule 32 (block -> simple_stmt .)
    TIME            reduce using rule 32 (block -> simple_stmt .)
    NAME            reduce using rule 32 (block -> simple_stmt .)
    GLOBAL_VAR      reduce using rule 32 (block -> simple_stmt .)
    PLAYER_VAR      reduce using rule 32 (block -> simple_stmt .)
    NUMBER          reduce using rule 32 (block -> simple_stmt .)
    VALUE           reduce using rule 32 (block -> simple_stmt .)
    ACTION          reduce using rule 32 (block -> simple_stmt .)


state 24

    (42) value -> variable .

    FUNCTION        reduce using rule 42 (value -> variable .)
    COMMENT         reduce using rule 42 (value -> variable .)
    RULE            reduce using rule 42 (value -> variable .)
    $end            reduce using rule 42 (value -> variable .)
    ASSIGN          reduce using rule 42 (value -> variable .)
    *               reduce using rule 42 (value -> variable .)
    /               reduce using rule 42 (value -> variable .)
    +               reduce using rule 42 (value -> variable .)
    -               reduce using rule 42 (value -> variable .)
    COMPARE         reduce using rule 42 (value -> variable .)
    NEWLINE         reduce using rule 42 (value -> variable .)
    )               reduce using rule 42 (value -> variable .)
    EVENT           reduce using rule 42 (value -> variable .)
    CONDITIONS      reduce using rule 42 (value -> variable .)
    ACTIONS         reduce using rule 42 (value -> variable .)
    DEDENT          reduce using rule 42 (value -> variable .)
    ,               reduce using rule 42 (value -> variable .)
    ]               reduce using rule 42 (value -> variable .)
    ANNOTATION      reduce using rule 42 (value -> variable .)
    (               reduce using rule 42 (value -> variable .)
    INTEGER         reduce using rule 42 (value -> variable .)
    FLOAT           reduce using rule 42 (value -> variable .)
    [               reduce using rule 42 (value -> variable .)
    TIME            reduce using rule 42 (value -> variable .)
    NAME            reduce using rule 42 (value -> variable .)
    GLOBAL_VAR      reduce using rule 42 (value -> variable .)
    PLAYER_VAR      reduce using rule 42 (value -> variable .)
    NUMBER          reduce using rule 42 (value -> variable .)
    VALUE           reduce using rule 42 (value -> variable .)
    ACTION          reduce using rule 42 (value -> variable .)


state 25

    (43) value -> compound_stmt .

    FUNCTION        reduce using rule 43 (value -> compound_stmt .)
    COMMENT         reduce using rule 43 (value -> compound_stmt .)
    RULE            reduce using rule 43 (value -> compound_stmt .)
    $end            reduce using rule 43 (value -> compound_stmt .)
    ASSIGN          reduce using rule 43 (value -> compound_stmt .)
    *               reduce using rule 43 (value -> compound_stmt .)
    /               reduce using rule 43 (value -> compound_stmt .)
    +               reduce using rule 43 (value -> compound_stmt .)
    -               reduce using rule 43 (value -> compound_stmt .)
    COMPARE         reduce using rule 43 (value -> compound_stmt .)
    NEWLINE         reduce using rule 43 (value -> compound_stmt .)
    )               reduce using rule 43 (value -> compound_stmt .)
    EVENT           reduce using rule 43 (value -> compound_stmt .)
    CONDITIONS      reduce using rule 43 (value -> compound_stmt .)
    ACTIONS         reduce using rule 43 (value -> compound_stmt .)
    DEDENT          reduce using rule 43 (value -> compound_stmt .)
    ,               reduce using rule 43 (value -> compound_stmt .)
    ]               reduce using rule 43 (value -> compound_stmt .)
    ANNOTATION      reduce using rule 43 (value -> compound_stmt .)
    (               reduce using rule 43 (value -> compound_stmt .)
    INTEGER         reduce using rule 43 (value -> compound_stmt .)
    FLOAT           reduce using rule 43 (value -> compound_stmt .)
    [               reduce using rule 43 (value -> compound_stmt .)
    TIME            reduce using rule 43 (value -> compound_stmt .)
    NAME            reduce using rule 43 (value -> compound_stmt .)
    GLOBAL_VAR      reduce using rule 43 (value -> compound_stmt .)
    PLAYER_VAR      reduce using rule 43 (value -> compound_stmt .)
    NUMBER          reduce using rule 43 (value -> compound_stmt .)
    VALUE           reduce using rule 43 (value -> compound_stmt .)
    ACTION          reduce using rule 43 (value -> compound_stmt .)


state 26

    (44) value -> number_const .

    FUNCTION        reduce using rule 44 (value -> number_const .)
    COMMENT         reduce using rule 44 (value -> number_const .)
    RULE            reduce using rule 44 (value -> number_const .)
    $end            reduce using rule 44 (value -> number_const .)
    ASSIGN          reduce using rule 44 (value -> number_const .)
    *               reduce using rule 44 (value -> number_const .)
    /               reduce using rule 44 (value -> number_const .)
    +               reduce using rule 44 (value -> number_const .)
    -               reduce using rule 44 (value -> number_const .)
    COMPARE         reduce using rule 44 (value -> number_const .)
    NEWLINE         reduce using rule 44 (value -> number_const .)
    )               reduce using rule 44 (value -> number_const .)
    EVENT           reduce using rule 44 (value -> number_const .)
    CONDITIONS      reduce using rule 44 (value -> number_const .)
    ACTIONS         reduce using rule 44 (value -> number_const .)
    DEDENT          reduce using rule 44 (value -> number_const .)
    ,               reduce using rule 44 (value -> number_const .)
    ]               reduce using rule 44 (value -> number_const .)
    ANNOTATION      reduce using rule 44 (value -> number_const .)
    (               reduce using rule 44 (value -> number_const .)
    INTEGER         reduce using rule 44 (value -> number_const .)
    FLOAT           reduce using rule 44 (value -> number_const .)
    [               reduce using rule 44 (value -> number_const .)
    TIME            reduce using rule 44 (value -> number_const .)
    NAME            reduce using rule 44 (value -> number_const .)
    GLOBAL_VAR      reduce using rule 44 (value -> number_const .)
    PLAYER_VAR      reduce using rule 44 (value -> number_const .)
    NUMBER          reduce using rule 44 (value -> number_const .)
    VALUE           reduce using rule 44 (value -> number_const .)
    ACTION          reduce using rule 44 (value -> number_const .)


state 27

    (45) value -> vector .

    FUNCTION        reduce using rule 45 (value -> vector .)
    COMMENT         reduce using rule 45 (value -> vector .)
    RULE            reduce using rule 45 (value -> vector .)
    $end            reduce using rule 45 (value -> vector .)
    ASSIGN          reduce using rule 45 (value -> vector .)
    *               reduce using rule 45 (value -> vector .)
    /               reduce using rule 45 (value -> vector .)
    +               reduce using rule 45 (value -> vector .)
    -               reduce using rule 45 (value -> vector .)
    COMPARE         reduce using rule 45 (value -> vector .)
    NEWLINE         reduce using rule 45 (value -> vector .)
    )               reduce using rule 45 (value -> vector .)
    EVENT           reduce using rule 45 (value -> vector .)
    CONDITIONS      reduce using rule 45 (value -> vector .)
    ACTIONS         reduce using rule 45 (value -> vector .)
    DEDENT          reduce using rule 45 (value -> vector .)
    ,               reduce using rule 45 (value -> vector .)
    ]               reduce using rule 45 (value -> vector .)
    ANNOTATION      reduce using rule 45 (value -> vector .)
    (               reduce using rule 45 (value -> vector .)
    INTEGER         reduce using rule 45 (value -> vector .)
    FLOAT           reduce using rule 45 (value -> vector .)
    [               reduce using rule 45 (value -> vector .)
    TIME            reduce using rule 45 (value -> vector .)
    NAME            reduce using rule 45 (value -> vector .)
    GLOBAL_VAR      reduce using rule 45 (value -> vector .)
    PLAYER_VAR      reduce using rule 45 (value -> vector .)
    NUMBER          reduce using rule 45 (value -> vector .)
    VALUE           reduce using rule 45 (value -> vector .)
    ACTION          reduce using rule 45 (value -> vector .)


state 28

    (46) value -> unary .

    FUNCTION        reduce using rule 46 (value -> unary .)
    COMMENT         reduce using rule 46 (value -> unary .)
    RULE            reduce using rule 46 (value -> unary .)
    $end            reduce using rule 46 (value -> unary .)
    ASSIGN          reduce using rule 46 (value -> unary .)
    *               reduce using rule 46 (value -> unary .)
    /               reduce using rule 46 (value -> unary .)
    +               reduce using rule 46 (value -> unary .)
    -               reduce using rule 46 (value -> unary .)
    COMPARE         reduce using rule 46 (value -> unary .)
    NEWLINE         reduce using rule 46 (value -> unary .)
    )               reduce using rule 46 (value -> unary .)
    EVENT           reduce using rule 46 (value -> unary .)
    CONDITIONS      reduce using rule 46 (value -> unary .)
    ACTIONS         reduce using rule 46 (value -> unary .)
    DEDENT          reduce using rule 46 (value -> unary .)
    ,               reduce using rule 46 (value -> unary .)
    ]               reduce using rule 46 (value -> unary .)
    ANNOTATION      reduce using rule 46 (value -> unary .)
    (               reduce using rule 46 (value -> unary .)
    INTEGER         reduce using rule 46 (value -> unary .)
    FLOAT           reduce using rule 46 (value -> unary .)
    [               reduce using rule 46 (value -> unary .)
    TIME            reduce using rule 46 (value -> unary .)
    NAME            reduce using rule 46 (value -> unary .)
    GLOBAL_VAR      reduce using rule 46 (value -> unary .)
    PLAYER_VAR      reduce using rule 46 (value -> unary .)
    NUMBER          reduce using rule 46 (value -> unary .)
    VALUE           reduce using rule 46 (value -> unary .)
    ACTION          reduce using rule 46 (value -> unary .)


state 29

    (47) value -> array .

    FUNCTION        reduce using rule 47 (value -> array .)
    COMMENT         reduce using rule 47 (value -> array .)
    RULE            reduce using rule 47 (value -> array .)
    $end            reduce using rule 47 (value -> array .)
    ASSIGN          reduce using rule 47 (value -> array .)
    *               reduce using rule 47 (value -> array .)
    /               reduce using rule 47 (value -> array .)
    +               reduce using rule 47 (value -> array .)
    -               reduce using rule 47 (value -> array .)
    COMPARE         reduce using rule 47 (value -> array .)
    NEWLINE         reduce using rule 47 (value -> array .)
    )               reduce using rule 47 (value -> array .)
    EVENT           reduce using rule 47 (value -> array .)
    CONDITIONS      reduce using rule 47 (value -> array .)
    ACTIONS         reduce using rule 47 (value -> array .)
    DEDENT          reduce using rule 47 (value -> array .)
    ,               reduce using rule 47 (value -> array .)
    ]               reduce using rule 47 (value -> array .)
    ANNOTATION      reduce using rule 47 (value -> array .)
    (               reduce using rule 47 (value -> array .)
    INTEGER         reduce using rule 47 (value -> array .)
    FLOAT           reduce using rule 47 (value -> array .)
    [               reduce using rule 47 (value -> array .)
    TIME            reduce using rule 47 (value -> array .)
    NAME            reduce using rule 47 (value -> array .)
    GLOBAL_VAR      reduce using rule 47 (value -> array .)
    PLAYER_VAR      reduce using rule 47 (value -> array .)
    NUMBER          reduce using rule 47 (value -> array .)
    VALUE           reduce using rule 47 (value -> array .)
    ACTION          reduce using rule 47 (value -> array .)


state 30

    (48) value -> time .

    FUNCTION        reduce using rule 48 (value -> time .)
    COMMENT         reduce using rule 48 (value -> time .)
    RULE            reduce using rule 48 (value -> time .)
    $end            reduce using rule 48 (value -> time .)
    ASSIGN          reduce using rule 48 (value -> time .)
    *               reduce using rule 48 (value -> time .)
    /               reduce using rule 48 (value -> time .)
    +               reduce using rule 48 (value -> time .)
    -               reduce using rule 48 (value -> time .)
    COMPARE         reduce using rule 48 (value -> time .)
    NEWLINE         reduce using rule 48 (value -> time .)
    )               reduce using rule 48 (value -> time .)
    EVENT           reduce using rule 48 (value -> time .)
    CONDITIONS      reduce using rule 48 (value -> time .)
    ACTIONS         reduce using rule 48 (value -> time .)
    DEDENT          reduce using rule 48 (value -> time .)
    ,               reduce using rule 48 (value -> time .)
    ]               reduce using rule 48 (value -> time .)
    ANNOTATION      reduce using rule 48 (value -> time .)
    (               reduce using rule 48 (value -> time .)
    INTEGER         reduce using rule 48 (value -> time .)
    FLOAT           reduce using rule 48 (value -> time .)
    [               reduce using rule 48 (value -> time .)
    TIME            reduce using rule 48 (value -> time .)
    NAME            reduce using rule 48 (value -> time .)
    GLOBAL_VAR      reduce using rule 48 (value -> time .)
    PLAYER_VAR      reduce using rule 48 (value -> time .)
    NUMBER          reduce using rule 48 (value -> time .)
    VALUE           reduce using rule 48 (value -> time .)
    ACTION          reduce using rule 48 (value -> time .)


state 31

    (49) value -> ( . compare )
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]

    compare                        shift and go to state 71
    arith_expr                     shift and go to state 58
    term                           shift and go to state 59
    value                          shift and go to state 72
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 32

    (33) expr -> compare .
    (59) compare -> compare . COMPARE arith_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    FUNCTION        reduce using rule 33 (expr -> compare .)
    COMMENT         reduce using rule 33 (expr -> compare .)
    RULE            reduce using rule 33 (expr -> compare .)
    $end            reduce using rule 33 (expr -> compare .)
    ASSIGN          reduce using rule 33 (expr -> compare .)
    *               reduce using rule 33 (expr -> compare .)
    /               reduce using rule 33 (expr -> compare .)
    +               reduce using rule 33 (expr -> compare .)
    -               reduce using rule 33 (expr -> compare .)
    NEWLINE         reduce using rule 33 (expr -> compare .)
    )               reduce using rule 33 (expr -> compare .)
    EVENT           reduce using rule 33 (expr -> compare .)
    CONDITIONS      reduce using rule 33 (expr -> compare .)
    ACTIONS         reduce using rule 33 (expr -> compare .)
    DEDENT          reduce using rule 33 (expr -> compare .)
    ,               reduce using rule 33 (expr -> compare .)
    ]               reduce using rule 33 (expr -> compare .)
    ANNOTATION      reduce using rule 33 (expr -> compare .)
    (               reduce using rule 33 (expr -> compare .)
    INTEGER         reduce using rule 33 (expr -> compare .)
    FLOAT           reduce using rule 33 (expr -> compare .)
    [               reduce using rule 33 (expr -> compare .)
    TIME            reduce using rule 33 (expr -> compare .)
    NAME            reduce using rule 33 (expr -> compare .)
    GLOBAL_VAR      reduce using rule 33 (expr -> compare .)
    PLAYER_VAR      reduce using rule 33 (expr -> compare .)
    NUMBER          reduce using rule 33 (expr -> compare .)
    VALUE           reduce using rule 33 (expr -> compare .)
    ACTION          reduce using rule 33 (expr -> compare .)
    COMPARE         shift and go to state 74

  ! COMPARE         [ reduce using rule 33 (expr -> compare .) ]


state 33

    (50) value -> function .

    FUNCTION        reduce using rule 50 (value -> function .)
    COMMENT         reduce using rule 50 (value -> function .)
    RULE            reduce using rule 50 (value -> function .)
    $end            reduce using rule 50 (value -> function .)
    ASSIGN          reduce using rule 50 (value -> function .)
    *               reduce using rule 50 (value -> function .)
    /               reduce using rule 50 (value -> function .)
    +               reduce using rule 50 (value -> function .)
    -               reduce using rule 50 (value -> function .)
    COMPARE         reduce using rule 50 (value -> function .)
    NEWLINE         reduce using rule 50 (value -> function .)
    )               reduce using rule 50 (value -> function .)
    EVENT           reduce using rule 50 (value -> function .)
    CONDITIONS      reduce using rule 50 (value -> function .)
    ACTIONS         reduce using rule 50 (value -> function .)
    DEDENT          reduce using rule 50 (value -> function .)
    ,               reduce using rule 50 (value -> function .)
    ]               reduce using rule 50 (value -> function .)
    ANNOTATION      reduce using rule 50 (value -> function .)
    (               reduce using rule 50 (value -> function .)
    INTEGER         reduce using rule 50 (value -> function .)
    FLOAT           reduce using rule 50 (value -> function .)
    [               reduce using rule 50 (value -> function .)
    TIME            reduce using rule 50 (value -> function .)
    NAME            reduce using rule 50 (value -> function .)
    GLOBAL_VAR      reduce using rule 50 (value -> function .)
    PLAYER_VAR      reduce using rule 50 (value -> function .)
    NUMBER          reduce using rule 50 (value -> function .)
    VALUE           reduce using rule 50 (value -> function .)
    ACTION          reduce using rule 50 (value -> function .)


state 34

    (20) event -> EVENT . block
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    NEWLINE         shift and go to state 76
    ANNOTATION      shift and go to state 51
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    block                          shift and go to state 75
    simple_stmt                    shift and go to state 23
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 35

    (21) conditions -> CONDITIONS . block
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    NEWLINE         shift and go to state 76
    ANNOTATION      shift and go to state 51
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    block                          shift and go to state 78
    simple_stmt                    shift and go to state 23
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 36

    (22) actions -> ACTIONS . block
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    NEWLINE         shift and go to state 76
    ANNOTATION      shift and go to state 51
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    block                          shift and go to state 79
    simple_stmt                    shift and go to state 23
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 37

    (26) simple_stmt -> expr . NEWLINE
    (27) simple_stmt -> expr .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 80
    FUNCTION        reduce using rule 27 (simple_stmt -> expr .)
    COMMENT         reduce using rule 27 (simple_stmt -> expr .)
    RULE            reduce using rule 27 (simple_stmt -> expr .)
    $end            reduce using rule 27 (simple_stmt -> expr .)
    ASSIGN          reduce using rule 27 (simple_stmt -> expr .)
    *               reduce using rule 27 (simple_stmt -> expr .)
    /               reduce using rule 27 (simple_stmt -> expr .)
    +               reduce using rule 27 (simple_stmt -> expr .)
    -               reduce using rule 27 (simple_stmt -> expr .)
    COMPARE         reduce using rule 27 (simple_stmt -> expr .)
    )               reduce using rule 27 (simple_stmt -> expr .)
    EVENT           reduce using rule 27 (simple_stmt -> expr .)
    CONDITIONS      reduce using rule 27 (simple_stmt -> expr .)
    ACTIONS         reduce using rule 27 (simple_stmt -> expr .)
    DEDENT          reduce using rule 27 (simple_stmt -> expr .)
    ,               reduce using rule 27 (simple_stmt -> expr .)
    ]               reduce using rule 27 (simple_stmt -> expr .)
    ANNOTATION      reduce using rule 27 (simple_stmt -> expr .)
    (               reduce using rule 27 (simple_stmt -> expr .)
    INTEGER         reduce using rule 27 (simple_stmt -> expr .)
    FLOAT           reduce using rule 27 (simple_stmt -> expr .)
    [               reduce using rule 27 (simple_stmt -> expr .)
    TIME            reduce using rule 27 (simple_stmt -> expr .)
    NAME            reduce using rule 27 (simple_stmt -> expr .)
    GLOBAL_VAR      reduce using rule 27 (simple_stmt -> expr .)
    PLAYER_VAR      reduce using rule 27 (simple_stmt -> expr .)
    NUMBER          reduce using rule 27 (simple_stmt -> expr .)
    VALUE           reduce using rule 27 (simple_stmt -> expr .)
    ACTION          reduce using rule 27 (simple_stmt -> expr .)

  ! NEWLINE         [ reduce using rule 27 (simple_stmt -> expr .) ]


state 38

    (67) variable -> name .

    FUNCTION        reduce using rule 67 (variable -> name .)
    COMMENT         reduce using rule 67 (variable -> name .)
    RULE            reduce using rule 67 (variable -> name .)
    $end            reduce using rule 67 (variable -> name .)
    ASSIGN          reduce using rule 67 (variable -> name .)
    *               reduce using rule 67 (variable -> name .)
    /               reduce using rule 67 (variable -> name .)
    +               reduce using rule 67 (variable -> name .)
    -               reduce using rule 67 (variable -> name .)
    COMPARE         reduce using rule 67 (variable -> name .)
    NEWLINE         reduce using rule 67 (variable -> name .)
    )               reduce using rule 67 (variable -> name .)
    EVENT           reduce using rule 67 (variable -> name .)
    CONDITIONS      reduce using rule 67 (variable -> name .)
    ACTIONS         reduce using rule 67 (variable -> name .)
    DEDENT          reduce using rule 67 (variable -> name .)
    ,               reduce using rule 67 (variable -> name .)
    ]               reduce using rule 67 (variable -> name .)
    ANNOTATION      reduce using rule 67 (variable -> name .)
    (               reduce using rule 67 (variable -> name .)
    INTEGER         reduce using rule 67 (variable -> name .)
    FLOAT           reduce using rule 67 (variable -> name .)
    [               reduce using rule 67 (variable -> name .)
    TIME            reduce using rule 67 (variable -> name .)
    NAME            reduce using rule 67 (variable -> name .)
    GLOBAL_VAR      reduce using rule 67 (variable -> name .)
    PLAYER_VAR      reduce using rule 67 (variable -> name .)
    NUMBER          reduce using rule 67 (variable -> name .)
    VALUE           reduce using rule 67 (variable -> name .)
    ACTION          reduce using rule 67 (variable -> name .)


state 39

    (68) variable -> global_var .

    FUNCTION        reduce using rule 68 (variable -> global_var .)
    COMMENT         reduce using rule 68 (variable -> global_var .)
    RULE            reduce using rule 68 (variable -> global_var .)
    $end            reduce using rule 68 (variable -> global_var .)
    ASSIGN          reduce using rule 68 (variable -> global_var .)
    *               reduce using rule 68 (variable -> global_var .)
    /               reduce using rule 68 (variable -> global_var .)
    +               reduce using rule 68 (variable -> global_var .)
    -               reduce using rule 68 (variable -> global_var .)
    COMPARE         reduce using rule 68 (variable -> global_var .)
    NEWLINE         reduce using rule 68 (variable -> global_var .)
    )               reduce using rule 68 (variable -> global_var .)
    EVENT           reduce using rule 68 (variable -> global_var .)
    CONDITIONS      reduce using rule 68 (variable -> global_var .)
    ACTIONS         reduce using rule 68 (variable -> global_var .)
    DEDENT          reduce using rule 68 (variable -> global_var .)
    ,               reduce using rule 68 (variable -> global_var .)
    ]               reduce using rule 68 (variable -> global_var .)
    ANNOTATION      reduce using rule 68 (variable -> global_var .)
    (               reduce using rule 68 (variable -> global_var .)
    INTEGER         reduce using rule 68 (variable -> global_var .)
    FLOAT           reduce using rule 68 (variable -> global_var .)
    [               reduce using rule 68 (variable -> global_var .)
    TIME            reduce using rule 68 (variable -> global_var .)
    NAME            reduce using rule 68 (variable -> global_var .)
    GLOBAL_VAR      reduce using rule 68 (variable -> global_var .)
    PLAYER_VAR      reduce using rule 68 (variable -> global_var .)
    NUMBER          reduce using rule 68 (variable -> global_var .)
    VALUE           reduce using rule 68 (variable -> global_var .)
    ACTION          reduce using rule 68 (variable -> global_var .)


state 40

    (69) variable -> player_var .

    FUNCTION        reduce using rule 69 (variable -> player_var .)
    COMMENT         reduce using rule 69 (variable -> player_var .)
    RULE            reduce using rule 69 (variable -> player_var .)
    $end            reduce using rule 69 (variable -> player_var .)
    ASSIGN          reduce using rule 69 (variable -> player_var .)
    *               reduce using rule 69 (variable -> player_var .)
    /               reduce using rule 69 (variable -> player_var .)
    +               reduce using rule 69 (variable -> player_var .)
    -               reduce using rule 69 (variable -> player_var .)
    COMPARE         reduce using rule 69 (variable -> player_var .)
    NEWLINE         reduce using rule 69 (variable -> player_var .)
    )               reduce using rule 69 (variable -> player_var .)
    EVENT           reduce using rule 69 (variable -> player_var .)
    CONDITIONS      reduce using rule 69 (variable -> player_var .)
    ACTIONS         reduce using rule 69 (variable -> player_var .)
    DEDENT          reduce using rule 69 (variable -> player_var .)
    ,               reduce using rule 69 (variable -> player_var .)
    ]               reduce using rule 69 (variable -> player_var .)
    ANNOTATION      reduce using rule 69 (variable -> player_var .)
    (               reduce using rule 69 (variable -> player_var .)
    INTEGER         reduce using rule 69 (variable -> player_var .)
    FLOAT           reduce using rule 69 (variable -> player_var .)
    [               reduce using rule 69 (variable -> player_var .)
    TIME            reduce using rule 69 (variable -> player_var .)
    NAME            reduce using rule 69 (variable -> player_var .)
    GLOBAL_VAR      reduce using rule 69 (variable -> player_var .)
    PLAYER_VAR      reduce using rule 69 (variable -> player_var .)
    NUMBER          reduce using rule 69 (variable -> player_var .)
    VALUE           reduce using rule 69 (variable -> player_var .)
    ACTION          reduce using rule 69 (variable -> player_var .)


state 41

    (28) compound_stmt -> number_expr .

    FUNCTION        reduce using rule 28 (compound_stmt -> number_expr .)
    COMMENT         reduce using rule 28 (compound_stmt -> number_expr .)
    RULE            reduce using rule 28 (compound_stmt -> number_expr .)
    $end            reduce using rule 28 (compound_stmt -> number_expr .)
    ASSIGN          reduce using rule 28 (compound_stmt -> number_expr .)
    *               reduce using rule 28 (compound_stmt -> number_expr .)
    /               reduce using rule 28 (compound_stmt -> number_expr .)
    +               reduce using rule 28 (compound_stmt -> number_expr .)
    -               reduce using rule 28 (compound_stmt -> number_expr .)
    COMPARE         reduce using rule 28 (compound_stmt -> number_expr .)
    NEWLINE         reduce using rule 28 (compound_stmt -> number_expr .)
    )               reduce using rule 28 (compound_stmt -> number_expr .)
    EVENT           reduce using rule 28 (compound_stmt -> number_expr .)
    CONDITIONS      reduce using rule 28 (compound_stmt -> number_expr .)
    ACTIONS         reduce using rule 28 (compound_stmt -> number_expr .)
    DEDENT          reduce using rule 28 (compound_stmt -> number_expr .)
    ,               reduce using rule 28 (compound_stmt -> number_expr .)
    ]               reduce using rule 28 (compound_stmt -> number_expr .)
    ANNOTATION      reduce using rule 28 (compound_stmt -> number_expr .)
    (               reduce using rule 28 (compound_stmt -> number_expr .)
    INTEGER         reduce using rule 28 (compound_stmt -> number_expr .)
    FLOAT           reduce using rule 28 (compound_stmt -> number_expr .)
    [               reduce using rule 28 (compound_stmt -> number_expr .)
    TIME            reduce using rule 28 (compound_stmt -> number_expr .)
    NAME            reduce using rule 28 (compound_stmt -> number_expr .)
    GLOBAL_VAR      reduce using rule 28 (compound_stmt -> number_expr .)
    PLAYER_VAR      reduce using rule 28 (compound_stmt -> number_expr .)
    NUMBER          reduce using rule 28 (compound_stmt -> number_expr .)
    VALUE           reduce using rule 28 (compound_stmt -> number_expr .)
    ACTION          reduce using rule 28 (compound_stmt -> number_expr .)


state 42

    (29) compound_stmt -> value_expr .

    FUNCTION        reduce using rule 29 (compound_stmt -> value_expr .)
    COMMENT         reduce using rule 29 (compound_stmt -> value_expr .)
    RULE            reduce using rule 29 (compound_stmt -> value_expr .)
    $end            reduce using rule 29 (compound_stmt -> value_expr .)
    ASSIGN          reduce using rule 29 (compound_stmt -> value_expr .)
    *               reduce using rule 29 (compound_stmt -> value_expr .)
    /               reduce using rule 29 (compound_stmt -> value_expr .)
    +               reduce using rule 29 (compound_stmt -> value_expr .)
    -               reduce using rule 29 (compound_stmt -> value_expr .)
    COMPARE         reduce using rule 29 (compound_stmt -> value_expr .)
    NEWLINE         reduce using rule 29 (compound_stmt -> value_expr .)
    )               reduce using rule 29 (compound_stmt -> value_expr .)
    EVENT           reduce using rule 29 (compound_stmt -> value_expr .)
    CONDITIONS      reduce using rule 29 (compound_stmt -> value_expr .)
    ACTIONS         reduce using rule 29 (compound_stmt -> value_expr .)
    DEDENT          reduce using rule 29 (compound_stmt -> value_expr .)
    ,               reduce using rule 29 (compound_stmt -> value_expr .)
    ]               reduce using rule 29 (compound_stmt -> value_expr .)
    ANNOTATION      reduce using rule 29 (compound_stmt -> value_expr .)
    (               reduce using rule 29 (compound_stmt -> value_expr .)
    INTEGER         reduce using rule 29 (compound_stmt -> value_expr .)
    FLOAT           reduce using rule 29 (compound_stmt -> value_expr .)
    [               reduce using rule 29 (compound_stmt -> value_expr .)
    TIME            reduce using rule 29 (compound_stmt -> value_expr .)
    NAME            reduce using rule 29 (compound_stmt -> value_expr .)
    GLOBAL_VAR      reduce using rule 29 (compound_stmt -> value_expr .)
    PLAYER_VAR      reduce using rule 29 (compound_stmt -> value_expr .)
    NUMBER          reduce using rule 29 (compound_stmt -> value_expr .)
    VALUE           reduce using rule 29 (compound_stmt -> value_expr .)
    ACTION          reduce using rule 29 (compound_stmt -> value_expr .)


state 43

    (30) compound_stmt -> action_expr .

    FUNCTION        reduce using rule 30 (compound_stmt -> action_expr .)
    COMMENT         reduce using rule 30 (compound_stmt -> action_expr .)
    RULE            reduce using rule 30 (compound_stmt -> action_expr .)
    $end            reduce using rule 30 (compound_stmt -> action_expr .)
    ASSIGN          reduce using rule 30 (compound_stmt -> action_expr .)
    *               reduce using rule 30 (compound_stmt -> action_expr .)
    /               reduce using rule 30 (compound_stmt -> action_expr .)
    +               reduce using rule 30 (compound_stmt -> action_expr .)
    -               reduce using rule 30 (compound_stmt -> action_expr .)
    COMPARE         reduce using rule 30 (compound_stmt -> action_expr .)
    NEWLINE         reduce using rule 30 (compound_stmt -> action_expr .)
    )               reduce using rule 30 (compound_stmt -> action_expr .)
    EVENT           reduce using rule 30 (compound_stmt -> action_expr .)
    CONDITIONS      reduce using rule 30 (compound_stmt -> action_expr .)
    ACTIONS         reduce using rule 30 (compound_stmt -> action_expr .)
    DEDENT          reduce using rule 30 (compound_stmt -> action_expr .)
    ,               reduce using rule 30 (compound_stmt -> action_expr .)
    ]               reduce using rule 30 (compound_stmt -> action_expr .)
    ANNOTATION      reduce using rule 30 (compound_stmt -> action_expr .)
    (               reduce using rule 30 (compound_stmt -> action_expr .)
    INTEGER         reduce using rule 30 (compound_stmt -> action_expr .)
    FLOAT           reduce using rule 30 (compound_stmt -> action_expr .)
    [               reduce using rule 30 (compound_stmt -> action_expr .)
    TIME            reduce using rule 30 (compound_stmt -> action_expr .)
    NAME            reduce using rule 30 (compound_stmt -> action_expr .)
    GLOBAL_VAR      reduce using rule 30 (compound_stmt -> action_expr .)
    PLAYER_VAR      reduce using rule 30 (compound_stmt -> action_expr .)
    NUMBER          reduce using rule 30 (compound_stmt -> action_expr .)
    VALUE           reduce using rule 30 (compound_stmt -> action_expr .)
    ACTION          reduce using rule 30 (compound_stmt -> action_expr .)


state 44

    (65) number_const -> INTEGER .

    FUNCTION        reduce using rule 65 (number_const -> INTEGER .)
    COMMENT         reduce using rule 65 (number_const -> INTEGER .)
    RULE            reduce using rule 65 (number_const -> INTEGER .)
    $end            reduce using rule 65 (number_const -> INTEGER .)
    ASSIGN          reduce using rule 65 (number_const -> INTEGER .)
    *               reduce using rule 65 (number_const -> INTEGER .)
    /               reduce using rule 65 (number_const -> INTEGER .)
    +               reduce using rule 65 (number_const -> INTEGER .)
    -               reduce using rule 65 (number_const -> INTEGER .)
    COMPARE         reduce using rule 65 (number_const -> INTEGER .)
    NEWLINE         reduce using rule 65 (number_const -> INTEGER .)
    )               reduce using rule 65 (number_const -> INTEGER .)
    EVENT           reduce using rule 65 (number_const -> INTEGER .)
    CONDITIONS      reduce using rule 65 (number_const -> INTEGER .)
    ACTIONS         reduce using rule 65 (number_const -> INTEGER .)
    DEDENT          reduce using rule 65 (number_const -> INTEGER .)
    ,               reduce using rule 65 (number_const -> INTEGER .)
    ]               reduce using rule 65 (number_const -> INTEGER .)
    ANNOTATION      reduce using rule 65 (number_const -> INTEGER .)
    (               reduce using rule 65 (number_const -> INTEGER .)
    INTEGER         reduce using rule 65 (number_const -> INTEGER .)
    FLOAT           reduce using rule 65 (number_const -> INTEGER .)
    [               reduce using rule 65 (number_const -> INTEGER .)
    TIME            reduce using rule 65 (number_const -> INTEGER .)
    NAME            reduce using rule 65 (number_const -> INTEGER .)
    GLOBAL_VAR      reduce using rule 65 (number_const -> INTEGER .)
    PLAYER_VAR      reduce using rule 65 (number_const -> INTEGER .)
    NUMBER          reduce using rule 65 (number_const -> INTEGER .)
    VALUE           reduce using rule 65 (number_const -> INTEGER .)
    ACTION          reduce using rule 65 (number_const -> INTEGER .)


state 45

    (66) number_const -> FLOAT .

    FUNCTION        reduce using rule 66 (number_const -> FLOAT .)
    COMMENT         reduce using rule 66 (number_const -> FLOAT .)
    RULE            reduce using rule 66 (number_const -> FLOAT .)
    $end            reduce using rule 66 (number_const -> FLOAT .)
    ASSIGN          reduce using rule 66 (number_const -> FLOAT .)
    *               reduce using rule 66 (number_const -> FLOAT .)
    /               reduce using rule 66 (number_const -> FLOAT .)
    +               reduce using rule 66 (number_const -> FLOAT .)
    -               reduce using rule 66 (number_const -> FLOAT .)
    COMPARE         reduce using rule 66 (number_const -> FLOAT .)
    NEWLINE         reduce using rule 66 (number_const -> FLOAT .)
    )               reduce using rule 66 (number_const -> FLOAT .)
    EVENT           reduce using rule 66 (number_const -> FLOAT .)
    CONDITIONS      reduce using rule 66 (number_const -> FLOAT .)
    ACTIONS         reduce using rule 66 (number_const -> FLOAT .)
    DEDENT          reduce using rule 66 (number_const -> FLOAT .)
    ,               reduce using rule 66 (number_const -> FLOAT .)
    ]               reduce using rule 66 (number_const -> FLOAT .)
    ANNOTATION      reduce using rule 66 (number_const -> FLOAT .)
    (               reduce using rule 66 (number_const -> FLOAT .)
    INTEGER         reduce using rule 66 (number_const -> FLOAT .)
    FLOAT           reduce using rule 66 (number_const -> FLOAT .)
    [               reduce using rule 66 (number_const -> FLOAT .)
    TIME            reduce using rule 66 (number_const -> FLOAT .)
    NAME            reduce using rule 66 (number_const -> FLOAT .)
    GLOBAL_VAR      reduce using rule 66 (number_const -> FLOAT .)
    PLAYER_VAR      reduce using rule 66 (number_const -> FLOAT .)
    NUMBER          reduce using rule 66 (number_const -> FLOAT .)
    VALUE           reduce using rule 66 (number_const -> FLOAT .)
    ACTION          reduce using rule 66 (number_const -> FLOAT .)


state 46

    (73) vector -> COMPARE . value , value , value COMPARE
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ,               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

    value                          shift and go to state 81
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 47

    (57) unary -> - . value
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    value                          shift and go to state 82
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 48

    (74) array -> [ . value_list ]
    (55) value_list -> . value
    (56) value_list -> . value , value_list
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

    value_list                     shift and go to state 83
    value                          shift and go to state 84
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 49

    (64) time -> TIME .

    FUNCTION        reduce using rule 64 (time -> TIME .)
    COMMENT         reduce using rule 64 (time -> TIME .)
    RULE            reduce using rule 64 (time -> TIME .)
    $end            reduce using rule 64 (time -> TIME .)
    ASSIGN          reduce using rule 64 (time -> TIME .)
    *               reduce using rule 64 (time -> TIME .)
    /               reduce using rule 64 (time -> TIME .)
    +               reduce using rule 64 (time -> TIME .)
    -               reduce using rule 64 (time -> TIME .)
    COMPARE         reduce using rule 64 (time -> TIME .)
    NEWLINE         reduce using rule 64 (time -> TIME .)
    )               reduce using rule 64 (time -> TIME .)
    EVENT           reduce using rule 64 (time -> TIME .)
    CONDITIONS      reduce using rule 64 (time -> TIME .)
    ACTIONS         reduce using rule 64 (time -> TIME .)
    DEDENT          reduce using rule 64 (time -> TIME .)
    ,               reduce using rule 64 (time -> TIME .)
    ]               reduce using rule 64 (time -> TIME .)
    ANNOTATION      reduce using rule 64 (time -> TIME .)
    (               reduce using rule 64 (time -> TIME .)
    INTEGER         reduce using rule 64 (time -> TIME .)
    FLOAT           reduce using rule 64 (time -> TIME .)
    [               reduce using rule 64 (time -> TIME .)
    TIME            reduce using rule 64 (time -> TIME .)
    NAME            reduce using rule 64 (time -> TIME .)
    GLOBAL_VAR      reduce using rule 64 (time -> TIME .)
    PLAYER_VAR      reduce using rule 64 (time -> TIME .)
    NUMBER          reduce using rule 64 (time -> TIME .)
    VALUE           reduce using rule 64 (time -> TIME .)
    ACTION          reduce using rule 64 (time -> TIME .)


state 50

    (34) expr -> assign .

    FUNCTION        reduce using rule 34 (expr -> assign .)
    COMMENT         reduce using rule 34 (expr -> assign .)
    RULE            reduce using rule 34 (expr -> assign .)
    $end            reduce using rule 34 (expr -> assign .)
    ASSIGN          reduce using rule 34 (expr -> assign .)
    *               reduce using rule 34 (expr -> assign .)
    /               reduce using rule 34 (expr -> assign .)
    +               reduce using rule 34 (expr -> assign .)
    -               reduce using rule 34 (expr -> assign .)
    COMPARE         reduce using rule 34 (expr -> assign .)
    NEWLINE         reduce using rule 34 (expr -> assign .)
    )               reduce using rule 34 (expr -> assign .)
    EVENT           reduce using rule 34 (expr -> assign .)
    CONDITIONS      reduce using rule 34 (expr -> assign .)
    ACTIONS         reduce using rule 34 (expr -> assign .)
    DEDENT          reduce using rule 34 (expr -> assign .)
    ,               reduce using rule 34 (expr -> assign .)
    ]               reduce using rule 34 (expr -> assign .)
    ANNOTATION      reduce using rule 34 (expr -> assign .)
    (               reduce using rule 34 (expr -> assign .)
    INTEGER         reduce using rule 34 (expr -> assign .)
    FLOAT           reduce using rule 34 (expr -> assign .)
    [               reduce using rule 34 (expr -> assign .)
    TIME            reduce using rule 34 (expr -> assign .)
    NAME            reduce using rule 34 (expr -> assign .)
    GLOBAL_VAR      reduce using rule 34 (expr -> assign .)
    PLAYER_VAR      reduce using rule 34 (expr -> assign .)
    NUMBER          reduce using rule 34 (expr -> assign .)
    VALUE           reduce using rule 34 (expr -> assign .)
    ACTION          reduce using rule 34 (expr -> assign .)


state 51

    (35) expr -> ANNOTATION . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    ANNOTATION      shift and go to state 51
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    expr                           shift and go to state 85
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 52

    (70) name -> NAME .

    FUNCTION        reduce using rule 70 (name -> NAME .)
    COMMENT         reduce using rule 70 (name -> NAME .)
    RULE            reduce using rule 70 (name -> NAME .)
    $end            reduce using rule 70 (name -> NAME .)
    ASSIGN          reduce using rule 70 (name -> NAME .)
    *               reduce using rule 70 (name -> NAME .)
    /               reduce using rule 70 (name -> NAME .)
    +               reduce using rule 70 (name -> NAME .)
    -               reduce using rule 70 (name -> NAME .)
    COMPARE         reduce using rule 70 (name -> NAME .)
    NEWLINE         reduce using rule 70 (name -> NAME .)
    )               reduce using rule 70 (name -> NAME .)
    EVENT           reduce using rule 70 (name -> NAME .)
    CONDITIONS      reduce using rule 70 (name -> NAME .)
    ACTIONS         reduce using rule 70 (name -> NAME .)
    DEDENT          reduce using rule 70 (name -> NAME .)
    ,               reduce using rule 70 (name -> NAME .)
    ]               reduce using rule 70 (name -> NAME .)
    ANNOTATION      reduce using rule 70 (name -> NAME .)
    (               reduce using rule 70 (name -> NAME .)
    INTEGER         reduce using rule 70 (name -> NAME .)
    FLOAT           reduce using rule 70 (name -> NAME .)
    [               reduce using rule 70 (name -> NAME .)
    TIME            reduce using rule 70 (name -> NAME .)
    NAME            reduce using rule 70 (name -> NAME .)
    GLOBAL_VAR      reduce using rule 70 (name -> NAME .)
    PLAYER_VAR      reduce using rule 70 (name -> NAME .)
    NUMBER          reduce using rule 70 (name -> NAME .)
    VALUE           reduce using rule 70 (name -> NAME .)
    ACTION          reduce using rule 70 (name -> NAME .)


state 53

    (71) global_var -> GLOBAL_VAR .

    FUNCTION        reduce using rule 71 (global_var -> GLOBAL_VAR .)
    COMMENT         reduce using rule 71 (global_var -> GLOBAL_VAR .)
    RULE            reduce using rule 71 (global_var -> GLOBAL_VAR .)
    $end            reduce using rule 71 (global_var -> GLOBAL_VAR .)
    ASSIGN          reduce using rule 71 (global_var -> GLOBAL_VAR .)
    *               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    /               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    +               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    -               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 71 (global_var -> GLOBAL_VAR .)
    NEWLINE         reduce using rule 71 (global_var -> GLOBAL_VAR .)
    )               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    EVENT           reduce using rule 71 (global_var -> GLOBAL_VAR .)
    CONDITIONS      reduce using rule 71 (global_var -> GLOBAL_VAR .)
    ACTIONS         reduce using rule 71 (global_var -> GLOBAL_VAR .)
    DEDENT          reduce using rule 71 (global_var -> GLOBAL_VAR .)
    ,               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    ]               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    ANNOTATION      reduce using rule 71 (global_var -> GLOBAL_VAR .)
    (               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    INTEGER         reduce using rule 71 (global_var -> GLOBAL_VAR .)
    FLOAT           reduce using rule 71 (global_var -> GLOBAL_VAR .)
    [               reduce using rule 71 (global_var -> GLOBAL_VAR .)
    TIME            reduce using rule 71 (global_var -> GLOBAL_VAR .)
    NAME            reduce using rule 71 (global_var -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 71 (global_var -> GLOBAL_VAR .)
    PLAYER_VAR      reduce using rule 71 (global_var -> GLOBAL_VAR .)
    NUMBER          reduce using rule 71 (global_var -> GLOBAL_VAR .)
    VALUE           reduce using rule 71 (global_var -> GLOBAL_VAR .)
    ACTION          reduce using rule 71 (global_var -> GLOBAL_VAR .)


state 54

    (72) player_var -> PLAYER_VAR .

    FUNCTION        reduce using rule 72 (player_var -> PLAYER_VAR .)
    COMMENT         reduce using rule 72 (player_var -> PLAYER_VAR .)
    RULE            reduce using rule 72 (player_var -> PLAYER_VAR .)
    $end            reduce using rule 72 (player_var -> PLAYER_VAR .)
    ASSIGN          reduce using rule 72 (player_var -> PLAYER_VAR .)
    *               reduce using rule 72 (player_var -> PLAYER_VAR .)
    /               reduce using rule 72 (player_var -> PLAYER_VAR .)
    +               reduce using rule 72 (player_var -> PLAYER_VAR .)
    -               reduce using rule 72 (player_var -> PLAYER_VAR .)
    COMPARE         reduce using rule 72 (player_var -> PLAYER_VAR .)
    NEWLINE         reduce using rule 72 (player_var -> PLAYER_VAR .)
    )               reduce using rule 72 (player_var -> PLAYER_VAR .)
    EVENT           reduce using rule 72 (player_var -> PLAYER_VAR .)
    CONDITIONS      reduce using rule 72 (player_var -> PLAYER_VAR .)
    ACTIONS         reduce using rule 72 (player_var -> PLAYER_VAR .)
    DEDENT          reduce using rule 72 (player_var -> PLAYER_VAR .)
    ,               reduce using rule 72 (player_var -> PLAYER_VAR .)
    ]               reduce using rule 72 (player_var -> PLAYER_VAR .)
    ANNOTATION      reduce using rule 72 (player_var -> PLAYER_VAR .)
    (               reduce using rule 72 (player_var -> PLAYER_VAR .)
    INTEGER         reduce using rule 72 (player_var -> PLAYER_VAR .)
    FLOAT           reduce using rule 72 (player_var -> PLAYER_VAR .)
    [               reduce using rule 72 (player_var -> PLAYER_VAR .)
    TIME            reduce using rule 72 (player_var -> PLAYER_VAR .)
    NAME            reduce using rule 72 (player_var -> PLAYER_VAR .)
    GLOBAL_VAR      reduce using rule 72 (player_var -> PLAYER_VAR .)
    PLAYER_VAR      reduce using rule 72 (player_var -> PLAYER_VAR .)
    NUMBER          reduce using rule 72 (player_var -> PLAYER_VAR .)
    VALUE           reduce using rule 72 (player_var -> PLAYER_VAR .)
    ACTION          reduce using rule 72 (player_var -> PLAYER_VAR .)


state 55

    (61) number_expr -> NUMBER . after_expr
    (52) after_expr -> . ( value_list )
    (53) after_expr -> . block
    (54) after_expr -> . NEWLINE
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 87
    NEWLINE         shift and go to state 89
    ANNOTATION      shift and go to state 51
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    after_expr                     shift and go to state 86
    block                          shift and go to state 88
    simple_stmt                    shift and go to state 23
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 56

    (62) value_expr -> VALUE . after_expr
    (52) after_expr -> . ( value_list )
    (53) after_expr -> . block
    (54) after_expr -> . NEWLINE
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 87
    NEWLINE         shift and go to state 89
    ANNOTATION      shift and go to state 51
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    after_expr                     shift and go to state 90
    block                          shift and go to state 88
    simple_stmt                    shift and go to state 23
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 57

    (63) action_expr -> ACTION . after_expr
    (52) after_expr -> . ( value_list )
    (53) after_expr -> . block
    (54) after_expr -> . NEWLINE
    (31) block -> . NEWLINE INDENT statements DEDENT
    (32) block -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 87
    NEWLINE         shift and go to state 89
    ANNOTATION      shift and go to state 51
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    after_expr                     shift and go to state 91
    block                          shift and go to state 88
    simple_stmt                    shift and go to state 23
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 58

    (58) compare -> arith_expr .
    (37) arith_expr -> arith_expr . + arith_expr
    (38) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    FUNCTION        reduce using rule 58 (compare -> arith_expr .)
    COMMENT         reduce using rule 58 (compare -> arith_expr .)
    RULE            reduce using rule 58 (compare -> arith_expr .)
    $end            reduce using rule 58 (compare -> arith_expr .)
    ASSIGN          reduce using rule 58 (compare -> arith_expr .)
    *               reduce using rule 58 (compare -> arith_expr .)
    /               reduce using rule 58 (compare -> arith_expr .)
    COMPARE         reduce using rule 58 (compare -> arith_expr .)
    NEWLINE         reduce using rule 58 (compare -> arith_expr .)
    )               reduce using rule 58 (compare -> arith_expr .)
    EVENT           reduce using rule 58 (compare -> arith_expr .)
    CONDITIONS      reduce using rule 58 (compare -> arith_expr .)
    ACTIONS         reduce using rule 58 (compare -> arith_expr .)
    DEDENT          reduce using rule 58 (compare -> arith_expr .)
    ,               reduce using rule 58 (compare -> arith_expr .)
    ]               reduce using rule 58 (compare -> arith_expr .)
    ANNOTATION      reduce using rule 58 (compare -> arith_expr .)
    (               reduce using rule 58 (compare -> arith_expr .)
    INTEGER         reduce using rule 58 (compare -> arith_expr .)
    FLOAT           reduce using rule 58 (compare -> arith_expr .)
    [               reduce using rule 58 (compare -> arith_expr .)
    TIME            reduce using rule 58 (compare -> arith_expr .)
    NAME            reduce using rule 58 (compare -> arith_expr .)
    GLOBAL_VAR      reduce using rule 58 (compare -> arith_expr .)
    PLAYER_VAR      reduce using rule 58 (compare -> arith_expr .)
    NUMBER          reduce using rule 58 (compare -> arith_expr .)
    VALUE           reduce using rule 58 (compare -> arith_expr .)
    ACTION          reduce using rule 58 (compare -> arith_expr .)
    +               shift and go to state 92
    -               shift and go to state 93

  ! +               [ reduce using rule 58 (compare -> arith_expr .) ]
  ! -               [ reduce using rule 58 (compare -> arith_expr .) ]


state 59

    (36) arith_expr -> term .
    (40) term -> term . * term
    (41) term -> term . / term

  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    FUNCTION        reduce using rule 36 (arith_expr -> term .)
    COMMENT         reduce using rule 36 (arith_expr -> term .)
    RULE            reduce using rule 36 (arith_expr -> term .)
    $end            reduce using rule 36 (arith_expr -> term .)
    ASSIGN          reduce using rule 36 (arith_expr -> term .)
    +               reduce using rule 36 (arith_expr -> term .)
    -               reduce using rule 36 (arith_expr -> term .)
    COMPARE         reduce using rule 36 (arith_expr -> term .)
    NEWLINE         reduce using rule 36 (arith_expr -> term .)
    )               reduce using rule 36 (arith_expr -> term .)
    EVENT           reduce using rule 36 (arith_expr -> term .)
    CONDITIONS      reduce using rule 36 (arith_expr -> term .)
    ACTIONS         reduce using rule 36 (arith_expr -> term .)
    DEDENT          reduce using rule 36 (arith_expr -> term .)
    ,               reduce using rule 36 (arith_expr -> term .)
    ]               reduce using rule 36 (arith_expr -> term .)
    ANNOTATION      reduce using rule 36 (arith_expr -> term .)
    (               reduce using rule 36 (arith_expr -> term .)
    INTEGER         reduce using rule 36 (arith_expr -> term .)
    FLOAT           reduce using rule 36 (arith_expr -> term .)
    [               reduce using rule 36 (arith_expr -> term .)
    TIME            reduce using rule 36 (arith_expr -> term .)
    NAME            reduce using rule 36 (arith_expr -> term .)
    GLOBAL_VAR      reduce using rule 36 (arith_expr -> term .)
    PLAYER_VAR      reduce using rule 36 (arith_expr -> term .)
    NUMBER          reduce using rule 36 (arith_expr -> term .)
    VALUE           reduce using rule 36 (arith_expr -> term .)
    ACTION          reduce using rule 36 (arith_expr -> term .)
    *               shift and go to state 94
    /               shift and go to state 95

  ! *               [ reduce using rule 36 (arith_expr -> term .) ]
  ! /               [ reduce using rule 36 (arith_expr -> term .) ]


state 60

    (14) rule -> RULE NEWLINE . INDENT ruleblock DEDENT

    INDENT          shift and go to state 96


state 61

    (12) ruleset -> ruleset rule .

    RULE            reduce using rule 12 (ruleset -> ruleset rule .)
    FUNCTION        reduce using rule 12 (ruleset -> ruleset rule .)
    COMMENT         reduce using rule 12 (ruleset -> ruleset rule .)
    $end            reduce using rule 12 (ruleset -> ruleset rule .)
    ASSIGN          reduce using rule 12 (ruleset -> ruleset rule .)
    *               reduce using rule 12 (ruleset -> ruleset rule .)
    /               reduce using rule 12 (ruleset -> ruleset rule .)
    +               reduce using rule 12 (ruleset -> ruleset rule .)
    -               reduce using rule 12 (ruleset -> ruleset rule .)
    COMPARE         reduce using rule 12 (ruleset -> ruleset rule .)
    NEWLINE         reduce using rule 12 (ruleset -> ruleset rule .)
    )               reduce using rule 12 (ruleset -> ruleset rule .)
    EVENT           reduce using rule 12 (ruleset -> ruleset rule .)
    CONDITIONS      reduce using rule 12 (ruleset -> ruleset rule .)
    ACTIONS         reduce using rule 12 (ruleset -> ruleset rule .)
    DEDENT          reduce using rule 12 (ruleset -> ruleset rule .)
    ,               reduce using rule 12 (ruleset -> ruleset rule .)
    ]               reduce using rule 12 (ruleset -> ruleset rule .)
    ANNOTATION      reduce using rule 12 (ruleset -> ruleset rule .)
    (               reduce using rule 12 (ruleset -> ruleset rule .)
    INTEGER         reduce using rule 12 (ruleset -> ruleset rule .)
    FLOAT           reduce using rule 12 (ruleset -> ruleset rule .)
    [               reduce using rule 12 (ruleset -> ruleset rule .)
    TIME            reduce using rule 12 (ruleset -> ruleset rule .)
    NAME            reduce using rule 12 (ruleset -> ruleset rule .)
    GLOBAL_VAR      reduce using rule 12 (ruleset -> ruleset rule .)
    PLAYER_VAR      reduce using rule 12 (ruleset -> ruleset rule .)
    NUMBER          reduce using rule 12 (ruleset -> ruleset rule .)
    VALUE           reduce using rule 12 (ruleset -> ruleset rule .)
    ACTION          reduce using rule 12 (ruleset -> ruleset rule .)


state 62

    (60) assign -> value ASSIGN . compare
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    value                          shift and go to state 72
    compare                        shift and go to state 97
    arith_expr                     shift and go to state 58
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 63

    (18) ruleblock -> NEWLINE . ruleblock
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block
    (75) empty -> . COMMENT
    (76) empty -> .

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for EVENT resolved as shift
  ! shift/reduce conflict for CONDITIONS resolved as shift
  ! shift/reduce conflict for ACTIONS resolved as shift
    NEWLINE         shift and go to state 63
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36
    COMMENT         shift and go to state 7
    FUNCTION        reduce using rule 76 (empty -> .)
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    -               reduce using rule 76 (empty -> .)
    COMPARE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    (               reduce using rule 76 (empty -> .)
    INTEGER         reduce using rule 76 (empty -> .)
    FLOAT           reduce using rule 76 (empty -> .)
    [               reduce using rule 76 (empty -> .)
    TIME            reduce using rule 76 (empty -> .)
    NAME            reduce using rule 76 (empty -> .)
    GLOBAL_VAR      reduce using rule 76 (empty -> .)
    PLAYER_VAR      reduce using rule 76 (empty -> .)
    NUMBER          reduce using rule 76 (empty -> .)
    VALUE           reduce using rule 76 (empty -> .)
    ACTION          reduce using rule 76 (empty -> .)

  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 76 (empty -> .) ]
  ! EVENT           [ reduce using rule 76 (empty -> .) ]
  ! CONDITIONS      [ reduce using rule 76 (empty -> .) ]
  ! ACTIONS         [ reduce using rule 76 (empty -> .) ]

    ruleblock                      shift and go to state 65
    event                          shift and go to state 20
    conditions                     shift and go to state 21
    actions                        shift and go to state 22
    empty                          shift and go to state 68

state 64

    (10) funcbody -> NEWLINE empty .
    (19) ruleblock -> empty .

  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for COMMENT resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for RULE resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for $end resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for * resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for / resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for + resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for - resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for COMPARE resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ) resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for EVENT resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for CONDITIONS resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ACTIONS resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for DEDENT resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for , resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ] resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ANNOTATION resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ( resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for [ resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for TIME resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for NAME resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for GLOBAL_VAR resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for PLAYER_VAR resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for VALUE resolved using rule 10 (funcbody -> NEWLINE empty .)
  ! reduce/reduce conflict for ACTION resolved using rule 10 (funcbody -> NEWLINE empty .)
    FUNCTION        reduce using rule 10 (funcbody -> NEWLINE empty .)
    COMMENT         reduce using rule 10 (funcbody -> NEWLINE empty .)
    RULE            reduce using rule 10 (funcbody -> NEWLINE empty .)
    $end            reduce using rule 10 (funcbody -> NEWLINE empty .)
    ASSIGN          reduce using rule 10 (funcbody -> NEWLINE empty .)
    *               reduce using rule 10 (funcbody -> NEWLINE empty .)
    /               reduce using rule 10 (funcbody -> NEWLINE empty .)
    +               reduce using rule 10 (funcbody -> NEWLINE empty .)
    -               reduce using rule 10 (funcbody -> NEWLINE empty .)
    COMPARE         reduce using rule 10 (funcbody -> NEWLINE empty .)
    NEWLINE         reduce using rule 10 (funcbody -> NEWLINE empty .)
    )               reduce using rule 10 (funcbody -> NEWLINE empty .)
    EVENT           reduce using rule 10 (funcbody -> NEWLINE empty .)
    CONDITIONS      reduce using rule 10 (funcbody -> NEWLINE empty .)
    ACTIONS         reduce using rule 10 (funcbody -> NEWLINE empty .)
    DEDENT          reduce using rule 10 (funcbody -> NEWLINE empty .)
    ,               reduce using rule 10 (funcbody -> NEWLINE empty .)
    ]               reduce using rule 10 (funcbody -> NEWLINE empty .)
    ANNOTATION      reduce using rule 10 (funcbody -> NEWLINE empty .)
    (               reduce using rule 10 (funcbody -> NEWLINE empty .)
    INTEGER         reduce using rule 10 (funcbody -> NEWLINE empty .)
    FLOAT           reduce using rule 10 (funcbody -> NEWLINE empty .)
    [               reduce using rule 10 (funcbody -> NEWLINE empty .)
    TIME            reduce using rule 10 (funcbody -> NEWLINE empty .)
    NAME            reduce using rule 10 (funcbody -> NEWLINE empty .)
    GLOBAL_VAR      reduce using rule 10 (funcbody -> NEWLINE empty .)
    PLAYER_VAR      reduce using rule 10 (funcbody -> NEWLINE empty .)
    NUMBER          reduce using rule 10 (funcbody -> NEWLINE empty .)
    VALUE           reduce using rule 10 (funcbody -> NEWLINE empty .)
    ACTION          reduce using rule 10 (funcbody -> NEWLINE empty .)

  ! FUNCTION        [ reduce using rule 19 (ruleblock -> empty .) ]
  ! COMMENT         [ reduce using rule 19 (ruleblock -> empty .) ]
  ! RULE            [ reduce using rule 19 (ruleblock -> empty .) ]
  ! $end            [ reduce using rule 19 (ruleblock -> empty .) ]
  ! ASSIGN          [ reduce using rule 19 (ruleblock -> empty .) ]
  ! *               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! /               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! +               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! -               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! COMPARE         [ reduce using rule 19 (ruleblock -> empty .) ]
  ! NEWLINE         [ reduce using rule 19 (ruleblock -> empty .) ]
  ! )               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! EVENT           [ reduce using rule 19 (ruleblock -> empty .) ]
  ! CONDITIONS      [ reduce using rule 19 (ruleblock -> empty .) ]
  ! ACTIONS         [ reduce using rule 19 (ruleblock -> empty .) ]
  ! DEDENT          [ reduce using rule 19 (ruleblock -> empty .) ]
  ! ,               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! ]               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! ANNOTATION      [ reduce using rule 19 (ruleblock -> empty .) ]
  ! (               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! INTEGER         [ reduce using rule 19 (ruleblock -> empty .) ]
  ! FLOAT           [ reduce using rule 19 (ruleblock -> empty .) ]
  ! [               [ reduce using rule 19 (ruleblock -> empty .) ]
  ! TIME            [ reduce using rule 19 (ruleblock -> empty .) ]
  ! NAME            [ reduce using rule 19 (ruleblock -> empty .) ]
  ! GLOBAL_VAR      [ reduce using rule 19 (ruleblock -> empty .) ]
  ! PLAYER_VAR      [ reduce using rule 19 (ruleblock -> empty .) ]
  ! NUMBER          [ reduce using rule 19 (ruleblock -> empty .) ]
  ! VALUE           [ reduce using rule 19 (ruleblock -> empty .) ]
  ! ACTION          [ reduce using rule 19 (ruleblock -> empty .) ]


state 65

    (18) ruleblock -> NEWLINE ruleblock .

    FUNCTION        reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    COMMENT         reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    RULE            reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    $end            reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    ASSIGN          reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    *               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    /               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    +               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    -               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    COMPARE         reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    NEWLINE         reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    )               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    EVENT           reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    CONDITIONS      reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    ACTIONS         reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    DEDENT          reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    ,               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    ]               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    ANNOTATION      reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    (               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    INTEGER         reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    FLOAT           reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    [               reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    TIME            reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    NAME            reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    GLOBAL_VAR      reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    PLAYER_VAR      reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    NUMBER          reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    VALUE           reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)
    ACTION          reduce using rule 18 (ruleblock -> NEWLINE ruleblock .)


state 66

    (31) block -> NEWLINE INDENT . statements DEDENT
    (23) statements -> . statements statement
    (24) statements -> . statement
    (25) statement -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    ANNOTATION      shift and go to state 51
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    statements                     shift and go to state 98
    statement                      shift and go to state 99
    simple_stmt                    shift and go to state 100
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 67

    (15) ruleblock -> event ruleblock .

    FUNCTION        reduce using rule 15 (ruleblock -> event ruleblock .)
    COMMENT         reduce using rule 15 (ruleblock -> event ruleblock .)
    RULE            reduce using rule 15 (ruleblock -> event ruleblock .)
    $end            reduce using rule 15 (ruleblock -> event ruleblock .)
    ASSIGN          reduce using rule 15 (ruleblock -> event ruleblock .)
    *               reduce using rule 15 (ruleblock -> event ruleblock .)
    /               reduce using rule 15 (ruleblock -> event ruleblock .)
    +               reduce using rule 15 (ruleblock -> event ruleblock .)
    -               reduce using rule 15 (ruleblock -> event ruleblock .)
    COMPARE         reduce using rule 15 (ruleblock -> event ruleblock .)
    NEWLINE         reduce using rule 15 (ruleblock -> event ruleblock .)
    )               reduce using rule 15 (ruleblock -> event ruleblock .)
    EVENT           reduce using rule 15 (ruleblock -> event ruleblock .)
    CONDITIONS      reduce using rule 15 (ruleblock -> event ruleblock .)
    ACTIONS         reduce using rule 15 (ruleblock -> event ruleblock .)
    DEDENT          reduce using rule 15 (ruleblock -> event ruleblock .)
    ,               reduce using rule 15 (ruleblock -> event ruleblock .)
    ]               reduce using rule 15 (ruleblock -> event ruleblock .)
    ANNOTATION      reduce using rule 15 (ruleblock -> event ruleblock .)
    (               reduce using rule 15 (ruleblock -> event ruleblock .)
    INTEGER         reduce using rule 15 (ruleblock -> event ruleblock .)
    FLOAT           reduce using rule 15 (ruleblock -> event ruleblock .)
    [               reduce using rule 15 (ruleblock -> event ruleblock .)
    TIME            reduce using rule 15 (ruleblock -> event ruleblock .)
    NAME            reduce using rule 15 (ruleblock -> event ruleblock .)
    GLOBAL_VAR      reduce using rule 15 (ruleblock -> event ruleblock .)
    PLAYER_VAR      reduce using rule 15 (ruleblock -> event ruleblock .)
    NUMBER          reduce using rule 15 (ruleblock -> event ruleblock .)
    VALUE           reduce using rule 15 (ruleblock -> event ruleblock .)
    ACTION          reduce using rule 15 (ruleblock -> event ruleblock .)


state 68

    (19) ruleblock -> empty .

    FUNCTION        reduce using rule 19 (ruleblock -> empty .)
    COMMENT         reduce using rule 19 (ruleblock -> empty .)
    RULE            reduce using rule 19 (ruleblock -> empty .)
    $end            reduce using rule 19 (ruleblock -> empty .)
    ASSIGN          reduce using rule 19 (ruleblock -> empty .)
    *               reduce using rule 19 (ruleblock -> empty .)
    /               reduce using rule 19 (ruleblock -> empty .)
    +               reduce using rule 19 (ruleblock -> empty .)
    -               reduce using rule 19 (ruleblock -> empty .)
    COMPARE         reduce using rule 19 (ruleblock -> empty .)
    NEWLINE         reduce using rule 19 (ruleblock -> empty .)
    )               reduce using rule 19 (ruleblock -> empty .)
    EVENT           reduce using rule 19 (ruleblock -> empty .)
    CONDITIONS      reduce using rule 19 (ruleblock -> empty .)
    ACTIONS         reduce using rule 19 (ruleblock -> empty .)
    DEDENT          reduce using rule 19 (ruleblock -> empty .)
    ,               reduce using rule 19 (ruleblock -> empty .)
    ]               reduce using rule 19 (ruleblock -> empty .)
    ANNOTATION      reduce using rule 19 (ruleblock -> empty .)
    (               reduce using rule 19 (ruleblock -> empty .)
    INTEGER         reduce using rule 19 (ruleblock -> empty .)
    FLOAT           reduce using rule 19 (ruleblock -> empty .)
    [               reduce using rule 19 (ruleblock -> empty .)
    TIME            reduce using rule 19 (ruleblock -> empty .)
    NAME            reduce using rule 19 (ruleblock -> empty .)
    GLOBAL_VAR      reduce using rule 19 (ruleblock -> empty .)
    PLAYER_VAR      reduce using rule 19 (ruleblock -> empty .)
    NUMBER          reduce using rule 19 (ruleblock -> empty .)
    VALUE           reduce using rule 19 (ruleblock -> empty .)
    ACTION          reduce using rule 19 (ruleblock -> empty .)


state 69

    (16) ruleblock -> conditions ruleblock .

    FUNCTION        reduce using rule 16 (ruleblock -> conditions ruleblock .)
    COMMENT         reduce using rule 16 (ruleblock -> conditions ruleblock .)
    RULE            reduce using rule 16 (ruleblock -> conditions ruleblock .)
    $end            reduce using rule 16 (ruleblock -> conditions ruleblock .)
    ASSIGN          reduce using rule 16 (ruleblock -> conditions ruleblock .)
    *               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    /               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    +               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    -               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    COMPARE         reduce using rule 16 (ruleblock -> conditions ruleblock .)
    NEWLINE         reduce using rule 16 (ruleblock -> conditions ruleblock .)
    )               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    EVENT           reduce using rule 16 (ruleblock -> conditions ruleblock .)
    CONDITIONS      reduce using rule 16 (ruleblock -> conditions ruleblock .)
    ACTIONS         reduce using rule 16 (ruleblock -> conditions ruleblock .)
    DEDENT          reduce using rule 16 (ruleblock -> conditions ruleblock .)
    ,               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    ]               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    ANNOTATION      reduce using rule 16 (ruleblock -> conditions ruleblock .)
    (               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    INTEGER         reduce using rule 16 (ruleblock -> conditions ruleblock .)
    FLOAT           reduce using rule 16 (ruleblock -> conditions ruleblock .)
    [               reduce using rule 16 (ruleblock -> conditions ruleblock .)
    TIME            reduce using rule 16 (ruleblock -> conditions ruleblock .)
    NAME            reduce using rule 16 (ruleblock -> conditions ruleblock .)
    GLOBAL_VAR      reduce using rule 16 (ruleblock -> conditions ruleblock .)
    PLAYER_VAR      reduce using rule 16 (ruleblock -> conditions ruleblock .)
    NUMBER          reduce using rule 16 (ruleblock -> conditions ruleblock .)
    VALUE           reduce using rule 16 (ruleblock -> conditions ruleblock .)
    ACTION          reduce using rule 16 (ruleblock -> conditions ruleblock .)


state 70

    (17) ruleblock -> actions ruleblock .

    FUNCTION        reduce using rule 17 (ruleblock -> actions ruleblock .)
    COMMENT         reduce using rule 17 (ruleblock -> actions ruleblock .)
    RULE            reduce using rule 17 (ruleblock -> actions ruleblock .)
    $end            reduce using rule 17 (ruleblock -> actions ruleblock .)
    ASSIGN          reduce using rule 17 (ruleblock -> actions ruleblock .)
    *               reduce using rule 17 (ruleblock -> actions ruleblock .)
    /               reduce using rule 17 (ruleblock -> actions ruleblock .)
    +               reduce using rule 17 (ruleblock -> actions ruleblock .)
    -               reduce using rule 17 (ruleblock -> actions ruleblock .)
    COMPARE         reduce using rule 17 (ruleblock -> actions ruleblock .)
    NEWLINE         reduce using rule 17 (ruleblock -> actions ruleblock .)
    )               reduce using rule 17 (ruleblock -> actions ruleblock .)
    EVENT           reduce using rule 17 (ruleblock -> actions ruleblock .)
    CONDITIONS      reduce using rule 17 (ruleblock -> actions ruleblock .)
    ACTIONS         reduce using rule 17 (ruleblock -> actions ruleblock .)
    DEDENT          reduce using rule 17 (ruleblock -> actions ruleblock .)
    ,               reduce using rule 17 (ruleblock -> actions ruleblock .)
    ]               reduce using rule 17 (ruleblock -> actions ruleblock .)
    ANNOTATION      reduce using rule 17 (ruleblock -> actions ruleblock .)
    (               reduce using rule 17 (ruleblock -> actions ruleblock .)
    INTEGER         reduce using rule 17 (ruleblock -> actions ruleblock .)
    FLOAT           reduce using rule 17 (ruleblock -> actions ruleblock .)
    [               reduce using rule 17 (ruleblock -> actions ruleblock .)
    TIME            reduce using rule 17 (ruleblock -> actions ruleblock .)
    NAME            reduce using rule 17 (ruleblock -> actions ruleblock .)
    GLOBAL_VAR      reduce using rule 17 (ruleblock -> actions ruleblock .)
    PLAYER_VAR      reduce using rule 17 (ruleblock -> actions ruleblock .)
    NUMBER          reduce using rule 17 (ruleblock -> actions ruleblock .)
    VALUE           reduce using rule 17 (ruleblock -> actions ruleblock .)
    ACTION          reduce using rule 17 (ruleblock -> actions ruleblock .)


state 71

    (49) value -> ( compare . )
    (59) compare -> compare . COMPARE arith_expr

    )               shift and go to state 101
    COMPARE         shift and go to state 74


state 72

    (39) term -> value .

    *               reduce using rule 39 (term -> value .)
    /               reduce using rule 39 (term -> value .)
    +               reduce using rule 39 (term -> value .)
    -               reduce using rule 39 (term -> value .)
    )               reduce using rule 39 (term -> value .)
    COMPARE         reduce using rule 39 (term -> value .)
    FUNCTION        reduce using rule 39 (term -> value .)
    COMMENT         reduce using rule 39 (term -> value .)
    RULE            reduce using rule 39 (term -> value .)
    $end            reduce using rule 39 (term -> value .)
    ASSIGN          reduce using rule 39 (term -> value .)
    NEWLINE         reduce using rule 39 (term -> value .)
    EVENT           reduce using rule 39 (term -> value .)
    CONDITIONS      reduce using rule 39 (term -> value .)
    ACTIONS         reduce using rule 39 (term -> value .)
    DEDENT          reduce using rule 39 (term -> value .)
    ,               reduce using rule 39 (term -> value .)
    ]               reduce using rule 39 (term -> value .)
    ANNOTATION      reduce using rule 39 (term -> value .)
    (               reduce using rule 39 (term -> value .)
    INTEGER         reduce using rule 39 (term -> value .)
    FLOAT           reduce using rule 39 (term -> value .)
    [               reduce using rule 39 (term -> value .)
    TIME            reduce using rule 39 (term -> value .)
    NAME            reduce using rule 39 (term -> value .)
    GLOBAL_VAR      reduce using rule 39 (term -> value .)
    PLAYER_VAR      reduce using rule 39 (term -> value .)
    NUMBER          reduce using rule 39 (term -> value .)
    VALUE           reduce using rule 39 (term -> value .)
    ACTION          reduce using rule 39 (term -> value .)


state 73

    (51) value -> empty .

    *               reduce using rule 51 (value -> empty .)
    /               reduce using rule 51 (value -> empty .)
    +               reduce using rule 51 (value -> empty .)
    -               reduce using rule 51 (value -> empty .)
    )               reduce using rule 51 (value -> empty .)
    COMPARE         reduce using rule 51 (value -> empty .)
    FUNCTION        reduce using rule 51 (value -> empty .)
    COMMENT         reduce using rule 51 (value -> empty .)
    RULE            reduce using rule 51 (value -> empty .)
    $end            reduce using rule 51 (value -> empty .)
    ASSIGN          reduce using rule 51 (value -> empty .)
    NEWLINE         reduce using rule 51 (value -> empty .)
    EVENT           reduce using rule 51 (value -> empty .)
    CONDITIONS      reduce using rule 51 (value -> empty .)
    ACTIONS         reduce using rule 51 (value -> empty .)
    DEDENT          reduce using rule 51 (value -> empty .)
    ,               reduce using rule 51 (value -> empty .)
    ]               reduce using rule 51 (value -> empty .)
    ANNOTATION      reduce using rule 51 (value -> empty .)
    (               reduce using rule 51 (value -> empty .)
    INTEGER         reduce using rule 51 (value -> empty .)
    FLOAT           reduce using rule 51 (value -> empty .)
    [               reduce using rule 51 (value -> empty .)
    TIME            reduce using rule 51 (value -> empty .)
    NAME            reduce using rule 51 (value -> empty .)
    GLOBAL_VAR      reduce using rule 51 (value -> empty .)
    PLAYER_VAR      reduce using rule 51 (value -> empty .)
    NUMBER          reduce using rule 51 (value -> empty .)
    VALUE           reduce using rule 51 (value -> empty .)
    ACTION          reduce using rule 51 (value -> empty .)


state 74

    (59) compare -> compare COMPARE . arith_expr
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    arith_expr                     shift and go to state 102
    term                           shift and go to state 59
    value                          shift and go to state 72
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 75

    (20) event -> EVENT block .

    FUNCTION        reduce using rule 20 (event -> EVENT block .)
    COMMENT         reduce using rule 20 (event -> EVENT block .)
    RULE            reduce using rule 20 (event -> EVENT block .)
    $end            reduce using rule 20 (event -> EVENT block .)
    ASSIGN          reduce using rule 20 (event -> EVENT block .)
    *               reduce using rule 20 (event -> EVENT block .)
    /               reduce using rule 20 (event -> EVENT block .)
    +               reduce using rule 20 (event -> EVENT block .)
    -               reduce using rule 20 (event -> EVENT block .)
    COMPARE         reduce using rule 20 (event -> EVENT block .)
    NEWLINE         reduce using rule 20 (event -> EVENT block .)
    )               reduce using rule 20 (event -> EVENT block .)
    EVENT           reduce using rule 20 (event -> EVENT block .)
    CONDITIONS      reduce using rule 20 (event -> EVENT block .)
    ACTIONS         reduce using rule 20 (event -> EVENT block .)
    DEDENT          reduce using rule 20 (event -> EVENT block .)
    ,               reduce using rule 20 (event -> EVENT block .)
    ]               reduce using rule 20 (event -> EVENT block .)
    ANNOTATION      reduce using rule 20 (event -> EVENT block .)
    (               reduce using rule 20 (event -> EVENT block .)
    INTEGER         reduce using rule 20 (event -> EVENT block .)
    FLOAT           reduce using rule 20 (event -> EVENT block .)
    [               reduce using rule 20 (event -> EVENT block .)
    TIME            reduce using rule 20 (event -> EVENT block .)
    NAME            reduce using rule 20 (event -> EVENT block .)
    GLOBAL_VAR      reduce using rule 20 (event -> EVENT block .)
    PLAYER_VAR      reduce using rule 20 (event -> EVENT block .)
    NUMBER          reduce using rule 20 (event -> EVENT block .)
    VALUE           reduce using rule 20 (event -> EVENT block .)
    ACTION          reduce using rule 20 (event -> EVENT block .)


state 76

    (31) block -> NEWLINE . INDENT statements DEDENT

    INDENT          shift and go to state 66


state 77

    (60) assign -> value . ASSIGN compare
    (39) term -> value .

  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 62
    FUNCTION        reduce using rule 39 (term -> value .)
    COMMENT         reduce using rule 39 (term -> value .)
    RULE            reduce using rule 39 (term -> value .)
    $end            reduce using rule 39 (term -> value .)
    *               reduce using rule 39 (term -> value .)
    /               reduce using rule 39 (term -> value .)
    +               reduce using rule 39 (term -> value .)
    -               reduce using rule 39 (term -> value .)
    COMPARE         reduce using rule 39 (term -> value .)
    NEWLINE         reduce using rule 39 (term -> value .)
    )               reduce using rule 39 (term -> value .)
    EVENT           reduce using rule 39 (term -> value .)
    CONDITIONS      reduce using rule 39 (term -> value .)
    ACTIONS         reduce using rule 39 (term -> value .)
    DEDENT          reduce using rule 39 (term -> value .)
    ,               reduce using rule 39 (term -> value .)
    ]               reduce using rule 39 (term -> value .)
    ANNOTATION      reduce using rule 39 (term -> value .)
    (               reduce using rule 39 (term -> value .)
    INTEGER         reduce using rule 39 (term -> value .)
    FLOAT           reduce using rule 39 (term -> value .)
    [               reduce using rule 39 (term -> value .)
    TIME            reduce using rule 39 (term -> value .)
    NAME            reduce using rule 39 (term -> value .)
    GLOBAL_VAR      reduce using rule 39 (term -> value .)
    PLAYER_VAR      reduce using rule 39 (term -> value .)
    NUMBER          reduce using rule 39 (term -> value .)
    VALUE           reduce using rule 39 (term -> value .)
    ACTION          reduce using rule 39 (term -> value .)

  ! ASSIGN          [ reduce using rule 39 (term -> value .) ]


state 78

    (21) conditions -> CONDITIONS block .

    FUNCTION        reduce using rule 21 (conditions -> CONDITIONS block .)
    COMMENT         reduce using rule 21 (conditions -> CONDITIONS block .)
    RULE            reduce using rule 21 (conditions -> CONDITIONS block .)
    $end            reduce using rule 21 (conditions -> CONDITIONS block .)
    ASSIGN          reduce using rule 21 (conditions -> CONDITIONS block .)
    *               reduce using rule 21 (conditions -> CONDITIONS block .)
    /               reduce using rule 21 (conditions -> CONDITIONS block .)
    +               reduce using rule 21 (conditions -> CONDITIONS block .)
    -               reduce using rule 21 (conditions -> CONDITIONS block .)
    COMPARE         reduce using rule 21 (conditions -> CONDITIONS block .)
    NEWLINE         reduce using rule 21 (conditions -> CONDITIONS block .)
    )               reduce using rule 21 (conditions -> CONDITIONS block .)
    EVENT           reduce using rule 21 (conditions -> CONDITIONS block .)
    CONDITIONS      reduce using rule 21 (conditions -> CONDITIONS block .)
    ACTIONS         reduce using rule 21 (conditions -> CONDITIONS block .)
    DEDENT          reduce using rule 21 (conditions -> CONDITIONS block .)
    ,               reduce using rule 21 (conditions -> CONDITIONS block .)
    ]               reduce using rule 21 (conditions -> CONDITIONS block .)
    ANNOTATION      reduce using rule 21 (conditions -> CONDITIONS block .)
    (               reduce using rule 21 (conditions -> CONDITIONS block .)
    INTEGER         reduce using rule 21 (conditions -> CONDITIONS block .)
    FLOAT           reduce using rule 21 (conditions -> CONDITIONS block .)
    [               reduce using rule 21 (conditions -> CONDITIONS block .)
    TIME            reduce using rule 21 (conditions -> CONDITIONS block .)
    NAME            reduce using rule 21 (conditions -> CONDITIONS block .)
    GLOBAL_VAR      reduce using rule 21 (conditions -> CONDITIONS block .)
    PLAYER_VAR      reduce using rule 21 (conditions -> CONDITIONS block .)
    NUMBER          reduce using rule 21 (conditions -> CONDITIONS block .)
    VALUE           reduce using rule 21 (conditions -> CONDITIONS block .)
    ACTION          reduce using rule 21 (conditions -> CONDITIONS block .)


state 79

    (22) actions -> ACTIONS block .

    FUNCTION        reduce using rule 22 (actions -> ACTIONS block .)
    COMMENT         reduce using rule 22 (actions -> ACTIONS block .)
    RULE            reduce using rule 22 (actions -> ACTIONS block .)
    $end            reduce using rule 22 (actions -> ACTIONS block .)
    ASSIGN          reduce using rule 22 (actions -> ACTIONS block .)
    *               reduce using rule 22 (actions -> ACTIONS block .)
    /               reduce using rule 22 (actions -> ACTIONS block .)
    +               reduce using rule 22 (actions -> ACTIONS block .)
    -               reduce using rule 22 (actions -> ACTIONS block .)
    COMPARE         reduce using rule 22 (actions -> ACTIONS block .)
    NEWLINE         reduce using rule 22 (actions -> ACTIONS block .)
    )               reduce using rule 22 (actions -> ACTIONS block .)
    EVENT           reduce using rule 22 (actions -> ACTIONS block .)
    CONDITIONS      reduce using rule 22 (actions -> ACTIONS block .)
    ACTIONS         reduce using rule 22 (actions -> ACTIONS block .)
    DEDENT          reduce using rule 22 (actions -> ACTIONS block .)
    ,               reduce using rule 22 (actions -> ACTIONS block .)
    ]               reduce using rule 22 (actions -> ACTIONS block .)
    ANNOTATION      reduce using rule 22 (actions -> ACTIONS block .)
    (               reduce using rule 22 (actions -> ACTIONS block .)
    INTEGER         reduce using rule 22 (actions -> ACTIONS block .)
    FLOAT           reduce using rule 22 (actions -> ACTIONS block .)
    [               reduce using rule 22 (actions -> ACTIONS block .)
    TIME            reduce using rule 22 (actions -> ACTIONS block .)
    NAME            reduce using rule 22 (actions -> ACTIONS block .)
    GLOBAL_VAR      reduce using rule 22 (actions -> ACTIONS block .)
    PLAYER_VAR      reduce using rule 22 (actions -> ACTIONS block .)
    NUMBER          reduce using rule 22 (actions -> ACTIONS block .)
    VALUE           reduce using rule 22 (actions -> ACTIONS block .)
    ACTION          reduce using rule 22 (actions -> ACTIONS block .)


state 80

    (26) simple_stmt -> expr NEWLINE .

    FUNCTION        reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    COMMENT         reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    RULE            reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    $end            reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    ASSIGN          reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    *               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    /               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    +               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    -               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    COMPARE         reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    NEWLINE         reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    )               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    EVENT           reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    CONDITIONS      reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    ACTIONS         reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    DEDENT          reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    ,               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    ]               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    ANNOTATION      reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    (               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    INTEGER         reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    FLOAT           reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    [               reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    TIME            reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    NAME            reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    GLOBAL_VAR      reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    PLAYER_VAR      reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    NUMBER          reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    VALUE           reduce using rule 26 (simple_stmt -> expr NEWLINE .)
    ACTION          reduce using rule 26 (simple_stmt -> expr NEWLINE .)


state 81

    (73) vector -> COMPARE value . , value , value COMPARE

    ,               shift and go to state 103


state 82

    (57) unary -> - value .

    FUNCTION        reduce using rule 57 (unary -> - value .)
    COMMENT         reduce using rule 57 (unary -> - value .)
    RULE            reduce using rule 57 (unary -> - value .)
    $end            reduce using rule 57 (unary -> - value .)
    ASSIGN          reduce using rule 57 (unary -> - value .)
    *               reduce using rule 57 (unary -> - value .)
    /               reduce using rule 57 (unary -> - value .)
    +               reduce using rule 57 (unary -> - value .)
    -               reduce using rule 57 (unary -> - value .)
    COMPARE         reduce using rule 57 (unary -> - value .)
    NEWLINE         reduce using rule 57 (unary -> - value .)
    )               reduce using rule 57 (unary -> - value .)
    EVENT           reduce using rule 57 (unary -> - value .)
    CONDITIONS      reduce using rule 57 (unary -> - value .)
    ACTIONS         reduce using rule 57 (unary -> - value .)
    DEDENT          reduce using rule 57 (unary -> - value .)
    ,               reduce using rule 57 (unary -> - value .)
    ]               reduce using rule 57 (unary -> - value .)
    ANNOTATION      reduce using rule 57 (unary -> - value .)
    (               reduce using rule 57 (unary -> - value .)
    INTEGER         reduce using rule 57 (unary -> - value .)
    FLOAT           reduce using rule 57 (unary -> - value .)
    [               reduce using rule 57 (unary -> - value .)
    TIME            reduce using rule 57 (unary -> - value .)
    NAME            reduce using rule 57 (unary -> - value .)
    GLOBAL_VAR      reduce using rule 57 (unary -> - value .)
    PLAYER_VAR      reduce using rule 57 (unary -> - value .)
    NUMBER          reduce using rule 57 (unary -> - value .)
    VALUE           reduce using rule 57 (unary -> - value .)
    ACTION          reduce using rule 57 (unary -> - value .)


state 83

    (74) array -> [ value_list . ]

    ]               shift and go to state 104


state 84

    (55) value_list -> value .
    (56) value_list -> value . , value_list

    ]               reduce using rule 55 (value_list -> value .)
    )               reduce using rule 55 (value_list -> value .)
    ,               shift and go to state 105


state 85

    (35) expr -> ANNOTATION expr .

    FUNCTION        reduce using rule 35 (expr -> ANNOTATION expr .)
    COMMENT         reduce using rule 35 (expr -> ANNOTATION expr .)
    RULE            reduce using rule 35 (expr -> ANNOTATION expr .)
    $end            reduce using rule 35 (expr -> ANNOTATION expr .)
    ASSIGN          reduce using rule 35 (expr -> ANNOTATION expr .)
    *               reduce using rule 35 (expr -> ANNOTATION expr .)
    /               reduce using rule 35 (expr -> ANNOTATION expr .)
    +               reduce using rule 35 (expr -> ANNOTATION expr .)
    -               reduce using rule 35 (expr -> ANNOTATION expr .)
    COMPARE         reduce using rule 35 (expr -> ANNOTATION expr .)
    NEWLINE         reduce using rule 35 (expr -> ANNOTATION expr .)
    )               reduce using rule 35 (expr -> ANNOTATION expr .)
    EVENT           reduce using rule 35 (expr -> ANNOTATION expr .)
    CONDITIONS      reduce using rule 35 (expr -> ANNOTATION expr .)
    ACTIONS         reduce using rule 35 (expr -> ANNOTATION expr .)
    DEDENT          reduce using rule 35 (expr -> ANNOTATION expr .)
    ,               reduce using rule 35 (expr -> ANNOTATION expr .)
    ]               reduce using rule 35 (expr -> ANNOTATION expr .)
    ANNOTATION      reduce using rule 35 (expr -> ANNOTATION expr .)
    (               reduce using rule 35 (expr -> ANNOTATION expr .)
    INTEGER         reduce using rule 35 (expr -> ANNOTATION expr .)
    FLOAT           reduce using rule 35 (expr -> ANNOTATION expr .)
    [               reduce using rule 35 (expr -> ANNOTATION expr .)
    TIME            reduce using rule 35 (expr -> ANNOTATION expr .)
    NAME            reduce using rule 35 (expr -> ANNOTATION expr .)
    GLOBAL_VAR      reduce using rule 35 (expr -> ANNOTATION expr .)
    PLAYER_VAR      reduce using rule 35 (expr -> ANNOTATION expr .)
    NUMBER          reduce using rule 35 (expr -> ANNOTATION expr .)
    VALUE           reduce using rule 35 (expr -> ANNOTATION expr .)
    ACTION          reduce using rule 35 (expr -> ANNOTATION expr .)


state 86

    (61) number_expr -> NUMBER after_expr .

    FUNCTION        reduce using rule 61 (number_expr -> NUMBER after_expr .)
    COMMENT         reduce using rule 61 (number_expr -> NUMBER after_expr .)
    RULE            reduce using rule 61 (number_expr -> NUMBER after_expr .)
    $end            reduce using rule 61 (number_expr -> NUMBER after_expr .)
    ASSIGN          reduce using rule 61 (number_expr -> NUMBER after_expr .)
    *               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    /               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    +               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    -               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    COMPARE         reduce using rule 61 (number_expr -> NUMBER after_expr .)
    NEWLINE         reduce using rule 61 (number_expr -> NUMBER after_expr .)
    )               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    EVENT           reduce using rule 61 (number_expr -> NUMBER after_expr .)
    CONDITIONS      reduce using rule 61 (number_expr -> NUMBER after_expr .)
    ACTIONS         reduce using rule 61 (number_expr -> NUMBER after_expr .)
    DEDENT          reduce using rule 61 (number_expr -> NUMBER after_expr .)
    ,               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    ]               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    ANNOTATION      reduce using rule 61 (number_expr -> NUMBER after_expr .)
    (               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    INTEGER         reduce using rule 61 (number_expr -> NUMBER after_expr .)
    FLOAT           reduce using rule 61 (number_expr -> NUMBER after_expr .)
    [               reduce using rule 61 (number_expr -> NUMBER after_expr .)
    TIME            reduce using rule 61 (number_expr -> NUMBER after_expr .)
    NAME            reduce using rule 61 (number_expr -> NUMBER after_expr .)
    GLOBAL_VAR      reduce using rule 61 (number_expr -> NUMBER after_expr .)
    PLAYER_VAR      reduce using rule 61 (number_expr -> NUMBER after_expr .)
    NUMBER          reduce using rule 61 (number_expr -> NUMBER after_expr .)
    VALUE           reduce using rule 61 (number_expr -> NUMBER after_expr .)
    ACTION          reduce using rule 61 (number_expr -> NUMBER after_expr .)


state 87

    (52) after_expr -> ( . value_list )
    (49) value -> ( . compare )
    (55) value_list -> . value
    (56) value_list -> . value , value_list
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ,               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]

    value_list                     shift and go to state 106
    compare                        shift and go to state 71
    value                          shift and go to state 107
    arith_expr                     shift and go to state 58
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    term                           shift and go to state 59
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 88

    (53) after_expr -> block .

    FUNCTION        reduce using rule 53 (after_expr -> block .)
    COMMENT         reduce using rule 53 (after_expr -> block .)
    RULE            reduce using rule 53 (after_expr -> block .)
    $end            reduce using rule 53 (after_expr -> block .)
    ASSIGN          reduce using rule 53 (after_expr -> block .)
    *               reduce using rule 53 (after_expr -> block .)
    /               reduce using rule 53 (after_expr -> block .)
    +               reduce using rule 53 (after_expr -> block .)
    -               reduce using rule 53 (after_expr -> block .)
    COMPARE         reduce using rule 53 (after_expr -> block .)
    NEWLINE         reduce using rule 53 (after_expr -> block .)
    )               reduce using rule 53 (after_expr -> block .)
    EVENT           reduce using rule 53 (after_expr -> block .)
    CONDITIONS      reduce using rule 53 (after_expr -> block .)
    ACTIONS         reduce using rule 53 (after_expr -> block .)
    DEDENT          reduce using rule 53 (after_expr -> block .)
    ,               reduce using rule 53 (after_expr -> block .)
    ]               reduce using rule 53 (after_expr -> block .)
    ANNOTATION      reduce using rule 53 (after_expr -> block .)
    (               reduce using rule 53 (after_expr -> block .)
    INTEGER         reduce using rule 53 (after_expr -> block .)
    FLOAT           reduce using rule 53 (after_expr -> block .)
    [               reduce using rule 53 (after_expr -> block .)
    TIME            reduce using rule 53 (after_expr -> block .)
    NAME            reduce using rule 53 (after_expr -> block .)
    GLOBAL_VAR      reduce using rule 53 (after_expr -> block .)
    PLAYER_VAR      reduce using rule 53 (after_expr -> block .)
    NUMBER          reduce using rule 53 (after_expr -> block .)
    VALUE           reduce using rule 53 (after_expr -> block .)
    ACTION          reduce using rule 53 (after_expr -> block .)


state 89

    (54) after_expr -> NEWLINE .
    (31) block -> NEWLINE . INDENT statements DEDENT

    FUNCTION        reduce using rule 54 (after_expr -> NEWLINE .)
    COMMENT         reduce using rule 54 (after_expr -> NEWLINE .)
    RULE            reduce using rule 54 (after_expr -> NEWLINE .)
    $end            reduce using rule 54 (after_expr -> NEWLINE .)
    ASSIGN          reduce using rule 54 (after_expr -> NEWLINE .)
    *               reduce using rule 54 (after_expr -> NEWLINE .)
    /               reduce using rule 54 (after_expr -> NEWLINE .)
    +               reduce using rule 54 (after_expr -> NEWLINE .)
    -               reduce using rule 54 (after_expr -> NEWLINE .)
    COMPARE         reduce using rule 54 (after_expr -> NEWLINE .)
    NEWLINE         reduce using rule 54 (after_expr -> NEWLINE .)
    )               reduce using rule 54 (after_expr -> NEWLINE .)
    EVENT           reduce using rule 54 (after_expr -> NEWLINE .)
    CONDITIONS      reduce using rule 54 (after_expr -> NEWLINE .)
    ACTIONS         reduce using rule 54 (after_expr -> NEWLINE .)
    DEDENT          reduce using rule 54 (after_expr -> NEWLINE .)
    ,               reduce using rule 54 (after_expr -> NEWLINE .)
    ]               reduce using rule 54 (after_expr -> NEWLINE .)
    ANNOTATION      reduce using rule 54 (after_expr -> NEWLINE .)
    (               reduce using rule 54 (after_expr -> NEWLINE .)
    INTEGER         reduce using rule 54 (after_expr -> NEWLINE .)
    FLOAT           reduce using rule 54 (after_expr -> NEWLINE .)
    [               reduce using rule 54 (after_expr -> NEWLINE .)
    TIME            reduce using rule 54 (after_expr -> NEWLINE .)
    NAME            reduce using rule 54 (after_expr -> NEWLINE .)
    GLOBAL_VAR      reduce using rule 54 (after_expr -> NEWLINE .)
    PLAYER_VAR      reduce using rule 54 (after_expr -> NEWLINE .)
    NUMBER          reduce using rule 54 (after_expr -> NEWLINE .)
    VALUE           reduce using rule 54 (after_expr -> NEWLINE .)
    ACTION          reduce using rule 54 (after_expr -> NEWLINE .)
    INDENT          shift and go to state 66


state 90

    (62) value_expr -> VALUE after_expr .

    FUNCTION        reduce using rule 62 (value_expr -> VALUE after_expr .)
    COMMENT         reduce using rule 62 (value_expr -> VALUE after_expr .)
    RULE            reduce using rule 62 (value_expr -> VALUE after_expr .)
    $end            reduce using rule 62 (value_expr -> VALUE after_expr .)
    ASSIGN          reduce using rule 62 (value_expr -> VALUE after_expr .)
    *               reduce using rule 62 (value_expr -> VALUE after_expr .)
    /               reduce using rule 62 (value_expr -> VALUE after_expr .)
    +               reduce using rule 62 (value_expr -> VALUE after_expr .)
    -               reduce using rule 62 (value_expr -> VALUE after_expr .)
    COMPARE         reduce using rule 62 (value_expr -> VALUE after_expr .)
    NEWLINE         reduce using rule 62 (value_expr -> VALUE after_expr .)
    )               reduce using rule 62 (value_expr -> VALUE after_expr .)
    EVENT           reduce using rule 62 (value_expr -> VALUE after_expr .)
    CONDITIONS      reduce using rule 62 (value_expr -> VALUE after_expr .)
    ACTIONS         reduce using rule 62 (value_expr -> VALUE after_expr .)
    DEDENT          reduce using rule 62 (value_expr -> VALUE after_expr .)
    ,               reduce using rule 62 (value_expr -> VALUE after_expr .)
    ]               reduce using rule 62 (value_expr -> VALUE after_expr .)
    ANNOTATION      reduce using rule 62 (value_expr -> VALUE after_expr .)
    (               reduce using rule 62 (value_expr -> VALUE after_expr .)
    INTEGER         reduce using rule 62 (value_expr -> VALUE after_expr .)
    FLOAT           reduce using rule 62 (value_expr -> VALUE after_expr .)
    [               reduce using rule 62 (value_expr -> VALUE after_expr .)
    TIME            reduce using rule 62 (value_expr -> VALUE after_expr .)
    NAME            reduce using rule 62 (value_expr -> VALUE after_expr .)
    GLOBAL_VAR      reduce using rule 62 (value_expr -> VALUE after_expr .)
    PLAYER_VAR      reduce using rule 62 (value_expr -> VALUE after_expr .)
    NUMBER          reduce using rule 62 (value_expr -> VALUE after_expr .)
    VALUE           reduce using rule 62 (value_expr -> VALUE after_expr .)
    ACTION          reduce using rule 62 (value_expr -> VALUE after_expr .)


state 91

    (63) action_expr -> ACTION after_expr .

    FUNCTION        reduce using rule 63 (action_expr -> ACTION after_expr .)
    COMMENT         reduce using rule 63 (action_expr -> ACTION after_expr .)
    RULE            reduce using rule 63 (action_expr -> ACTION after_expr .)
    $end            reduce using rule 63 (action_expr -> ACTION after_expr .)
    ASSIGN          reduce using rule 63 (action_expr -> ACTION after_expr .)
    *               reduce using rule 63 (action_expr -> ACTION after_expr .)
    /               reduce using rule 63 (action_expr -> ACTION after_expr .)
    +               reduce using rule 63 (action_expr -> ACTION after_expr .)
    -               reduce using rule 63 (action_expr -> ACTION after_expr .)
    COMPARE         reduce using rule 63 (action_expr -> ACTION after_expr .)
    NEWLINE         reduce using rule 63 (action_expr -> ACTION after_expr .)
    )               reduce using rule 63 (action_expr -> ACTION after_expr .)
    EVENT           reduce using rule 63 (action_expr -> ACTION after_expr .)
    CONDITIONS      reduce using rule 63 (action_expr -> ACTION after_expr .)
    ACTIONS         reduce using rule 63 (action_expr -> ACTION after_expr .)
    DEDENT          reduce using rule 63 (action_expr -> ACTION after_expr .)
    ,               reduce using rule 63 (action_expr -> ACTION after_expr .)
    ]               reduce using rule 63 (action_expr -> ACTION after_expr .)
    ANNOTATION      reduce using rule 63 (action_expr -> ACTION after_expr .)
    (               reduce using rule 63 (action_expr -> ACTION after_expr .)
    INTEGER         reduce using rule 63 (action_expr -> ACTION after_expr .)
    FLOAT           reduce using rule 63 (action_expr -> ACTION after_expr .)
    [               reduce using rule 63 (action_expr -> ACTION after_expr .)
    TIME            reduce using rule 63 (action_expr -> ACTION after_expr .)
    NAME            reduce using rule 63 (action_expr -> ACTION after_expr .)
    GLOBAL_VAR      reduce using rule 63 (action_expr -> ACTION after_expr .)
    PLAYER_VAR      reduce using rule 63 (action_expr -> ACTION after_expr .)
    NUMBER          reduce using rule 63 (action_expr -> ACTION after_expr .)
    VALUE           reduce using rule 63 (action_expr -> ACTION after_expr .)
    ACTION          reduce using rule 63 (action_expr -> ACTION after_expr .)


state 92

    (37) arith_expr -> arith_expr + . arith_expr
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    arith_expr                     shift and go to state 108
    term                           shift and go to state 59
    value                          shift and go to state 72
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 93

    (38) arith_expr -> arith_expr - . arith_expr
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    arith_expr                     shift and go to state 109
    term                           shift and go to state 59
    value                          shift and go to state 72
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 94

    (40) term -> term * . term
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    term                           shift and go to state 110
    value                          shift and go to state 72
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 95

    (41) term -> term / . term
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    RULE            reduce using rule 76 (empty -> .)
    $end            reduce using rule 76 (empty -> .)
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    EVENT           reduce using rule 76 (empty -> .)
    CONDITIONS      reduce using rule 76 (empty -> .)
    ACTIONS         reduce using rule 76 (empty -> .)
    DEDENT          reduce using rule 76 (empty -> .)
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    ANNOTATION      reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    term                           shift and go to state 111
    value                          shift and go to state 72
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 96

    (14) rule -> RULE NEWLINE INDENT . ruleblock DEDENT
    (15) ruleblock -> . event ruleblock
    (16) ruleblock -> . conditions ruleblock
    (17) ruleblock -> . actions ruleblock
    (18) ruleblock -> . NEWLINE ruleblock
    (19) ruleblock -> . empty
    (20) event -> . EVENT block
    (21) conditions -> . CONDITIONS block
    (22) actions -> . ACTIONS block
    (75) empty -> . COMMENT
    (76) empty -> .

    NEWLINE         shift and go to state 63
    EVENT           shift and go to state 34
    CONDITIONS      shift and go to state 35
    ACTIONS         shift and go to state 36
    COMMENT         shift and go to state 7
    DEDENT          reduce using rule 76 (empty -> .)

    ruleblock                      shift and go to state 112
    event                          shift and go to state 20
    conditions                     shift and go to state 21
    actions                        shift and go to state 22
    empty                          shift and go to state 68

state 97

    (60) assign -> value ASSIGN compare .
    (59) compare -> compare . COMPARE arith_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    FUNCTION        reduce using rule 60 (assign -> value ASSIGN compare .)
    COMMENT         reduce using rule 60 (assign -> value ASSIGN compare .)
    RULE            reduce using rule 60 (assign -> value ASSIGN compare .)
    $end            reduce using rule 60 (assign -> value ASSIGN compare .)
    ASSIGN          reduce using rule 60 (assign -> value ASSIGN compare .)
    *               reduce using rule 60 (assign -> value ASSIGN compare .)
    /               reduce using rule 60 (assign -> value ASSIGN compare .)
    +               reduce using rule 60 (assign -> value ASSIGN compare .)
    -               reduce using rule 60 (assign -> value ASSIGN compare .)
    NEWLINE         reduce using rule 60 (assign -> value ASSIGN compare .)
    )               reduce using rule 60 (assign -> value ASSIGN compare .)
    EVENT           reduce using rule 60 (assign -> value ASSIGN compare .)
    CONDITIONS      reduce using rule 60 (assign -> value ASSIGN compare .)
    ACTIONS         reduce using rule 60 (assign -> value ASSIGN compare .)
    DEDENT          reduce using rule 60 (assign -> value ASSIGN compare .)
    ,               reduce using rule 60 (assign -> value ASSIGN compare .)
    ]               reduce using rule 60 (assign -> value ASSIGN compare .)
    ANNOTATION      reduce using rule 60 (assign -> value ASSIGN compare .)
    (               reduce using rule 60 (assign -> value ASSIGN compare .)
    INTEGER         reduce using rule 60 (assign -> value ASSIGN compare .)
    FLOAT           reduce using rule 60 (assign -> value ASSIGN compare .)
    [               reduce using rule 60 (assign -> value ASSIGN compare .)
    TIME            reduce using rule 60 (assign -> value ASSIGN compare .)
    NAME            reduce using rule 60 (assign -> value ASSIGN compare .)
    GLOBAL_VAR      reduce using rule 60 (assign -> value ASSIGN compare .)
    PLAYER_VAR      reduce using rule 60 (assign -> value ASSIGN compare .)
    NUMBER          reduce using rule 60 (assign -> value ASSIGN compare .)
    VALUE           reduce using rule 60 (assign -> value ASSIGN compare .)
    ACTION          reduce using rule 60 (assign -> value ASSIGN compare .)
    COMPARE         shift and go to state 74

  ! COMPARE         [ reduce using rule 60 (assign -> value ASSIGN compare .) ]


state 98

    (31) block -> NEWLINE INDENT statements . DEDENT
    (23) statements -> statements . statement
    (25) statement -> . simple_stmt
    (26) simple_stmt -> . expr NEWLINE
    (27) simple_stmt -> . expr
    (33) expr -> . compare
    (34) expr -> . assign
    (35) expr -> . ANNOTATION expr
    (58) compare -> . arith_expr
    (59) compare -> . compare COMPARE arith_expr
    (60) assign -> . value ASSIGN compare
    (36) arith_expr -> . term
    (37) arith_expr -> . arith_expr + arith_expr
    (38) arith_expr -> . arith_expr - arith_expr
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (39) term -> . value
    (40) term -> . term * term
    (41) term -> . term / term
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for DEDENT resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    DEDENT          shift and go to state 113
    ANNOTATION      shift and go to state 51
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ASSIGN          reduce using rule 76 (empty -> .)
    *               reduce using rule 76 (empty -> .)
    /               reduce using rule 76 (empty -> .)
    +               reduce using rule 76 (empty -> .)
    NEWLINE         reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! -               [ reduce using rule 76 (empty -> .) ]
  ! COMPARE         [ reduce using rule 76 (empty -> .) ]
  ! DEDENT          [ reduce using rule 76 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 76 (empty -> .) ]
  ! (               [ reduce using rule 76 (empty -> .) ]
  ! INTEGER         [ reduce using rule 76 (empty -> .) ]
  ! FLOAT           [ reduce using rule 76 (empty -> .) ]
  ! [               [ reduce using rule 76 (empty -> .) ]
  ! TIME            [ reduce using rule 76 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 76 (empty -> .) ]
  ! COMMENT         [ reduce using rule 76 (empty -> .) ]
  ! NAME            [ reduce using rule 76 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 76 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 76 (empty -> .) ]
  ! NUMBER          [ reduce using rule 76 (empty -> .) ]
  ! VALUE           [ reduce using rule 76 (empty -> .) ]
  ! ACTION          [ reduce using rule 76 (empty -> .) ]

    statement                      shift and go to state 114
    simple_stmt                    shift and go to state 100
    expr                           shift and go to state 37
    compare                        shift and go to state 32
    assign                         shift and go to state 50
    arith_expr                     shift and go to state 58
    value                          shift and go to state 77
    term                           shift and go to state 59
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 99

    (24) statements -> statement .

    DEDENT          reduce using rule 24 (statements -> statement .)
    ANNOTATION      reduce using rule 24 (statements -> statement .)
    (               reduce using rule 24 (statements -> statement .)
    INTEGER         reduce using rule 24 (statements -> statement .)
    FLOAT           reduce using rule 24 (statements -> statement .)
    COMPARE         reduce using rule 24 (statements -> statement .)
    -               reduce using rule 24 (statements -> statement .)
    [               reduce using rule 24 (statements -> statement .)
    TIME            reduce using rule 24 (statements -> statement .)
    FUNCTION        reduce using rule 24 (statements -> statement .)
    COMMENT         reduce using rule 24 (statements -> statement .)
    NAME            reduce using rule 24 (statements -> statement .)
    GLOBAL_VAR      reduce using rule 24 (statements -> statement .)
    PLAYER_VAR      reduce using rule 24 (statements -> statement .)
    NUMBER          reduce using rule 24 (statements -> statement .)
    VALUE           reduce using rule 24 (statements -> statement .)
    ACTION          reduce using rule 24 (statements -> statement .)
    NEWLINE         reduce using rule 24 (statements -> statement .)
    +               reduce using rule 24 (statements -> statement .)
    ASSIGN          reduce using rule 24 (statements -> statement .)
    *               reduce using rule 24 (statements -> statement .)
    /               reduce using rule 24 (statements -> statement .)


state 100

    (25) statement -> simple_stmt .

    DEDENT          reduce using rule 25 (statement -> simple_stmt .)
    ANNOTATION      reduce using rule 25 (statement -> simple_stmt .)
    (               reduce using rule 25 (statement -> simple_stmt .)
    INTEGER         reduce using rule 25 (statement -> simple_stmt .)
    FLOAT           reduce using rule 25 (statement -> simple_stmt .)
    COMPARE         reduce using rule 25 (statement -> simple_stmt .)
    -               reduce using rule 25 (statement -> simple_stmt .)
    [               reduce using rule 25 (statement -> simple_stmt .)
    TIME            reduce using rule 25 (statement -> simple_stmt .)
    FUNCTION        reduce using rule 25 (statement -> simple_stmt .)
    COMMENT         reduce using rule 25 (statement -> simple_stmt .)
    NAME            reduce using rule 25 (statement -> simple_stmt .)
    GLOBAL_VAR      reduce using rule 25 (statement -> simple_stmt .)
    PLAYER_VAR      reduce using rule 25 (statement -> simple_stmt .)
    NUMBER          reduce using rule 25 (statement -> simple_stmt .)
    VALUE           reduce using rule 25 (statement -> simple_stmt .)
    ACTION          reduce using rule 25 (statement -> simple_stmt .)
    NEWLINE         reduce using rule 25 (statement -> simple_stmt .)
    +               reduce using rule 25 (statement -> simple_stmt .)
    ASSIGN          reduce using rule 25 (statement -> simple_stmt .)
    *               reduce using rule 25 (statement -> simple_stmt .)
    /               reduce using rule 25 (statement -> simple_stmt .)


state 101

    (49) value -> ( compare ) .

    FUNCTION        reduce using rule 49 (value -> ( compare ) .)
    COMMENT         reduce using rule 49 (value -> ( compare ) .)
    RULE            reduce using rule 49 (value -> ( compare ) .)
    $end            reduce using rule 49 (value -> ( compare ) .)
    ASSIGN          reduce using rule 49 (value -> ( compare ) .)
    *               reduce using rule 49 (value -> ( compare ) .)
    /               reduce using rule 49 (value -> ( compare ) .)
    +               reduce using rule 49 (value -> ( compare ) .)
    -               reduce using rule 49 (value -> ( compare ) .)
    COMPARE         reduce using rule 49 (value -> ( compare ) .)
    NEWLINE         reduce using rule 49 (value -> ( compare ) .)
    )               reduce using rule 49 (value -> ( compare ) .)
    EVENT           reduce using rule 49 (value -> ( compare ) .)
    CONDITIONS      reduce using rule 49 (value -> ( compare ) .)
    ACTIONS         reduce using rule 49 (value -> ( compare ) .)
    DEDENT          reduce using rule 49 (value -> ( compare ) .)
    ,               reduce using rule 49 (value -> ( compare ) .)
    ]               reduce using rule 49 (value -> ( compare ) .)
    ANNOTATION      reduce using rule 49 (value -> ( compare ) .)
    (               reduce using rule 49 (value -> ( compare ) .)
    INTEGER         reduce using rule 49 (value -> ( compare ) .)
    FLOAT           reduce using rule 49 (value -> ( compare ) .)
    [               reduce using rule 49 (value -> ( compare ) .)
    TIME            reduce using rule 49 (value -> ( compare ) .)
    NAME            reduce using rule 49 (value -> ( compare ) .)
    GLOBAL_VAR      reduce using rule 49 (value -> ( compare ) .)
    PLAYER_VAR      reduce using rule 49 (value -> ( compare ) .)
    NUMBER          reduce using rule 49 (value -> ( compare ) .)
    VALUE           reduce using rule 49 (value -> ( compare ) .)
    ACTION          reduce using rule 49 (value -> ( compare ) .)


state 102

    (59) compare -> compare COMPARE arith_expr .
    (37) arith_expr -> arith_expr . + arith_expr
    (38) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    FUNCTION        reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    COMMENT         reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    RULE            reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    $end            reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    ASSIGN          reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    *               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    /               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    COMPARE         reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    NEWLINE         reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    )               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    EVENT           reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    CONDITIONS      reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    ACTIONS         reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    DEDENT          reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    ,               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    ]               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    ANNOTATION      reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    (               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    INTEGER         reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    FLOAT           reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    [               reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    TIME            reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    NAME            reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    GLOBAL_VAR      reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    PLAYER_VAR      reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    NUMBER          reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    VALUE           reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    ACTION          reduce using rule 59 (compare -> compare COMPARE arith_expr .)
    +               shift and go to state 92
    -               shift and go to state 93

  ! +               [ reduce using rule 59 (compare -> compare COMPARE arith_expr .) ]
  ! -               [ reduce using rule 59 (compare -> compare COMPARE arith_expr .) ]


state 103

    (73) vector -> COMPARE value , . value , value COMPARE
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ,               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

    value                          shift and go to state 115
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 104

    (74) array -> [ value_list ] .

    FUNCTION        reduce using rule 74 (array -> [ value_list ] .)
    COMMENT         reduce using rule 74 (array -> [ value_list ] .)
    RULE            reduce using rule 74 (array -> [ value_list ] .)
    $end            reduce using rule 74 (array -> [ value_list ] .)
    ASSIGN          reduce using rule 74 (array -> [ value_list ] .)
    *               reduce using rule 74 (array -> [ value_list ] .)
    /               reduce using rule 74 (array -> [ value_list ] .)
    +               reduce using rule 74 (array -> [ value_list ] .)
    -               reduce using rule 74 (array -> [ value_list ] .)
    COMPARE         reduce using rule 74 (array -> [ value_list ] .)
    NEWLINE         reduce using rule 74 (array -> [ value_list ] .)
    )               reduce using rule 74 (array -> [ value_list ] .)
    EVENT           reduce using rule 74 (array -> [ value_list ] .)
    CONDITIONS      reduce using rule 74 (array -> [ value_list ] .)
    ACTIONS         reduce using rule 74 (array -> [ value_list ] .)
    DEDENT          reduce using rule 74 (array -> [ value_list ] .)
    ,               reduce using rule 74 (array -> [ value_list ] .)
    ]               reduce using rule 74 (array -> [ value_list ] .)
    ANNOTATION      reduce using rule 74 (array -> [ value_list ] .)
    (               reduce using rule 74 (array -> [ value_list ] .)
    INTEGER         reduce using rule 74 (array -> [ value_list ] .)
    FLOAT           reduce using rule 74 (array -> [ value_list ] .)
    [               reduce using rule 74 (array -> [ value_list ] .)
    TIME            reduce using rule 74 (array -> [ value_list ] .)
    NAME            reduce using rule 74 (array -> [ value_list ] .)
    GLOBAL_VAR      reduce using rule 74 (array -> [ value_list ] .)
    PLAYER_VAR      reduce using rule 74 (array -> [ value_list ] .)
    NUMBER          reduce using rule 74 (array -> [ value_list ] .)
    VALUE           reduce using rule 74 (array -> [ value_list ] .)
    ACTION          reduce using rule 74 (array -> [ value_list ] .)


state 105

    (56) value_list -> value , . value_list
    (55) value_list -> . value
    (56) value_list -> . value , value_list
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    ,               reduce using rule 76 (empty -> .)
    ]               reduce using rule 76 (empty -> .)
    )               reduce using rule 76 (empty -> .)
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

    value                          shift and go to state 84
    value_list                     shift and go to state 116
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 106

    (52) after_expr -> ( value_list . )

    )               shift and go to state 117


state 107

    (55) value_list -> value .
    (56) value_list -> value . , value_list
    (39) term -> value .

  ! reduce/reduce conflict for ) resolved using rule 39 (term -> value .)
    ,               shift and go to state 105
    *               reduce using rule 39 (term -> value .)
    /               reduce using rule 39 (term -> value .)
    +               reduce using rule 39 (term -> value .)
    -               reduce using rule 39 (term -> value .)
    )               reduce using rule 39 (term -> value .)
    COMPARE         reduce using rule 39 (term -> value .)

  ! )               [ reduce using rule 55 (value_list -> value .) ]


state 108

    (37) arith_expr -> arith_expr + arith_expr .
    (37) arith_expr -> arith_expr . + arith_expr
    (38) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    FUNCTION        reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    COMMENT         reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    RULE            reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    $end            reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    ASSIGN          reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    *               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    /               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    COMPARE         reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    NEWLINE         reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    )               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    EVENT           reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    CONDITIONS      reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    ACTIONS         reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    DEDENT          reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    ,               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    ]               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    ANNOTATION      reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    (               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    INTEGER         reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    FLOAT           reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    [               reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    TIME            reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    NAME            reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    GLOBAL_VAR      reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    PLAYER_VAR      reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    NUMBER          reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    VALUE           reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    ACTION          reduce using rule 37 (arith_expr -> arith_expr + arith_expr .)
    +               shift and go to state 92
    -               shift and go to state 93

  ! +               [ reduce using rule 37 (arith_expr -> arith_expr + arith_expr .) ]
  ! -               [ reduce using rule 37 (arith_expr -> arith_expr + arith_expr .) ]


state 109

    (38) arith_expr -> arith_expr - arith_expr .
    (37) arith_expr -> arith_expr . + arith_expr
    (38) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    FUNCTION        reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    COMMENT         reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    RULE            reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    $end            reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    ASSIGN          reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    *               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    /               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    COMPARE         reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    NEWLINE         reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    )               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    EVENT           reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    CONDITIONS      reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    ACTIONS         reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    DEDENT          reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    ,               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    ]               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    ANNOTATION      reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    (               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    INTEGER         reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    FLOAT           reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    [               reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    TIME            reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    NAME            reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    GLOBAL_VAR      reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    PLAYER_VAR      reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    NUMBER          reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    VALUE           reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    ACTION          reduce using rule 38 (arith_expr -> arith_expr - arith_expr .)
    +               shift and go to state 92
    -               shift and go to state 93

  ! +               [ reduce using rule 38 (arith_expr -> arith_expr - arith_expr .) ]
  ! -               [ reduce using rule 38 (arith_expr -> arith_expr - arith_expr .) ]


state 110

    (40) term -> term * term .
    (40) term -> term . * term
    (41) term -> term . / term

  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    FUNCTION        reduce using rule 40 (term -> term * term .)
    COMMENT         reduce using rule 40 (term -> term * term .)
    RULE            reduce using rule 40 (term -> term * term .)
    $end            reduce using rule 40 (term -> term * term .)
    ASSIGN          reduce using rule 40 (term -> term * term .)
    +               reduce using rule 40 (term -> term * term .)
    -               reduce using rule 40 (term -> term * term .)
    COMPARE         reduce using rule 40 (term -> term * term .)
    NEWLINE         reduce using rule 40 (term -> term * term .)
    )               reduce using rule 40 (term -> term * term .)
    EVENT           reduce using rule 40 (term -> term * term .)
    CONDITIONS      reduce using rule 40 (term -> term * term .)
    ACTIONS         reduce using rule 40 (term -> term * term .)
    DEDENT          reduce using rule 40 (term -> term * term .)
    ,               reduce using rule 40 (term -> term * term .)
    ]               reduce using rule 40 (term -> term * term .)
    ANNOTATION      reduce using rule 40 (term -> term * term .)
    (               reduce using rule 40 (term -> term * term .)
    INTEGER         reduce using rule 40 (term -> term * term .)
    FLOAT           reduce using rule 40 (term -> term * term .)
    [               reduce using rule 40 (term -> term * term .)
    TIME            reduce using rule 40 (term -> term * term .)
    NAME            reduce using rule 40 (term -> term * term .)
    GLOBAL_VAR      reduce using rule 40 (term -> term * term .)
    PLAYER_VAR      reduce using rule 40 (term -> term * term .)
    NUMBER          reduce using rule 40 (term -> term * term .)
    VALUE           reduce using rule 40 (term -> term * term .)
    ACTION          reduce using rule 40 (term -> term * term .)
    *               shift and go to state 94
    /               shift and go to state 95

  ! *               [ reduce using rule 40 (term -> term * term .) ]
  ! /               [ reduce using rule 40 (term -> term * term .) ]


state 111

    (41) term -> term / term .
    (40) term -> term . * term
    (41) term -> term . / term

  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    FUNCTION        reduce using rule 41 (term -> term / term .)
    COMMENT         reduce using rule 41 (term -> term / term .)
    RULE            reduce using rule 41 (term -> term / term .)
    $end            reduce using rule 41 (term -> term / term .)
    ASSIGN          reduce using rule 41 (term -> term / term .)
    +               reduce using rule 41 (term -> term / term .)
    -               reduce using rule 41 (term -> term / term .)
    COMPARE         reduce using rule 41 (term -> term / term .)
    NEWLINE         reduce using rule 41 (term -> term / term .)
    )               reduce using rule 41 (term -> term / term .)
    EVENT           reduce using rule 41 (term -> term / term .)
    CONDITIONS      reduce using rule 41 (term -> term / term .)
    ACTIONS         reduce using rule 41 (term -> term / term .)
    DEDENT          reduce using rule 41 (term -> term / term .)
    ,               reduce using rule 41 (term -> term / term .)
    ]               reduce using rule 41 (term -> term / term .)
    ANNOTATION      reduce using rule 41 (term -> term / term .)
    (               reduce using rule 41 (term -> term / term .)
    INTEGER         reduce using rule 41 (term -> term / term .)
    FLOAT           reduce using rule 41 (term -> term / term .)
    [               reduce using rule 41 (term -> term / term .)
    TIME            reduce using rule 41 (term -> term / term .)
    NAME            reduce using rule 41 (term -> term / term .)
    GLOBAL_VAR      reduce using rule 41 (term -> term / term .)
    PLAYER_VAR      reduce using rule 41 (term -> term / term .)
    NUMBER          reduce using rule 41 (term -> term / term .)
    VALUE           reduce using rule 41 (term -> term / term .)
    ACTION          reduce using rule 41 (term -> term / term .)
    *               shift and go to state 94
    /               shift and go to state 95

  ! *               [ reduce using rule 41 (term -> term / term .) ]
  ! /               [ reduce using rule 41 (term -> term / term .) ]


state 112

    (14) rule -> RULE NEWLINE INDENT ruleblock . DEDENT

    DEDENT          shift and go to state 118


state 113

    (31) block -> NEWLINE INDENT statements DEDENT .

    FUNCTION        reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    COMMENT         reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    RULE            reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    $end            reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    ASSIGN          reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    *               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    /               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    +               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    -               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    COMPARE         reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    NEWLINE         reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    )               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    EVENT           reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    CONDITIONS      reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    ACTIONS         reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    DEDENT          reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    ,               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    ]               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    ANNOTATION      reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    (               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    INTEGER         reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    FLOAT           reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    [               reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    TIME            reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    NAME            reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    GLOBAL_VAR      reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    PLAYER_VAR      reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    NUMBER          reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    VALUE           reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)
    ACTION          reduce using rule 31 (block -> NEWLINE INDENT statements DEDENT .)


state 114

    (23) statements -> statements statement .

    DEDENT          reduce using rule 23 (statements -> statements statement .)
    ANNOTATION      reduce using rule 23 (statements -> statements statement .)
    (               reduce using rule 23 (statements -> statements statement .)
    INTEGER         reduce using rule 23 (statements -> statements statement .)
    FLOAT           reduce using rule 23 (statements -> statements statement .)
    COMPARE         reduce using rule 23 (statements -> statements statement .)
    -               reduce using rule 23 (statements -> statements statement .)
    [               reduce using rule 23 (statements -> statements statement .)
    TIME            reduce using rule 23 (statements -> statements statement .)
    FUNCTION        reduce using rule 23 (statements -> statements statement .)
    COMMENT         reduce using rule 23 (statements -> statements statement .)
    NAME            reduce using rule 23 (statements -> statements statement .)
    GLOBAL_VAR      reduce using rule 23 (statements -> statements statement .)
    PLAYER_VAR      reduce using rule 23 (statements -> statements statement .)
    NUMBER          reduce using rule 23 (statements -> statements statement .)
    VALUE           reduce using rule 23 (statements -> statements statement .)
    ACTION          reduce using rule 23 (statements -> statements statement .)
    NEWLINE         reduce using rule 23 (statements -> statements statement .)
    +               reduce using rule 23 (statements -> statements statement .)
    ASSIGN          reduce using rule 23 (statements -> statements statement .)
    *               reduce using rule 23 (statements -> statements statement .)
    /               reduce using rule 23 (statements -> statements statement .)


state 115

    (73) vector -> COMPARE value , value . , value COMPARE

    ,               shift and go to state 119


state 116

    (56) value_list -> value , value_list .

    ]               reduce using rule 56 (value_list -> value , value_list .)
    )               reduce using rule 56 (value_list -> value , value_list .)


state 117

    (52) after_expr -> ( value_list ) .

    FUNCTION        reduce using rule 52 (after_expr -> ( value_list ) .)
    COMMENT         reduce using rule 52 (after_expr -> ( value_list ) .)
    RULE            reduce using rule 52 (after_expr -> ( value_list ) .)
    $end            reduce using rule 52 (after_expr -> ( value_list ) .)
    ASSIGN          reduce using rule 52 (after_expr -> ( value_list ) .)
    *               reduce using rule 52 (after_expr -> ( value_list ) .)
    /               reduce using rule 52 (after_expr -> ( value_list ) .)
    +               reduce using rule 52 (after_expr -> ( value_list ) .)
    -               reduce using rule 52 (after_expr -> ( value_list ) .)
    COMPARE         reduce using rule 52 (after_expr -> ( value_list ) .)
    NEWLINE         reduce using rule 52 (after_expr -> ( value_list ) .)
    )               reduce using rule 52 (after_expr -> ( value_list ) .)
    EVENT           reduce using rule 52 (after_expr -> ( value_list ) .)
    CONDITIONS      reduce using rule 52 (after_expr -> ( value_list ) .)
    ACTIONS         reduce using rule 52 (after_expr -> ( value_list ) .)
    DEDENT          reduce using rule 52 (after_expr -> ( value_list ) .)
    ,               reduce using rule 52 (after_expr -> ( value_list ) .)
    ]               reduce using rule 52 (after_expr -> ( value_list ) .)
    ANNOTATION      reduce using rule 52 (after_expr -> ( value_list ) .)
    (               reduce using rule 52 (after_expr -> ( value_list ) .)
    INTEGER         reduce using rule 52 (after_expr -> ( value_list ) .)
    FLOAT           reduce using rule 52 (after_expr -> ( value_list ) .)
    [               reduce using rule 52 (after_expr -> ( value_list ) .)
    TIME            reduce using rule 52 (after_expr -> ( value_list ) .)
    NAME            reduce using rule 52 (after_expr -> ( value_list ) .)
    GLOBAL_VAR      reduce using rule 52 (after_expr -> ( value_list ) .)
    PLAYER_VAR      reduce using rule 52 (after_expr -> ( value_list ) .)
    NUMBER          reduce using rule 52 (after_expr -> ( value_list ) .)
    VALUE           reduce using rule 52 (after_expr -> ( value_list ) .)
    ACTION          reduce using rule 52 (after_expr -> ( value_list ) .)


state 118

    (14) rule -> RULE NEWLINE INDENT ruleblock DEDENT .

    RULE            reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    FUNCTION        reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    COMMENT         reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    $end            reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    ASSIGN          reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    *               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    /               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    +               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    -               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    COMPARE         reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    NEWLINE         reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    )               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    EVENT           reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    CONDITIONS      reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    ACTIONS         reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    DEDENT          reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    ,               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    ]               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    ANNOTATION      reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    (               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    INTEGER         reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    FLOAT           reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    [               reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    TIME            reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    NAME            reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    GLOBAL_VAR      reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    PLAYER_VAR      reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    NUMBER          reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    VALUE           reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    ACTION          reduce using rule 14 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)


state 119

    (73) vector -> COMPARE value , value , . value COMPARE
    (42) value -> . variable
    (43) value -> . compound_stmt
    (44) value -> . number_const
    (45) value -> . vector
    (46) value -> . unary
    (47) value -> . array
    (48) value -> . time
    (49) value -> . ( compare )
    (50) value -> . function
    (51) value -> . empty
    (67) variable -> . name
    (68) variable -> . global_var
    (69) variable -> . player_var
    (28) compound_stmt -> . number_expr
    (29) compound_stmt -> . value_expr
    (30) compound_stmt -> . action_expr
    (65) number_const -> . INTEGER
    (66) number_const -> . FLOAT
    (73) vector -> . COMPARE value , value , value COMPARE
    (57) unary -> . - value
    (74) array -> . [ value_list ]
    (64) time -> . TIME
    (4) function -> . FUNCTION funcbody
    (75) empty -> . COMMENT
    (76) empty -> .
    (70) name -> . NAME
    (71) global_var -> . GLOBAL_VAR
    (72) player_var -> . PLAYER_VAR
    (61) number_expr -> . NUMBER after_expr
    (62) value_expr -> . VALUE after_expr
    (63) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    (               shift and go to state 31
    INTEGER         shift and go to state 44
    FLOAT           shift and go to state 45
    COMPARE         shift and go to state 46
    -               shift and go to state 47
    [               shift and go to state 48
    TIME            shift and go to state 49
    FUNCTION        shift and go to state 5
    COMMENT         shift and go to state 7
    NAME            shift and go to state 52
    GLOBAL_VAR      shift and go to state 53
    PLAYER_VAR      shift and go to state 54
    NUMBER          shift and go to state 55
    VALUE           shift and go to state 56
    ACTION          shift and go to state 57

  ! COMPARE         [ reduce using rule 76 (empty -> .) ]

    value                          shift and go to state 120
    variable                       shift and go to state 24
    compound_stmt                  shift and go to state 25
    number_const                   shift and go to state 26
    vector                         shift and go to state 27
    unary                          shift and go to state 28
    array                          shift and go to state 29
    time                           shift and go to state 30
    function                       shift and go to state 33
    empty                          shift and go to state 73
    name                           shift and go to state 38
    global_var                     shift and go to state 39
    player_var                     shift and go to state 40
    number_expr                    shift and go to state 41
    value_expr                     shift and go to state 42
    action_expr                    shift and go to state 43

state 120

    (73) vector -> COMPARE value , value , value . COMPARE

    COMPARE         shift and go to state 121


state 121

    (73) vector -> COMPARE value , value , value COMPARE .

    FUNCTION        reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    COMMENT         reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    RULE            reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    $end            reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    ASSIGN          reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    *               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    /               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    +               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    -               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    COMPARE         reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    NEWLINE         reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    )               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    EVENT           reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    CONDITIONS      reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    ACTIONS         reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    DEDENT          reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    ,               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    ]               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    ANNOTATION      reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    (               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    INTEGER         reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    FLOAT           reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    [               reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    TIME            reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    NAME            reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    GLOBAL_VAR      reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    PLAYER_VAR      reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    NUMBER          reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    VALUE           reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)
    ACTION          reduce using rule 73 (vector -> COMPARE value , value , value COMPARE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 5 resolved as shift
WARNING: shift/reduce conflict for RULE in state 5 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 5 resolved as shift
WARNING: shift/reduce conflict for EVENT in state 5 resolved as shift
WARNING: shift/reduce conflict for CONDITIONS in state 5 resolved as shift
WARNING: shift/reduce conflict for ACTIONS in state 5 resolved as shift
WARNING: shift/reduce conflict for ( in state 5 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 5 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 5 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 5 resolved as shift
WARNING: shift/reduce conflict for - in state 5 resolved as shift
WARNING: shift/reduce conflict for [ in state 5 resolved as shift
WARNING: shift/reduce conflict for TIME in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 5 resolved as shift
WARNING: shift/reduce conflict for NAME in state 5 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 5 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 5 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 5 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 5 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 5 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 8 resolved as shift
WARNING: shift/reduce conflict for RULE in state 13 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 17 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 17 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 18 resolved as shift
WARNING: shift/reduce conflict for EVENT in state 18 resolved as shift
WARNING: shift/reduce conflict for CONDITIONS in state 18 resolved as shift
WARNING: shift/reduce conflict for ACTIONS in state 18 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 20 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 20 resolved as shift
WARNING: shift/reduce conflict for EVENT in state 20 resolved as shift
WARNING: shift/reduce conflict for CONDITIONS in state 20 resolved as shift
WARNING: shift/reduce conflict for ACTIONS in state 20 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 21 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 21 resolved as shift
WARNING: shift/reduce conflict for EVENT in state 21 resolved as shift
WARNING: shift/reduce conflict for CONDITIONS in state 21 resolved as shift
WARNING: shift/reduce conflict for ACTIONS in state 21 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 22 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 22 resolved as shift
WARNING: shift/reduce conflict for EVENT in state 22 resolved as shift
WARNING: shift/reduce conflict for CONDITIONS in state 22 resolved as shift
WARNING: shift/reduce conflict for ACTIONS in state 22 resolved as shift
WARNING: shift/reduce conflict for - in state 31 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 31 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 32 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 34 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 34 resolved as shift
WARNING: shift/reduce conflict for - in state 34 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 34 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 34 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 34 resolved as shift
WARNING: shift/reduce conflict for ( in state 34 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 34 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 34 resolved as shift
WARNING: shift/reduce conflict for [ in state 34 resolved as shift
WARNING: shift/reduce conflict for TIME in state 34 resolved as shift
WARNING: shift/reduce conflict for NAME in state 34 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 34 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 34 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 34 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 34 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 34 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 35 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 35 resolved as shift
WARNING: shift/reduce conflict for - in state 35 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 35 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 35 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 35 resolved as shift
WARNING: shift/reduce conflict for ( in state 35 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 35 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 35 resolved as shift
WARNING: shift/reduce conflict for [ in state 35 resolved as shift
WARNING: shift/reduce conflict for TIME in state 35 resolved as shift
WARNING: shift/reduce conflict for NAME in state 35 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 35 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 35 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 35 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 35 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 35 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 36 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 36 resolved as shift
WARNING: shift/reduce conflict for - in state 36 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 36 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 36 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 36 resolved as shift
WARNING: shift/reduce conflict for ( in state 36 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 36 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 36 resolved as shift
WARNING: shift/reduce conflict for [ in state 36 resolved as shift
WARNING: shift/reduce conflict for TIME in state 36 resolved as shift
WARNING: shift/reduce conflict for NAME in state 36 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 36 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 36 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 36 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 36 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 36 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 37 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 47 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 47 resolved as shift
WARNING: shift/reduce conflict for - in state 47 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 47 resolved as shift
WARNING: shift/reduce conflict for ( in state 47 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for [ in state 47 resolved as shift
WARNING: shift/reduce conflict for TIME in state 47 resolved as shift
WARNING: shift/reduce conflict for NAME in state 47 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 47 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 47 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 47 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 47 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 51 resolved as shift
WARNING: shift/reduce conflict for - in state 51 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 51 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 51 resolved as shift
WARNING: shift/reduce conflict for ( in state 51 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 51 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 51 resolved as shift
WARNING: shift/reduce conflict for [ in state 51 resolved as shift
WARNING: shift/reduce conflict for TIME in state 51 resolved as shift
WARNING: shift/reduce conflict for NAME in state 51 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 51 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 51 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 51 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 51 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 51 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 55 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 55 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 55 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 55 resolved as shift
WARNING: shift/reduce conflict for ( in state 55 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for [ in state 55 resolved as shift
WARNING: shift/reduce conflict for TIME in state 55 resolved as shift
WARNING: shift/reduce conflict for NAME in state 55 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 55 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 55 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 56 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 56 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 56 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 56 resolved as shift
WARNING: shift/reduce conflict for ( in state 56 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 56 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 56 resolved as shift
WARNING: shift/reduce conflict for [ in state 56 resolved as shift
WARNING: shift/reduce conflict for TIME in state 56 resolved as shift
WARNING: shift/reduce conflict for NAME in state 56 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 56 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 56 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 57 resolved as shift
WARNING: shift/reduce conflict for - in state 57 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 57 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 57 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 57 resolved as shift
WARNING: shift/reduce conflict for ( in state 57 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for [ in state 57 resolved as shift
WARNING: shift/reduce conflict for TIME in state 57 resolved as shift
WARNING: shift/reduce conflict for NAME in state 57 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 57 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 57 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 57 resolved as shift
WARNING: shift/reduce conflict for + in state 58 resolved as shift
WARNING: shift/reduce conflict for - in state 58 resolved as shift
WARNING: shift/reduce conflict for * in state 59 resolved as shift
WARNING: shift/reduce conflict for / in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 62 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 62 resolved as shift
WARNING: shift/reduce conflict for - in state 62 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 62 resolved as shift
WARNING: shift/reduce conflict for ( in state 62 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 62 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 62 resolved as shift
WARNING: shift/reduce conflict for [ in state 62 resolved as shift
WARNING: shift/reduce conflict for TIME in state 62 resolved as shift
WARNING: shift/reduce conflict for NAME in state 62 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 62 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 62 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 62 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 63 resolved as shift
WARNING: shift/reduce conflict for EVENT in state 63 resolved as shift
WARNING: shift/reduce conflict for CONDITIONS in state 63 resolved as shift
WARNING: shift/reduce conflict for ACTIONS in state 63 resolved as shift
WARNING: shift/reduce conflict for - in state 66 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 66 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 66 resolved as shift
WARNING: shift/reduce conflict for ( in state 66 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for [ in state 66 resolved as shift
WARNING: shift/reduce conflict for TIME in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 66 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 66 resolved as shift
WARNING: shift/reduce conflict for NAME in state 66 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 66 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 66 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 74 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for - in state 74 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 74 resolved as shift
WARNING: shift/reduce conflict for ( in state 74 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 74 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 74 resolved as shift
WARNING: shift/reduce conflict for [ in state 74 resolved as shift
WARNING: shift/reduce conflict for TIME in state 74 resolved as shift
WARNING: shift/reduce conflict for NAME in state 74 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 74 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 74 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 74 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 87 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 87 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 92 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 92 resolved as shift
WARNING: shift/reduce conflict for - in state 92 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 92 resolved as shift
WARNING: shift/reduce conflict for ( in state 92 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 92 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for [ in state 92 resolved as shift
WARNING: shift/reduce conflict for TIME in state 92 resolved as shift
WARNING: shift/reduce conflict for NAME in state 92 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 92 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 92 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 92 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 92 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 92 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 93 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 93 resolved as shift
WARNING: shift/reduce conflict for - in state 93 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 93 resolved as shift
WARNING: shift/reduce conflict for ( in state 93 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 93 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 93 resolved as shift
WARNING: shift/reduce conflict for [ in state 93 resolved as shift
WARNING: shift/reduce conflict for TIME in state 93 resolved as shift
WARNING: shift/reduce conflict for NAME in state 93 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 93 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 93 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 93 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 93 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 93 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 94 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 94 resolved as shift
WARNING: shift/reduce conflict for - in state 94 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 94 resolved as shift
WARNING: shift/reduce conflict for ( in state 94 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 94 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 94 resolved as shift
WARNING: shift/reduce conflict for [ in state 94 resolved as shift
WARNING: shift/reduce conflict for TIME in state 94 resolved as shift
WARNING: shift/reduce conflict for NAME in state 94 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 94 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 94 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 94 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 95 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 95 resolved as shift
WARNING: shift/reduce conflict for - in state 95 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 95 resolved as shift
WARNING: shift/reduce conflict for ( in state 95 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 95 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 95 resolved as shift
WARNING: shift/reduce conflict for [ in state 95 resolved as shift
WARNING: shift/reduce conflict for TIME in state 95 resolved as shift
WARNING: shift/reduce conflict for NAME in state 95 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 95 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 95 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 95 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 97 resolved as shift
WARNING: shift/reduce conflict for - in state 98 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 98 resolved as shift
WARNING: shift/reduce conflict for DEDENT in state 98 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 98 resolved as shift
WARNING: shift/reduce conflict for ( in state 98 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 98 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 98 resolved as shift
WARNING: shift/reduce conflict for [ in state 98 resolved as shift
WARNING: shift/reduce conflict for TIME in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 98 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 98 resolved as shift
WARNING: shift/reduce conflict for NAME in state 98 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 98 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 98 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 98 resolved as shift
WARNING: shift/reduce conflict for + in state 102 resolved as shift
WARNING: shift/reduce conflict for - in state 102 resolved as shift
WARNING: shift/reduce conflict for + in state 108 resolved as shift
WARNING: shift/reduce conflict for - in state 108 resolved as shift
WARNING: shift/reduce conflict for + in state 109 resolved as shift
WARNING: shift/reduce conflict for - in state 109 resolved as shift
WARNING: shift/reduce conflict for * in state 110 resolved as shift
WARNING: shift/reduce conflict for / in state 110 resolved as shift
WARNING: shift/reduce conflict for * in state 111 resolved as shift
WARNING: shift/reduce conflict for / in state 111 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 119 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (ruleset -> rule)
WARNING: rejected rule (ruleset -> ruleset rule) in state 11
WARNING: reduce/reduce conflict in state 14 resolved using rule (funcbody -> rule)
WARNING: rejected rule (ruleset -> rule) in state 14
WARNING: reduce/reduce conflict in state 17 resolved using rule (funcbody -> value)
WARNING: rejected rule (term -> value) in state 17
WARNING: reduce/reduce conflict in state 19 resolved using rule (ruleblock -> empty)
WARNING: rejected rule (value -> empty) in state 19
WARNING: reduce/reduce conflict in state 64 resolved using rule (funcbody -> NEWLINE empty)
WARNING: rejected rule (ruleblock -> empty) in state 64
WARNING: reduce/reduce conflict in state 107 resolved using rule (term -> value)
WARNING: rejected rule (value_list -> value) in state 107
