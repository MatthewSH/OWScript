Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN
    EOF
    EVENT_TYPE
    FUNC
    MAP
    QUOTE
    WHITESPACE

Grammar

Rule 0     S' -> ruleset
Rule 1     ruleset -> rule
Rule 2     ruleset -> rule ruleset
Rule 3     rule -> RULE
Rule 4     rule -> RULE NEWLINE INDENT ruleblock DEDENT
Rule 5     ruleblock -> event ruleblock
Rule 6     ruleblock -> conditions ruleblock
Rule 7     ruleblock -> actions ruleblock
Rule 8     ruleblock -> NEWLINE ruleblock
Rule 9     ruleblock -> empty
Rule 10    event -> EVENT block
Rule 11    conditions -> CONDITIONS block
Rule 12    actions -> ACTIONS block
Rule 13    statements -> statements statement
Rule 14    statements -> statement
Rule 15    statement -> simple_stmt
Rule 16    simple_stmt -> expr NEWLINE
Rule 17    simple_stmt -> expr
Rule 18    compound_stmt -> number_expr
Rule 19    compound_stmt -> value_expr
Rule 20    compound_stmt -> action_expr
Rule 21    block -> NEWLINE INDENT statements DEDENT
Rule 22    block -> simple_stmt
Rule 23    expr -> compare
Rule 24    expr -> assign
Rule 25    expr -> ANNOTATION expr
Rule 26    arith_expr -> term
Rule 27    arith_expr -> arith_expr + arith_expr
Rule 28    arith_expr -> arith_expr - arith_expr
Rule 29    term -> value
Rule 30    term -> term * term
Rule 31    term -> term / term
Rule 32    value -> variable
Rule 33    value -> compound_stmt
Rule 34    value -> number_const
Rule 35    value -> vector
Rule 36    value -> unary
Rule 37    value -> array
Rule 38    value -> time
Rule 39    value -> ( compare )
Rule 40    value -> empty
Rule 41    after_expr -> ( value_list )
Rule 42    after_expr -> block
Rule 43    after_expr -> NEWLINE
Rule 44    value_list -> value
Rule 45    value_list -> value , value_list
Rule 46    unary -> - value
Rule 47    compare -> arith_expr
Rule 48    compare -> compare COMPARE arith_expr
Rule 49    assign -> value ASSIGN compare
Rule 50    number_expr -> NUMBER after_expr
Rule 51    value_expr -> VALUE after_expr
Rule 52    action_expr -> ACTION after_expr
Rule 53    time -> TIME
Rule 54    number_const -> INTEGER
Rule 55    number_const -> FLOAT
Rule 56    variable -> name
Rule 57    variable -> global_var
Rule 58    variable -> player_var
Rule 59    name -> NAME
Rule 60    global_var -> GLOBAL_VAR
Rule 61    player_var -> PLAYER_VAR
Rule 62    vector -> COMPARE value , value , value COMPARE
Rule 63    array -> [ value_list ]
Rule 64    empty -> COMMENT
Rule 65    empty -> <empty>

Terminals, with rules where they appear

(                    : 39 41
)                    : 39 41
*                    : 30
+                    : 27
,                    : 45 62 62
-                    : 28 46
/                    : 31
ACTION               : 52
ACTIONS              : 12
ANNOTATION           : 25
ASSIGN               : 49
BOOLEAN              : 
COMMENT              : 64
COMPARE              : 48 62 62
CONDITIONS           : 11
DEDENT               : 4 21
EOF                  : 
EVENT                : 10
EVENT_TYPE           : 
FLOAT                : 55
FUNC                 : 
GLOBAL_VAR           : 60
INDENT               : 4 21
INTEGER              : 54
MAP                  : 
NAME                 : 59
NEWLINE              : 4 8 16 21 43
NUMBER               : 50
PLAYER_VAR           : 61
QUOTE                : 
RULE                 : 3 4
TIME                 : 53
VALUE                : 51
WHITESPACE           : 
[                    : 63
]                    : 63
error                : 

Nonterminals, with rules where they appear

action_expr          : 20
actions              : 7
after_expr           : 50 51 52
arith_expr           : 27 27 28 28 47 48
array                : 37
assign               : 24
block                : 10 11 12 42
compare              : 23 39 48 49
compound_stmt        : 33
conditions           : 6
empty                : 9 40
event                : 5
expr                 : 16 17 25
global_var           : 57
name                 : 56
number_const         : 34
number_expr          : 18
player_var           : 58
rule                 : 1 2
ruleblock            : 4 5 6 7 8
ruleset              : 2 0
simple_stmt          : 15 22
statement            : 13 14
statements           : 13 21
term                 : 26 30 30 31 31
time                 : 38
unary                : 36
value                : 29 44 45 46 49 62 62 62
value_expr           : 19
value_list           : 41 45 63
variable             : 32
vector               : 35

Parsing method: LALR

state 0

    (0) S' -> . ruleset
    (1) ruleset -> . rule
    (2) ruleset -> . rule ruleset
    (3) rule -> . RULE
    (4) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

    RULE            shift and go to state 3

    ruleset                        shift and go to state 1
    rule                           shift and go to state 2

state 1

    (0) S' -> ruleset .



state 2

    (1) ruleset -> rule .
    (2) ruleset -> rule . ruleset
    (1) ruleset -> . rule
    (2) ruleset -> . rule ruleset
    (3) rule -> . RULE
    (4) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

    $end            reduce using rule 1 (ruleset -> rule .)
    RULE            shift and go to state 3

    rule                           shift and go to state 2
    ruleset                        shift and go to state 4

state 3

    (3) rule -> RULE .
    (4) rule -> RULE . NEWLINE INDENT ruleblock DEDENT

    RULE            reduce using rule 3 (rule -> RULE .)
    $end            reduce using rule 3 (rule -> RULE .)
    NEWLINE         shift and go to state 5


state 4

    (2) ruleset -> rule ruleset .

    $end            reduce using rule 2 (ruleset -> rule ruleset .)


state 5

    (4) rule -> RULE NEWLINE . INDENT ruleblock DEDENT

    INDENT          shift and go to state 6


state 6

    (4) rule -> RULE NEWLINE INDENT . ruleblock DEDENT
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . NEWLINE ruleblock
    (9) ruleblock -> . empty
    (10) event -> . EVENT block
    (11) conditions -> . CONDITIONS block
    (12) actions -> . ACTIONS block
    (64) empty -> . COMMENT
    (65) empty -> .

    NEWLINE         shift and go to state 7
    EVENT           shift and go to state 13
    CONDITIONS      shift and go to state 14
    ACTIONS         shift and go to state 15
    COMMENT         shift and go to state 16
    DEDENT          reduce using rule 65 (empty -> .)

    ruleblock                      shift and go to state 8
    event                          shift and go to state 9
    conditions                     shift and go to state 10
    actions                        shift and go to state 11
    empty                          shift and go to state 12

state 7

    (8) ruleblock -> NEWLINE . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . NEWLINE ruleblock
    (9) ruleblock -> . empty
    (10) event -> . EVENT block
    (11) conditions -> . CONDITIONS block
    (12) actions -> . ACTIONS block
    (64) empty -> . COMMENT
    (65) empty -> .

    NEWLINE         shift and go to state 7
    EVENT           shift and go to state 13
    CONDITIONS      shift and go to state 14
    ACTIONS         shift and go to state 15
    COMMENT         shift and go to state 16
    DEDENT          reduce using rule 65 (empty -> .)

    ruleblock                      shift and go to state 17
    event                          shift and go to state 9
    conditions                     shift and go to state 10
    actions                        shift and go to state 11
    empty                          shift and go to state 12

state 8

    (4) rule -> RULE NEWLINE INDENT ruleblock . DEDENT

    DEDENT          shift and go to state 18


state 9

    (5) ruleblock -> event . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . NEWLINE ruleblock
    (9) ruleblock -> . empty
    (10) event -> . EVENT block
    (11) conditions -> . CONDITIONS block
    (12) actions -> . ACTIONS block
    (64) empty -> . COMMENT
    (65) empty -> .

    NEWLINE         shift and go to state 7
    EVENT           shift and go to state 13
    CONDITIONS      shift and go to state 14
    ACTIONS         shift and go to state 15
    COMMENT         shift and go to state 16
    DEDENT          reduce using rule 65 (empty -> .)

    event                          shift and go to state 9
    ruleblock                      shift and go to state 19
    conditions                     shift and go to state 10
    actions                        shift and go to state 11
    empty                          shift and go to state 12

state 10

    (6) ruleblock -> conditions . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . NEWLINE ruleblock
    (9) ruleblock -> . empty
    (10) event -> . EVENT block
    (11) conditions -> . CONDITIONS block
    (12) actions -> . ACTIONS block
    (64) empty -> . COMMENT
    (65) empty -> .

    NEWLINE         shift and go to state 7
    EVENT           shift and go to state 13
    CONDITIONS      shift and go to state 14
    ACTIONS         shift and go to state 15
    COMMENT         shift and go to state 16
    DEDENT          reduce using rule 65 (empty -> .)

    conditions                     shift and go to state 10
    ruleblock                      shift and go to state 20
    event                          shift and go to state 9
    actions                        shift and go to state 11
    empty                          shift and go to state 12

state 11

    (7) ruleblock -> actions . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . NEWLINE ruleblock
    (9) ruleblock -> . empty
    (10) event -> . EVENT block
    (11) conditions -> . CONDITIONS block
    (12) actions -> . ACTIONS block
    (64) empty -> . COMMENT
    (65) empty -> .

    NEWLINE         shift and go to state 7
    EVENT           shift and go to state 13
    CONDITIONS      shift and go to state 14
    ACTIONS         shift and go to state 15
    COMMENT         shift and go to state 16
    DEDENT          reduce using rule 65 (empty -> .)

    actions                        shift and go to state 11
    ruleblock                      shift and go to state 21
    event                          shift and go to state 9
    conditions                     shift and go to state 10
    empty                          shift and go to state 12

state 12

    (9) ruleblock -> empty .

    DEDENT          reduce using rule 9 (ruleblock -> empty .)


state 13

    (10) event -> EVENT . block
    (21) block -> . NEWLINE INDENT statements DEDENT
    (22) block -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    NEWLINE         shift and go to state 23
    ANNOTATION      shift and go to state 28
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]

    block                          shift and go to state 22
    simple_stmt                    shift and go to state 24
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 14

    (11) conditions -> CONDITIONS . block
    (21) block -> . NEWLINE INDENT statements DEDENT
    (22) block -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    NEWLINE         shift and go to state 23
    ANNOTATION      shift and go to state 28
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]

    block                          shift and go to state 59
    simple_stmt                    shift and go to state 24
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 15

    (12) actions -> ACTIONS . block
    (21) block -> . NEWLINE INDENT statements DEDENT
    (22) block -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    NEWLINE         shift and go to state 23
    ANNOTATION      shift and go to state 28
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]

    block                          shift and go to state 60
    simple_stmt                    shift and go to state 24
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 16

    (64) empty -> COMMENT .

    DEDENT          reduce using rule 64 (empty -> COMMENT .)
    ASSIGN          reduce using rule 64 (empty -> COMMENT .)
    *               reduce using rule 64 (empty -> COMMENT .)
    /               reduce using rule 64 (empty -> COMMENT .)
    +               reduce using rule 64 (empty -> COMMENT .)
    -               reduce using rule 64 (empty -> COMMENT .)
    COMPARE         reduce using rule 64 (empty -> COMMENT .)
    NEWLINE         reduce using rule 64 (empty -> COMMENT .)
    EVENT           reduce using rule 64 (empty -> COMMENT .)
    CONDITIONS      reduce using rule 64 (empty -> COMMENT .)
    ACTIONS         reduce using rule 64 (empty -> COMMENT .)
    COMMENT         reduce using rule 64 (empty -> COMMENT .)
    ,               reduce using rule 64 (empty -> COMMENT .)
    )               reduce using rule 64 (empty -> COMMENT .)
    ]               reduce using rule 64 (empty -> COMMENT .)
    ANNOTATION      reduce using rule 64 (empty -> COMMENT .)
    (               reduce using rule 64 (empty -> COMMENT .)
    INTEGER         reduce using rule 64 (empty -> COMMENT .)
    FLOAT           reduce using rule 64 (empty -> COMMENT .)
    [               reduce using rule 64 (empty -> COMMENT .)
    TIME            reduce using rule 64 (empty -> COMMENT .)
    NAME            reduce using rule 64 (empty -> COMMENT .)
    GLOBAL_VAR      reduce using rule 64 (empty -> COMMENT .)
    PLAYER_VAR      reduce using rule 64 (empty -> COMMENT .)
    NUMBER          reduce using rule 64 (empty -> COMMENT .)
    VALUE           reduce using rule 64 (empty -> COMMENT .)
    ACTION          reduce using rule 64 (empty -> COMMENT .)


state 17

    (8) ruleblock -> NEWLINE ruleblock .

    DEDENT          reduce using rule 8 (ruleblock -> NEWLINE ruleblock .)


state 18

    (4) rule -> RULE NEWLINE INDENT ruleblock DEDENT .

    RULE            reduce using rule 4 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    $end            reduce using rule 4 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)


state 19

    (5) ruleblock -> event ruleblock .

    DEDENT          reduce using rule 5 (ruleblock -> event ruleblock .)


state 20

    (6) ruleblock -> conditions ruleblock .

    DEDENT          reduce using rule 6 (ruleblock -> conditions ruleblock .)


state 21

    (7) ruleblock -> actions ruleblock .

    DEDENT          reduce using rule 7 (ruleblock -> actions ruleblock .)


state 22

    (10) event -> EVENT block .

    NEWLINE         reduce using rule 10 (event -> EVENT block .)
    EVENT           reduce using rule 10 (event -> EVENT block .)
    CONDITIONS      reduce using rule 10 (event -> EVENT block .)
    ACTIONS         reduce using rule 10 (event -> EVENT block .)
    COMMENT         reduce using rule 10 (event -> EVENT block .)
    DEDENT          reduce using rule 10 (event -> EVENT block .)


state 23

    (21) block -> NEWLINE . INDENT statements DEDENT

    INDENT          shift and go to state 61


state 24

    (22) block -> simple_stmt .

    NEWLINE         reduce using rule 22 (block -> simple_stmt .)
    EVENT           reduce using rule 22 (block -> simple_stmt .)
    CONDITIONS      reduce using rule 22 (block -> simple_stmt .)
    ACTIONS         reduce using rule 22 (block -> simple_stmt .)
    COMMENT         reduce using rule 22 (block -> simple_stmt .)
    DEDENT          reduce using rule 22 (block -> simple_stmt .)
    ASSIGN          reduce using rule 22 (block -> simple_stmt .)
    *               reduce using rule 22 (block -> simple_stmt .)
    /               reduce using rule 22 (block -> simple_stmt .)
    +               reduce using rule 22 (block -> simple_stmt .)
    -               reduce using rule 22 (block -> simple_stmt .)
    COMPARE         reduce using rule 22 (block -> simple_stmt .)
    ,               reduce using rule 22 (block -> simple_stmt .)
    )               reduce using rule 22 (block -> simple_stmt .)
    ]               reduce using rule 22 (block -> simple_stmt .)
    ANNOTATION      reduce using rule 22 (block -> simple_stmt .)
    (               reduce using rule 22 (block -> simple_stmt .)
    INTEGER         reduce using rule 22 (block -> simple_stmt .)
    FLOAT           reduce using rule 22 (block -> simple_stmt .)
    [               reduce using rule 22 (block -> simple_stmt .)
    TIME            reduce using rule 22 (block -> simple_stmt .)
    NAME            reduce using rule 22 (block -> simple_stmt .)
    GLOBAL_VAR      reduce using rule 22 (block -> simple_stmt .)
    PLAYER_VAR      reduce using rule 22 (block -> simple_stmt .)
    NUMBER          reduce using rule 22 (block -> simple_stmt .)
    VALUE           reduce using rule 22 (block -> simple_stmt .)
    ACTION          reduce using rule 22 (block -> simple_stmt .)


state 25

    (16) simple_stmt -> expr . NEWLINE
    (17) simple_stmt -> expr .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 62
    EVENT           reduce using rule 17 (simple_stmt -> expr .)
    CONDITIONS      reduce using rule 17 (simple_stmt -> expr .)
    ACTIONS         reduce using rule 17 (simple_stmt -> expr .)
    COMMENT         reduce using rule 17 (simple_stmt -> expr .)
    DEDENT          reduce using rule 17 (simple_stmt -> expr .)
    ASSIGN          reduce using rule 17 (simple_stmt -> expr .)
    *               reduce using rule 17 (simple_stmt -> expr .)
    /               reduce using rule 17 (simple_stmt -> expr .)
    +               reduce using rule 17 (simple_stmt -> expr .)
    -               reduce using rule 17 (simple_stmt -> expr .)
    COMPARE         reduce using rule 17 (simple_stmt -> expr .)
    ,               reduce using rule 17 (simple_stmt -> expr .)
    )               reduce using rule 17 (simple_stmt -> expr .)
    ]               reduce using rule 17 (simple_stmt -> expr .)
    ANNOTATION      reduce using rule 17 (simple_stmt -> expr .)
    (               reduce using rule 17 (simple_stmt -> expr .)
    INTEGER         reduce using rule 17 (simple_stmt -> expr .)
    FLOAT           reduce using rule 17 (simple_stmt -> expr .)
    [               reduce using rule 17 (simple_stmt -> expr .)
    TIME            reduce using rule 17 (simple_stmt -> expr .)
    NAME            reduce using rule 17 (simple_stmt -> expr .)
    GLOBAL_VAR      reduce using rule 17 (simple_stmt -> expr .)
    PLAYER_VAR      reduce using rule 17 (simple_stmt -> expr .)
    NUMBER          reduce using rule 17 (simple_stmt -> expr .)
    VALUE           reduce using rule 17 (simple_stmt -> expr .)
    ACTION          reduce using rule 17 (simple_stmt -> expr .)

  ! NEWLINE         [ reduce using rule 17 (simple_stmt -> expr .) ]


state 26

    (23) expr -> compare .
    (48) compare -> compare . COMPARE arith_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    NEWLINE         reduce using rule 23 (expr -> compare .)
    EVENT           reduce using rule 23 (expr -> compare .)
    CONDITIONS      reduce using rule 23 (expr -> compare .)
    ACTIONS         reduce using rule 23 (expr -> compare .)
    COMMENT         reduce using rule 23 (expr -> compare .)
    DEDENT          reduce using rule 23 (expr -> compare .)
    ASSIGN          reduce using rule 23 (expr -> compare .)
    *               reduce using rule 23 (expr -> compare .)
    /               reduce using rule 23 (expr -> compare .)
    +               reduce using rule 23 (expr -> compare .)
    -               reduce using rule 23 (expr -> compare .)
    ,               reduce using rule 23 (expr -> compare .)
    )               reduce using rule 23 (expr -> compare .)
    ]               reduce using rule 23 (expr -> compare .)
    ANNOTATION      reduce using rule 23 (expr -> compare .)
    (               reduce using rule 23 (expr -> compare .)
    INTEGER         reduce using rule 23 (expr -> compare .)
    FLOAT           reduce using rule 23 (expr -> compare .)
    [               reduce using rule 23 (expr -> compare .)
    TIME            reduce using rule 23 (expr -> compare .)
    NAME            reduce using rule 23 (expr -> compare .)
    GLOBAL_VAR      reduce using rule 23 (expr -> compare .)
    PLAYER_VAR      reduce using rule 23 (expr -> compare .)
    NUMBER          reduce using rule 23 (expr -> compare .)
    VALUE           reduce using rule 23 (expr -> compare .)
    ACTION          reduce using rule 23 (expr -> compare .)
    COMPARE         shift and go to state 63

  ! COMPARE         [ reduce using rule 23 (expr -> compare .) ]


state 27

    (24) expr -> assign .

    NEWLINE         reduce using rule 24 (expr -> assign .)
    EVENT           reduce using rule 24 (expr -> assign .)
    CONDITIONS      reduce using rule 24 (expr -> assign .)
    ACTIONS         reduce using rule 24 (expr -> assign .)
    COMMENT         reduce using rule 24 (expr -> assign .)
    DEDENT          reduce using rule 24 (expr -> assign .)
    ASSIGN          reduce using rule 24 (expr -> assign .)
    *               reduce using rule 24 (expr -> assign .)
    /               reduce using rule 24 (expr -> assign .)
    +               reduce using rule 24 (expr -> assign .)
    -               reduce using rule 24 (expr -> assign .)
    COMPARE         reduce using rule 24 (expr -> assign .)
    ,               reduce using rule 24 (expr -> assign .)
    )               reduce using rule 24 (expr -> assign .)
    ]               reduce using rule 24 (expr -> assign .)
    ANNOTATION      reduce using rule 24 (expr -> assign .)
    (               reduce using rule 24 (expr -> assign .)
    INTEGER         reduce using rule 24 (expr -> assign .)
    FLOAT           reduce using rule 24 (expr -> assign .)
    [               reduce using rule 24 (expr -> assign .)
    TIME            reduce using rule 24 (expr -> assign .)
    NAME            reduce using rule 24 (expr -> assign .)
    GLOBAL_VAR      reduce using rule 24 (expr -> assign .)
    PLAYER_VAR      reduce using rule 24 (expr -> assign .)
    NUMBER          reduce using rule 24 (expr -> assign .)
    VALUE           reduce using rule 24 (expr -> assign .)
    ACTION          reduce using rule 24 (expr -> assign .)


state 28

    (25) expr -> ANNOTATION . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    ANNOTATION      shift and go to state 28
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    expr                           shift and go to state 64
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 29

    (47) compare -> arith_expr .
    (27) arith_expr -> arith_expr . + arith_expr
    (28) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    COMPARE         reduce using rule 47 (compare -> arith_expr .)
    NEWLINE         reduce using rule 47 (compare -> arith_expr .)
    EVENT           reduce using rule 47 (compare -> arith_expr .)
    CONDITIONS      reduce using rule 47 (compare -> arith_expr .)
    ACTIONS         reduce using rule 47 (compare -> arith_expr .)
    COMMENT         reduce using rule 47 (compare -> arith_expr .)
    DEDENT          reduce using rule 47 (compare -> arith_expr .)
    ASSIGN          reduce using rule 47 (compare -> arith_expr .)
    *               reduce using rule 47 (compare -> arith_expr .)
    /               reduce using rule 47 (compare -> arith_expr .)
    ,               reduce using rule 47 (compare -> arith_expr .)
    )               reduce using rule 47 (compare -> arith_expr .)
    ]               reduce using rule 47 (compare -> arith_expr .)
    ANNOTATION      reduce using rule 47 (compare -> arith_expr .)
    (               reduce using rule 47 (compare -> arith_expr .)
    INTEGER         reduce using rule 47 (compare -> arith_expr .)
    FLOAT           reduce using rule 47 (compare -> arith_expr .)
    [               reduce using rule 47 (compare -> arith_expr .)
    TIME            reduce using rule 47 (compare -> arith_expr .)
    NAME            reduce using rule 47 (compare -> arith_expr .)
    GLOBAL_VAR      reduce using rule 47 (compare -> arith_expr .)
    PLAYER_VAR      reduce using rule 47 (compare -> arith_expr .)
    NUMBER          reduce using rule 47 (compare -> arith_expr .)
    VALUE           reduce using rule 47 (compare -> arith_expr .)
    ACTION          reduce using rule 47 (compare -> arith_expr .)
    +               shift and go to state 65
    -               shift and go to state 66

  ! +               [ reduce using rule 47 (compare -> arith_expr .) ]
  ! -               [ reduce using rule 47 (compare -> arith_expr .) ]


state 30

    (62) vector -> COMPARE . value , value , value COMPARE
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ,               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

    value                          shift and go to state 67
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 31

    (49) assign -> value . ASSIGN compare
    (29) term -> value .

  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 68
    *               reduce using rule 29 (term -> value .)
    /               reduce using rule 29 (term -> value .)
    +               reduce using rule 29 (term -> value .)
    -               reduce using rule 29 (term -> value .)
    COMPARE         reduce using rule 29 (term -> value .)
    NEWLINE         reduce using rule 29 (term -> value .)
    EVENT           reduce using rule 29 (term -> value .)
    CONDITIONS      reduce using rule 29 (term -> value .)
    ACTIONS         reduce using rule 29 (term -> value .)
    COMMENT         reduce using rule 29 (term -> value .)
    DEDENT          reduce using rule 29 (term -> value .)
    ,               reduce using rule 29 (term -> value .)
    )               reduce using rule 29 (term -> value .)
    ]               reduce using rule 29 (term -> value .)
    ANNOTATION      reduce using rule 29 (term -> value .)
    (               reduce using rule 29 (term -> value .)
    INTEGER         reduce using rule 29 (term -> value .)
    FLOAT           reduce using rule 29 (term -> value .)
    [               reduce using rule 29 (term -> value .)
    TIME            reduce using rule 29 (term -> value .)
    NAME            reduce using rule 29 (term -> value .)
    GLOBAL_VAR      reduce using rule 29 (term -> value .)
    PLAYER_VAR      reduce using rule 29 (term -> value .)
    NUMBER          reduce using rule 29 (term -> value .)
    VALUE           reduce using rule 29 (term -> value .)
    ACTION          reduce using rule 29 (term -> value .)

  ! ASSIGN          [ reduce using rule 29 (term -> value .) ]


state 32

    (26) arith_expr -> term .
    (30) term -> term . * term
    (31) term -> term . / term

  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    +               reduce using rule 26 (arith_expr -> term .)
    -               reduce using rule 26 (arith_expr -> term .)
    COMPARE         reduce using rule 26 (arith_expr -> term .)
    NEWLINE         reduce using rule 26 (arith_expr -> term .)
    EVENT           reduce using rule 26 (arith_expr -> term .)
    CONDITIONS      reduce using rule 26 (arith_expr -> term .)
    ACTIONS         reduce using rule 26 (arith_expr -> term .)
    COMMENT         reduce using rule 26 (arith_expr -> term .)
    DEDENT          reduce using rule 26 (arith_expr -> term .)
    ASSIGN          reduce using rule 26 (arith_expr -> term .)
    ,               reduce using rule 26 (arith_expr -> term .)
    )               reduce using rule 26 (arith_expr -> term .)
    ]               reduce using rule 26 (arith_expr -> term .)
    ANNOTATION      reduce using rule 26 (arith_expr -> term .)
    (               reduce using rule 26 (arith_expr -> term .)
    INTEGER         reduce using rule 26 (arith_expr -> term .)
    FLOAT           reduce using rule 26 (arith_expr -> term .)
    [               reduce using rule 26 (arith_expr -> term .)
    TIME            reduce using rule 26 (arith_expr -> term .)
    NAME            reduce using rule 26 (arith_expr -> term .)
    GLOBAL_VAR      reduce using rule 26 (arith_expr -> term .)
    PLAYER_VAR      reduce using rule 26 (arith_expr -> term .)
    NUMBER          reduce using rule 26 (arith_expr -> term .)
    VALUE           reduce using rule 26 (arith_expr -> term .)
    ACTION          reduce using rule 26 (arith_expr -> term .)
    *               shift and go to state 69
    /               shift and go to state 70

  ! *               [ reduce using rule 26 (arith_expr -> term .) ]
  ! /               [ reduce using rule 26 (arith_expr -> term .) ]


state 33

    (46) unary -> - . value
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    value                          shift and go to state 71
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 34

    (32) value -> variable .

    ASSIGN          reduce using rule 32 (value -> variable .)
    *               reduce using rule 32 (value -> variable .)
    /               reduce using rule 32 (value -> variable .)
    +               reduce using rule 32 (value -> variable .)
    -               reduce using rule 32 (value -> variable .)
    COMPARE         reduce using rule 32 (value -> variable .)
    NEWLINE         reduce using rule 32 (value -> variable .)
    EVENT           reduce using rule 32 (value -> variable .)
    CONDITIONS      reduce using rule 32 (value -> variable .)
    ACTIONS         reduce using rule 32 (value -> variable .)
    COMMENT         reduce using rule 32 (value -> variable .)
    DEDENT          reduce using rule 32 (value -> variable .)
    ,               reduce using rule 32 (value -> variable .)
    )               reduce using rule 32 (value -> variable .)
    ]               reduce using rule 32 (value -> variable .)
    ANNOTATION      reduce using rule 32 (value -> variable .)
    (               reduce using rule 32 (value -> variable .)
    INTEGER         reduce using rule 32 (value -> variable .)
    FLOAT           reduce using rule 32 (value -> variable .)
    [               reduce using rule 32 (value -> variable .)
    TIME            reduce using rule 32 (value -> variable .)
    NAME            reduce using rule 32 (value -> variable .)
    GLOBAL_VAR      reduce using rule 32 (value -> variable .)
    PLAYER_VAR      reduce using rule 32 (value -> variable .)
    NUMBER          reduce using rule 32 (value -> variable .)
    VALUE           reduce using rule 32 (value -> variable .)
    ACTION          reduce using rule 32 (value -> variable .)


state 35

    (33) value -> compound_stmt .

    ASSIGN          reduce using rule 33 (value -> compound_stmt .)
    *               reduce using rule 33 (value -> compound_stmt .)
    /               reduce using rule 33 (value -> compound_stmt .)
    +               reduce using rule 33 (value -> compound_stmt .)
    -               reduce using rule 33 (value -> compound_stmt .)
    COMPARE         reduce using rule 33 (value -> compound_stmt .)
    NEWLINE         reduce using rule 33 (value -> compound_stmt .)
    EVENT           reduce using rule 33 (value -> compound_stmt .)
    CONDITIONS      reduce using rule 33 (value -> compound_stmt .)
    ACTIONS         reduce using rule 33 (value -> compound_stmt .)
    COMMENT         reduce using rule 33 (value -> compound_stmt .)
    DEDENT          reduce using rule 33 (value -> compound_stmt .)
    ,               reduce using rule 33 (value -> compound_stmt .)
    )               reduce using rule 33 (value -> compound_stmt .)
    ]               reduce using rule 33 (value -> compound_stmt .)
    ANNOTATION      reduce using rule 33 (value -> compound_stmt .)
    (               reduce using rule 33 (value -> compound_stmt .)
    INTEGER         reduce using rule 33 (value -> compound_stmt .)
    FLOAT           reduce using rule 33 (value -> compound_stmt .)
    [               reduce using rule 33 (value -> compound_stmt .)
    TIME            reduce using rule 33 (value -> compound_stmt .)
    NAME            reduce using rule 33 (value -> compound_stmt .)
    GLOBAL_VAR      reduce using rule 33 (value -> compound_stmt .)
    PLAYER_VAR      reduce using rule 33 (value -> compound_stmt .)
    NUMBER          reduce using rule 33 (value -> compound_stmt .)
    VALUE           reduce using rule 33 (value -> compound_stmt .)
    ACTION          reduce using rule 33 (value -> compound_stmt .)


state 36

    (34) value -> number_const .

    ASSIGN          reduce using rule 34 (value -> number_const .)
    *               reduce using rule 34 (value -> number_const .)
    /               reduce using rule 34 (value -> number_const .)
    +               reduce using rule 34 (value -> number_const .)
    -               reduce using rule 34 (value -> number_const .)
    COMPARE         reduce using rule 34 (value -> number_const .)
    NEWLINE         reduce using rule 34 (value -> number_const .)
    EVENT           reduce using rule 34 (value -> number_const .)
    CONDITIONS      reduce using rule 34 (value -> number_const .)
    ACTIONS         reduce using rule 34 (value -> number_const .)
    COMMENT         reduce using rule 34 (value -> number_const .)
    DEDENT          reduce using rule 34 (value -> number_const .)
    ,               reduce using rule 34 (value -> number_const .)
    )               reduce using rule 34 (value -> number_const .)
    ]               reduce using rule 34 (value -> number_const .)
    ANNOTATION      reduce using rule 34 (value -> number_const .)
    (               reduce using rule 34 (value -> number_const .)
    INTEGER         reduce using rule 34 (value -> number_const .)
    FLOAT           reduce using rule 34 (value -> number_const .)
    [               reduce using rule 34 (value -> number_const .)
    TIME            reduce using rule 34 (value -> number_const .)
    NAME            reduce using rule 34 (value -> number_const .)
    GLOBAL_VAR      reduce using rule 34 (value -> number_const .)
    PLAYER_VAR      reduce using rule 34 (value -> number_const .)
    NUMBER          reduce using rule 34 (value -> number_const .)
    VALUE           reduce using rule 34 (value -> number_const .)
    ACTION          reduce using rule 34 (value -> number_const .)


state 37

    (35) value -> vector .

    ASSIGN          reduce using rule 35 (value -> vector .)
    *               reduce using rule 35 (value -> vector .)
    /               reduce using rule 35 (value -> vector .)
    +               reduce using rule 35 (value -> vector .)
    -               reduce using rule 35 (value -> vector .)
    COMPARE         reduce using rule 35 (value -> vector .)
    NEWLINE         reduce using rule 35 (value -> vector .)
    EVENT           reduce using rule 35 (value -> vector .)
    CONDITIONS      reduce using rule 35 (value -> vector .)
    ACTIONS         reduce using rule 35 (value -> vector .)
    COMMENT         reduce using rule 35 (value -> vector .)
    DEDENT          reduce using rule 35 (value -> vector .)
    ,               reduce using rule 35 (value -> vector .)
    )               reduce using rule 35 (value -> vector .)
    ]               reduce using rule 35 (value -> vector .)
    ANNOTATION      reduce using rule 35 (value -> vector .)
    (               reduce using rule 35 (value -> vector .)
    INTEGER         reduce using rule 35 (value -> vector .)
    FLOAT           reduce using rule 35 (value -> vector .)
    [               reduce using rule 35 (value -> vector .)
    TIME            reduce using rule 35 (value -> vector .)
    NAME            reduce using rule 35 (value -> vector .)
    GLOBAL_VAR      reduce using rule 35 (value -> vector .)
    PLAYER_VAR      reduce using rule 35 (value -> vector .)
    NUMBER          reduce using rule 35 (value -> vector .)
    VALUE           reduce using rule 35 (value -> vector .)
    ACTION          reduce using rule 35 (value -> vector .)


state 38

    (36) value -> unary .

    ASSIGN          reduce using rule 36 (value -> unary .)
    *               reduce using rule 36 (value -> unary .)
    /               reduce using rule 36 (value -> unary .)
    +               reduce using rule 36 (value -> unary .)
    -               reduce using rule 36 (value -> unary .)
    COMPARE         reduce using rule 36 (value -> unary .)
    NEWLINE         reduce using rule 36 (value -> unary .)
    EVENT           reduce using rule 36 (value -> unary .)
    CONDITIONS      reduce using rule 36 (value -> unary .)
    ACTIONS         reduce using rule 36 (value -> unary .)
    COMMENT         reduce using rule 36 (value -> unary .)
    DEDENT          reduce using rule 36 (value -> unary .)
    ,               reduce using rule 36 (value -> unary .)
    )               reduce using rule 36 (value -> unary .)
    ]               reduce using rule 36 (value -> unary .)
    ANNOTATION      reduce using rule 36 (value -> unary .)
    (               reduce using rule 36 (value -> unary .)
    INTEGER         reduce using rule 36 (value -> unary .)
    FLOAT           reduce using rule 36 (value -> unary .)
    [               reduce using rule 36 (value -> unary .)
    TIME            reduce using rule 36 (value -> unary .)
    NAME            reduce using rule 36 (value -> unary .)
    GLOBAL_VAR      reduce using rule 36 (value -> unary .)
    PLAYER_VAR      reduce using rule 36 (value -> unary .)
    NUMBER          reduce using rule 36 (value -> unary .)
    VALUE           reduce using rule 36 (value -> unary .)
    ACTION          reduce using rule 36 (value -> unary .)


state 39

    (37) value -> array .

    ASSIGN          reduce using rule 37 (value -> array .)
    *               reduce using rule 37 (value -> array .)
    /               reduce using rule 37 (value -> array .)
    +               reduce using rule 37 (value -> array .)
    -               reduce using rule 37 (value -> array .)
    COMPARE         reduce using rule 37 (value -> array .)
    NEWLINE         reduce using rule 37 (value -> array .)
    EVENT           reduce using rule 37 (value -> array .)
    CONDITIONS      reduce using rule 37 (value -> array .)
    ACTIONS         reduce using rule 37 (value -> array .)
    COMMENT         reduce using rule 37 (value -> array .)
    DEDENT          reduce using rule 37 (value -> array .)
    ,               reduce using rule 37 (value -> array .)
    )               reduce using rule 37 (value -> array .)
    ]               reduce using rule 37 (value -> array .)
    ANNOTATION      reduce using rule 37 (value -> array .)
    (               reduce using rule 37 (value -> array .)
    INTEGER         reduce using rule 37 (value -> array .)
    FLOAT           reduce using rule 37 (value -> array .)
    [               reduce using rule 37 (value -> array .)
    TIME            reduce using rule 37 (value -> array .)
    NAME            reduce using rule 37 (value -> array .)
    GLOBAL_VAR      reduce using rule 37 (value -> array .)
    PLAYER_VAR      reduce using rule 37 (value -> array .)
    NUMBER          reduce using rule 37 (value -> array .)
    VALUE           reduce using rule 37 (value -> array .)
    ACTION          reduce using rule 37 (value -> array .)


state 40

    (38) value -> time .

    ASSIGN          reduce using rule 38 (value -> time .)
    *               reduce using rule 38 (value -> time .)
    /               reduce using rule 38 (value -> time .)
    +               reduce using rule 38 (value -> time .)
    -               reduce using rule 38 (value -> time .)
    COMPARE         reduce using rule 38 (value -> time .)
    NEWLINE         reduce using rule 38 (value -> time .)
    EVENT           reduce using rule 38 (value -> time .)
    CONDITIONS      reduce using rule 38 (value -> time .)
    ACTIONS         reduce using rule 38 (value -> time .)
    COMMENT         reduce using rule 38 (value -> time .)
    DEDENT          reduce using rule 38 (value -> time .)
    ,               reduce using rule 38 (value -> time .)
    )               reduce using rule 38 (value -> time .)
    ]               reduce using rule 38 (value -> time .)
    ANNOTATION      reduce using rule 38 (value -> time .)
    (               reduce using rule 38 (value -> time .)
    INTEGER         reduce using rule 38 (value -> time .)
    FLOAT           reduce using rule 38 (value -> time .)
    [               reduce using rule 38 (value -> time .)
    TIME            reduce using rule 38 (value -> time .)
    NAME            reduce using rule 38 (value -> time .)
    GLOBAL_VAR      reduce using rule 38 (value -> time .)
    PLAYER_VAR      reduce using rule 38 (value -> time .)
    NUMBER          reduce using rule 38 (value -> time .)
    VALUE           reduce using rule 38 (value -> time .)
    ACTION          reduce using rule 38 (value -> time .)


state 41

    (39) value -> ( . compare )
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]

    compare                        shift and go to state 72
    arith_expr                     shift and go to state 29
    term                           shift and go to state 32
    value                          shift and go to state 73
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 42

    (40) value -> empty .

    ASSIGN          reduce using rule 40 (value -> empty .)
    *               reduce using rule 40 (value -> empty .)
    /               reduce using rule 40 (value -> empty .)
    +               reduce using rule 40 (value -> empty .)
    -               reduce using rule 40 (value -> empty .)
    COMPARE         reduce using rule 40 (value -> empty .)
    NEWLINE         reduce using rule 40 (value -> empty .)
    EVENT           reduce using rule 40 (value -> empty .)
    CONDITIONS      reduce using rule 40 (value -> empty .)
    ACTIONS         reduce using rule 40 (value -> empty .)
    COMMENT         reduce using rule 40 (value -> empty .)
    DEDENT          reduce using rule 40 (value -> empty .)
    ,               reduce using rule 40 (value -> empty .)
    )               reduce using rule 40 (value -> empty .)
    ]               reduce using rule 40 (value -> empty .)
    ANNOTATION      reduce using rule 40 (value -> empty .)
    (               reduce using rule 40 (value -> empty .)
    INTEGER         reduce using rule 40 (value -> empty .)
    FLOAT           reduce using rule 40 (value -> empty .)
    [               reduce using rule 40 (value -> empty .)
    TIME            reduce using rule 40 (value -> empty .)
    NAME            reduce using rule 40 (value -> empty .)
    GLOBAL_VAR      reduce using rule 40 (value -> empty .)
    PLAYER_VAR      reduce using rule 40 (value -> empty .)
    NUMBER          reduce using rule 40 (value -> empty .)
    VALUE           reduce using rule 40 (value -> empty .)
    ACTION          reduce using rule 40 (value -> empty .)


state 43

    (56) variable -> name .

    ASSIGN          reduce using rule 56 (variable -> name .)
    *               reduce using rule 56 (variable -> name .)
    /               reduce using rule 56 (variable -> name .)
    +               reduce using rule 56 (variable -> name .)
    -               reduce using rule 56 (variable -> name .)
    COMPARE         reduce using rule 56 (variable -> name .)
    NEWLINE         reduce using rule 56 (variable -> name .)
    EVENT           reduce using rule 56 (variable -> name .)
    CONDITIONS      reduce using rule 56 (variable -> name .)
    ACTIONS         reduce using rule 56 (variable -> name .)
    COMMENT         reduce using rule 56 (variable -> name .)
    DEDENT          reduce using rule 56 (variable -> name .)
    ,               reduce using rule 56 (variable -> name .)
    )               reduce using rule 56 (variable -> name .)
    ]               reduce using rule 56 (variable -> name .)
    ANNOTATION      reduce using rule 56 (variable -> name .)
    (               reduce using rule 56 (variable -> name .)
    INTEGER         reduce using rule 56 (variable -> name .)
    FLOAT           reduce using rule 56 (variable -> name .)
    [               reduce using rule 56 (variable -> name .)
    TIME            reduce using rule 56 (variable -> name .)
    NAME            reduce using rule 56 (variable -> name .)
    GLOBAL_VAR      reduce using rule 56 (variable -> name .)
    PLAYER_VAR      reduce using rule 56 (variable -> name .)
    NUMBER          reduce using rule 56 (variable -> name .)
    VALUE           reduce using rule 56 (variable -> name .)
    ACTION          reduce using rule 56 (variable -> name .)


state 44

    (57) variable -> global_var .

    ASSIGN          reduce using rule 57 (variable -> global_var .)
    *               reduce using rule 57 (variable -> global_var .)
    /               reduce using rule 57 (variable -> global_var .)
    +               reduce using rule 57 (variable -> global_var .)
    -               reduce using rule 57 (variable -> global_var .)
    COMPARE         reduce using rule 57 (variable -> global_var .)
    NEWLINE         reduce using rule 57 (variable -> global_var .)
    EVENT           reduce using rule 57 (variable -> global_var .)
    CONDITIONS      reduce using rule 57 (variable -> global_var .)
    ACTIONS         reduce using rule 57 (variable -> global_var .)
    COMMENT         reduce using rule 57 (variable -> global_var .)
    DEDENT          reduce using rule 57 (variable -> global_var .)
    ,               reduce using rule 57 (variable -> global_var .)
    )               reduce using rule 57 (variable -> global_var .)
    ]               reduce using rule 57 (variable -> global_var .)
    ANNOTATION      reduce using rule 57 (variable -> global_var .)
    (               reduce using rule 57 (variable -> global_var .)
    INTEGER         reduce using rule 57 (variable -> global_var .)
    FLOAT           reduce using rule 57 (variable -> global_var .)
    [               reduce using rule 57 (variable -> global_var .)
    TIME            reduce using rule 57 (variable -> global_var .)
    NAME            reduce using rule 57 (variable -> global_var .)
    GLOBAL_VAR      reduce using rule 57 (variable -> global_var .)
    PLAYER_VAR      reduce using rule 57 (variable -> global_var .)
    NUMBER          reduce using rule 57 (variable -> global_var .)
    VALUE           reduce using rule 57 (variable -> global_var .)
    ACTION          reduce using rule 57 (variable -> global_var .)


state 45

    (58) variable -> player_var .

    ASSIGN          reduce using rule 58 (variable -> player_var .)
    *               reduce using rule 58 (variable -> player_var .)
    /               reduce using rule 58 (variable -> player_var .)
    +               reduce using rule 58 (variable -> player_var .)
    -               reduce using rule 58 (variable -> player_var .)
    COMPARE         reduce using rule 58 (variable -> player_var .)
    NEWLINE         reduce using rule 58 (variable -> player_var .)
    EVENT           reduce using rule 58 (variable -> player_var .)
    CONDITIONS      reduce using rule 58 (variable -> player_var .)
    ACTIONS         reduce using rule 58 (variable -> player_var .)
    COMMENT         reduce using rule 58 (variable -> player_var .)
    DEDENT          reduce using rule 58 (variable -> player_var .)
    ,               reduce using rule 58 (variable -> player_var .)
    )               reduce using rule 58 (variable -> player_var .)
    ]               reduce using rule 58 (variable -> player_var .)
    ANNOTATION      reduce using rule 58 (variable -> player_var .)
    (               reduce using rule 58 (variable -> player_var .)
    INTEGER         reduce using rule 58 (variable -> player_var .)
    FLOAT           reduce using rule 58 (variable -> player_var .)
    [               reduce using rule 58 (variable -> player_var .)
    TIME            reduce using rule 58 (variable -> player_var .)
    NAME            reduce using rule 58 (variable -> player_var .)
    GLOBAL_VAR      reduce using rule 58 (variable -> player_var .)
    PLAYER_VAR      reduce using rule 58 (variable -> player_var .)
    NUMBER          reduce using rule 58 (variable -> player_var .)
    VALUE           reduce using rule 58 (variable -> player_var .)
    ACTION          reduce using rule 58 (variable -> player_var .)


state 46

    (18) compound_stmt -> number_expr .

    ASSIGN          reduce using rule 18 (compound_stmt -> number_expr .)
    *               reduce using rule 18 (compound_stmt -> number_expr .)
    /               reduce using rule 18 (compound_stmt -> number_expr .)
    +               reduce using rule 18 (compound_stmt -> number_expr .)
    -               reduce using rule 18 (compound_stmt -> number_expr .)
    COMPARE         reduce using rule 18 (compound_stmt -> number_expr .)
    NEWLINE         reduce using rule 18 (compound_stmt -> number_expr .)
    EVENT           reduce using rule 18 (compound_stmt -> number_expr .)
    CONDITIONS      reduce using rule 18 (compound_stmt -> number_expr .)
    ACTIONS         reduce using rule 18 (compound_stmt -> number_expr .)
    COMMENT         reduce using rule 18 (compound_stmt -> number_expr .)
    DEDENT          reduce using rule 18 (compound_stmt -> number_expr .)
    ,               reduce using rule 18 (compound_stmt -> number_expr .)
    )               reduce using rule 18 (compound_stmt -> number_expr .)
    ]               reduce using rule 18 (compound_stmt -> number_expr .)
    ANNOTATION      reduce using rule 18 (compound_stmt -> number_expr .)
    (               reduce using rule 18 (compound_stmt -> number_expr .)
    INTEGER         reduce using rule 18 (compound_stmt -> number_expr .)
    FLOAT           reduce using rule 18 (compound_stmt -> number_expr .)
    [               reduce using rule 18 (compound_stmt -> number_expr .)
    TIME            reduce using rule 18 (compound_stmt -> number_expr .)
    NAME            reduce using rule 18 (compound_stmt -> number_expr .)
    GLOBAL_VAR      reduce using rule 18 (compound_stmt -> number_expr .)
    PLAYER_VAR      reduce using rule 18 (compound_stmt -> number_expr .)
    NUMBER          reduce using rule 18 (compound_stmt -> number_expr .)
    VALUE           reduce using rule 18 (compound_stmt -> number_expr .)
    ACTION          reduce using rule 18 (compound_stmt -> number_expr .)


state 47

    (19) compound_stmt -> value_expr .

    ASSIGN          reduce using rule 19 (compound_stmt -> value_expr .)
    *               reduce using rule 19 (compound_stmt -> value_expr .)
    /               reduce using rule 19 (compound_stmt -> value_expr .)
    +               reduce using rule 19 (compound_stmt -> value_expr .)
    -               reduce using rule 19 (compound_stmt -> value_expr .)
    COMPARE         reduce using rule 19 (compound_stmt -> value_expr .)
    NEWLINE         reduce using rule 19 (compound_stmt -> value_expr .)
    EVENT           reduce using rule 19 (compound_stmt -> value_expr .)
    CONDITIONS      reduce using rule 19 (compound_stmt -> value_expr .)
    ACTIONS         reduce using rule 19 (compound_stmt -> value_expr .)
    COMMENT         reduce using rule 19 (compound_stmt -> value_expr .)
    DEDENT          reduce using rule 19 (compound_stmt -> value_expr .)
    ,               reduce using rule 19 (compound_stmt -> value_expr .)
    )               reduce using rule 19 (compound_stmt -> value_expr .)
    ]               reduce using rule 19 (compound_stmt -> value_expr .)
    ANNOTATION      reduce using rule 19 (compound_stmt -> value_expr .)
    (               reduce using rule 19 (compound_stmt -> value_expr .)
    INTEGER         reduce using rule 19 (compound_stmt -> value_expr .)
    FLOAT           reduce using rule 19 (compound_stmt -> value_expr .)
    [               reduce using rule 19 (compound_stmt -> value_expr .)
    TIME            reduce using rule 19 (compound_stmt -> value_expr .)
    NAME            reduce using rule 19 (compound_stmt -> value_expr .)
    GLOBAL_VAR      reduce using rule 19 (compound_stmt -> value_expr .)
    PLAYER_VAR      reduce using rule 19 (compound_stmt -> value_expr .)
    NUMBER          reduce using rule 19 (compound_stmt -> value_expr .)
    VALUE           reduce using rule 19 (compound_stmt -> value_expr .)
    ACTION          reduce using rule 19 (compound_stmt -> value_expr .)


state 48

    (20) compound_stmt -> action_expr .

    ASSIGN          reduce using rule 20 (compound_stmt -> action_expr .)
    *               reduce using rule 20 (compound_stmt -> action_expr .)
    /               reduce using rule 20 (compound_stmt -> action_expr .)
    +               reduce using rule 20 (compound_stmt -> action_expr .)
    -               reduce using rule 20 (compound_stmt -> action_expr .)
    COMPARE         reduce using rule 20 (compound_stmt -> action_expr .)
    NEWLINE         reduce using rule 20 (compound_stmt -> action_expr .)
    EVENT           reduce using rule 20 (compound_stmt -> action_expr .)
    CONDITIONS      reduce using rule 20 (compound_stmt -> action_expr .)
    ACTIONS         reduce using rule 20 (compound_stmt -> action_expr .)
    COMMENT         reduce using rule 20 (compound_stmt -> action_expr .)
    DEDENT          reduce using rule 20 (compound_stmt -> action_expr .)
    ,               reduce using rule 20 (compound_stmt -> action_expr .)
    )               reduce using rule 20 (compound_stmt -> action_expr .)
    ]               reduce using rule 20 (compound_stmt -> action_expr .)
    ANNOTATION      reduce using rule 20 (compound_stmt -> action_expr .)
    (               reduce using rule 20 (compound_stmt -> action_expr .)
    INTEGER         reduce using rule 20 (compound_stmt -> action_expr .)
    FLOAT           reduce using rule 20 (compound_stmt -> action_expr .)
    [               reduce using rule 20 (compound_stmt -> action_expr .)
    TIME            reduce using rule 20 (compound_stmt -> action_expr .)
    NAME            reduce using rule 20 (compound_stmt -> action_expr .)
    GLOBAL_VAR      reduce using rule 20 (compound_stmt -> action_expr .)
    PLAYER_VAR      reduce using rule 20 (compound_stmt -> action_expr .)
    NUMBER          reduce using rule 20 (compound_stmt -> action_expr .)
    VALUE           reduce using rule 20 (compound_stmt -> action_expr .)
    ACTION          reduce using rule 20 (compound_stmt -> action_expr .)


state 49

    (54) number_const -> INTEGER .

    ASSIGN          reduce using rule 54 (number_const -> INTEGER .)
    *               reduce using rule 54 (number_const -> INTEGER .)
    /               reduce using rule 54 (number_const -> INTEGER .)
    +               reduce using rule 54 (number_const -> INTEGER .)
    -               reduce using rule 54 (number_const -> INTEGER .)
    COMPARE         reduce using rule 54 (number_const -> INTEGER .)
    NEWLINE         reduce using rule 54 (number_const -> INTEGER .)
    EVENT           reduce using rule 54 (number_const -> INTEGER .)
    CONDITIONS      reduce using rule 54 (number_const -> INTEGER .)
    ACTIONS         reduce using rule 54 (number_const -> INTEGER .)
    COMMENT         reduce using rule 54 (number_const -> INTEGER .)
    DEDENT          reduce using rule 54 (number_const -> INTEGER .)
    ,               reduce using rule 54 (number_const -> INTEGER .)
    )               reduce using rule 54 (number_const -> INTEGER .)
    ]               reduce using rule 54 (number_const -> INTEGER .)
    ANNOTATION      reduce using rule 54 (number_const -> INTEGER .)
    (               reduce using rule 54 (number_const -> INTEGER .)
    INTEGER         reduce using rule 54 (number_const -> INTEGER .)
    FLOAT           reduce using rule 54 (number_const -> INTEGER .)
    [               reduce using rule 54 (number_const -> INTEGER .)
    TIME            reduce using rule 54 (number_const -> INTEGER .)
    NAME            reduce using rule 54 (number_const -> INTEGER .)
    GLOBAL_VAR      reduce using rule 54 (number_const -> INTEGER .)
    PLAYER_VAR      reduce using rule 54 (number_const -> INTEGER .)
    NUMBER          reduce using rule 54 (number_const -> INTEGER .)
    VALUE           reduce using rule 54 (number_const -> INTEGER .)
    ACTION          reduce using rule 54 (number_const -> INTEGER .)


state 50

    (55) number_const -> FLOAT .

    ASSIGN          reduce using rule 55 (number_const -> FLOAT .)
    *               reduce using rule 55 (number_const -> FLOAT .)
    /               reduce using rule 55 (number_const -> FLOAT .)
    +               reduce using rule 55 (number_const -> FLOAT .)
    -               reduce using rule 55 (number_const -> FLOAT .)
    COMPARE         reduce using rule 55 (number_const -> FLOAT .)
    NEWLINE         reduce using rule 55 (number_const -> FLOAT .)
    EVENT           reduce using rule 55 (number_const -> FLOAT .)
    CONDITIONS      reduce using rule 55 (number_const -> FLOAT .)
    ACTIONS         reduce using rule 55 (number_const -> FLOAT .)
    COMMENT         reduce using rule 55 (number_const -> FLOAT .)
    DEDENT          reduce using rule 55 (number_const -> FLOAT .)
    ,               reduce using rule 55 (number_const -> FLOAT .)
    )               reduce using rule 55 (number_const -> FLOAT .)
    ]               reduce using rule 55 (number_const -> FLOAT .)
    ANNOTATION      reduce using rule 55 (number_const -> FLOAT .)
    (               reduce using rule 55 (number_const -> FLOAT .)
    INTEGER         reduce using rule 55 (number_const -> FLOAT .)
    FLOAT           reduce using rule 55 (number_const -> FLOAT .)
    [               reduce using rule 55 (number_const -> FLOAT .)
    TIME            reduce using rule 55 (number_const -> FLOAT .)
    NAME            reduce using rule 55 (number_const -> FLOAT .)
    GLOBAL_VAR      reduce using rule 55 (number_const -> FLOAT .)
    PLAYER_VAR      reduce using rule 55 (number_const -> FLOAT .)
    NUMBER          reduce using rule 55 (number_const -> FLOAT .)
    VALUE           reduce using rule 55 (number_const -> FLOAT .)
    ACTION          reduce using rule 55 (number_const -> FLOAT .)


state 51

    (63) array -> [ . value_list ]
    (44) value_list -> . value
    (45) value_list -> . value , value_list
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ,               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

    value_list                     shift and go to state 74
    value                          shift and go to state 75
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 52

    (53) time -> TIME .

    ASSIGN          reduce using rule 53 (time -> TIME .)
    *               reduce using rule 53 (time -> TIME .)
    /               reduce using rule 53 (time -> TIME .)
    +               reduce using rule 53 (time -> TIME .)
    -               reduce using rule 53 (time -> TIME .)
    COMPARE         reduce using rule 53 (time -> TIME .)
    NEWLINE         reduce using rule 53 (time -> TIME .)
    EVENT           reduce using rule 53 (time -> TIME .)
    CONDITIONS      reduce using rule 53 (time -> TIME .)
    ACTIONS         reduce using rule 53 (time -> TIME .)
    COMMENT         reduce using rule 53 (time -> TIME .)
    DEDENT          reduce using rule 53 (time -> TIME .)
    ,               reduce using rule 53 (time -> TIME .)
    )               reduce using rule 53 (time -> TIME .)
    ]               reduce using rule 53 (time -> TIME .)
    ANNOTATION      reduce using rule 53 (time -> TIME .)
    (               reduce using rule 53 (time -> TIME .)
    INTEGER         reduce using rule 53 (time -> TIME .)
    FLOAT           reduce using rule 53 (time -> TIME .)
    [               reduce using rule 53 (time -> TIME .)
    TIME            reduce using rule 53 (time -> TIME .)
    NAME            reduce using rule 53 (time -> TIME .)
    GLOBAL_VAR      reduce using rule 53 (time -> TIME .)
    PLAYER_VAR      reduce using rule 53 (time -> TIME .)
    NUMBER          reduce using rule 53 (time -> TIME .)
    VALUE           reduce using rule 53 (time -> TIME .)
    ACTION          reduce using rule 53 (time -> TIME .)


state 53

    (59) name -> NAME .

    ASSIGN          reduce using rule 59 (name -> NAME .)
    *               reduce using rule 59 (name -> NAME .)
    /               reduce using rule 59 (name -> NAME .)
    +               reduce using rule 59 (name -> NAME .)
    -               reduce using rule 59 (name -> NAME .)
    COMPARE         reduce using rule 59 (name -> NAME .)
    NEWLINE         reduce using rule 59 (name -> NAME .)
    EVENT           reduce using rule 59 (name -> NAME .)
    CONDITIONS      reduce using rule 59 (name -> NAME .)
    ACTIONS         reduce using rule 59 (name -> NAME .)
    COMMENT         reduce using rule 59 (name -> NAME .)
    DEDENT          reduce using rule 59 (name -> NAME .)
    ,               reduce using rule 59 (name -> NAME .)
    )               reduce using rule 59 (name -> NAME .)
    ]               reduce using rule 59 (name -> NAME .)
    ANNOTATION      reduce using rule 59 (name -> NAME .)
    (               reduce using rule 59 (name -> NAME .)
    INTEGER         reduce using rule 59 (name -> NAME .)
    FLOAT           reduce using rule 59 (name -> NAME .)
    [               reduce using rule 59 (name -> NAME .)
    TIME            reduce using rule 59 (name -> NAME .)
    NAME            reduce using rule 59 (name -> NAME .)
    GLOBAL_VAR      reduce using rule 59 (name -> NAME .)
    PLAYER_VAR      reduce using rule 59 (name -> NAME .)
    NUMBER          reduce using rule 59 (name -> NAME .)
    VALUE           reduce using rule 59 (name -> NAME .)
    ACTION          reduce using rule 59 (name -> NAME .)


state 54

    (60) global_var -> GLOBAL_VAR .

    ASSIGN          reduce using rule 60 (global_var -> GLOBAL_VAR .)
    *               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    /               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    +               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    -               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 60 (global_var -> GLOBAL_VAR .)
    NEWLINE         reduce using rule 60 (global_var -> GLOBAL_VAR .)
    EVENT           reduce using rule 60 (global_var -> GLOBAL_VAR .)
    CONDITIONS      reduce using rule 60 (global_var -> GLOBAL_VAR .)
    ACTIONS         reduce using rule 60 (global_var -> GLOBAL_VAR .)
    COMMENT         reduce using rule 60 (global_var -> GLOBAL_VAR .)
    DEDENT          reduce using rule 60 (global_var -> GLOBAL_VAR .)
    ,               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    )               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    ]               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    ANNOTATION      reduce using rule 60 (global_var -> GLOBAL_VAR .)
    (               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    INTEGER         reduce using rule 60 (global_var -> GLOBAL_VAR .)
    FLOAT           reduce using rule 60 (global_var -> GLOBAL_VAR .)
    [               reduce using rule 60 (global_var -> GLOBAL_VAR .)
    TIME            reduce using rule 60 (global_var -> GLOBAL_VAR .)
    NAME            reduce using rule 60 (global_var -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 60 (global_var -> GLOBAL_VAR .)
    PLAYER_VAR      reduce using rule 60 (global_var -> GLOBAL_VAR .)
    NUMBER          reduce using rule 60 (global_var -> GLOBAL_VAR .)
    VALUE           reduce using rule 60 (global_var -> GLOBAL_VAR .)
    ACTION          reduce using rule 60 (global_var -> GLOBAL_VAR .)


state 55

    (61) player_var -> PLAYER_VAR .

    ASSIGN          reduce using rule 61 (player_var -> PLAYER_VAR .)
    *               reduce using rule 61 (player_var -> PLAYER_VAR .)
    /               reduce using rule 61 (player_var -> PLAYER_VAR .)
    +               reduce using rule 61 (player_var -> PLAYER_VAR .)
    -               reduce using rule 61 (player_var -> PLAYER_VAR .)
    COMPARE         reduce using rule 61 (player_var -> PLAYER_VAR .)
    NEWLINE         reduce using rule 61 (player_var -> PLAYER_VAR .)
    EVENT           reduce using rule 61 (player_var -> PLAYER_VAR .)
    CONDITIONS      reduce using rule 61 (player_var -> PLAYER_VAR .)
    ACTIONS         reduce using rule 61 (player_var -> PLAYER_VAR .)
    COMMENT         reduce using rule 61 (player_var -> PLAYER_VAR .)
    DEDENT          reduce using rule 61 (player_var -> PLAYER_VAR .)
    ,               reduce using rule 61 (player_var -> PLAYER_VAR .)
    )               reduce using rule 61 (player_var -> PLAYER_VAR .)
    ]               reduce using rule 61 (player_var -> PLAYER_VAR .)
    ANNOTATION      reduce using rule 61 (player_var -> PLAYER_VAR .)
    (               reduce using rule 61 (player_var -> PLAYER_VAR .)
    INTEGER         reduce using rule 61 (player_var -> PLAYER_VAR .)
    FLOAT           reduce using rule 61 (player_var -> PLAYER_VAR .)
    [               reduce using rule 61 (player_var -> PLAYER_VAR .)
    TIME            reduce using rule 61 (player_var -> PLAYER_VAR .)
    NAME            reduce using rule 61 (player_var -> PLAYER_VAR .)
    GLOBAL_VAR      reduce using rule 61 (player_var -> PLAYER_VAR .)
    PLAYER_VAR      reduce using rule 61 (player_var -> PLAYER_VAR .)
    NUMBER          reduce using rule 61 (player_var -> PLAYER_VAR .)
    VALUE           reduce using rule 61 (player_var -> PLAYER_VAR .)
    ACTION          reduce using rule 61 (player_var -> PLAYER_VAR .)


state 56

    (50) number_expr -> NUMBER . after_expr
    (41) after_expr -> . ( value_list )
    (42) after_expr -> . block
    (43) after_expr -> . NEWLINE
    (21) block -> . NEWLINE INDENT statements DEDENT
    (22) block -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 77
    NEWLINE         shift and go to state 79
    ANNOTATION      shift and go to state 28
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! NEWLINE         [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    after_expr                     shift and go to state 76
    block                          shift and go to state 78
    simple_stmt                    shift and go to state 24
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 57

    (51) value_expr -> VALUE . after_expr
    (41) after_expr -> . ( value_list )
    (42) after_expr -> . block
    (43) after_expr -> . NEWLINE
    (21) block -> . NEWLINE INDENT statements DEDENT
    (22) block -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 77
    NEWLINE         shift and go to state 79
    ANNOTATION      shift and go to state 28
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! NEWLINE         [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    after_expr                     shift and go to state 80
    block                          shift and go to state 78
    simple_stmt                    shift and go to state 24
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 58

    (52) action_expr -> ACTION . after_expr
    (41) after_expr -> . ( value_list )
    (42) after_expr -> . block
    (43) after_expr -> . NEWLINE
    (21) block -> . NEWLINE INDENT statements DEDENT
    (22) block -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 77
    NEWLINE         shift and go to state 79
    ANNOTATION      shift and go to state 28
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! NEWLINE         [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    after_expr                     shift and go to state 81
    block                          shift and go to state 78
    simple_stmt                    shift and go to state 24
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 59

    (11) conditions -> CONDITIONS block .

    NEWLINE         reduce using rule 11 (conditions -> CONDITIONS block .)
    EVENT           reduce using rule 11 (conditions -> CONDITIONS block .)
    CONDITIONS      reduce using rule 11 (conditions -> CONDITIONS block .)
    ACTIONS         reduce using rule 11 (conditions -> CONDITIONS block .)
    COMMENT         reduce using rule 11 (conditions -> CONDITIONS block .)
    DEDENT          reduce using rule 11 (conditions -> CONDITIONS block .)


state 60

    (12) actions -> ACTIONS block .

    NEWLINE         reduce using rule 12 (actions -> ACTIONS block .)
    EVENT           reduce using rule 12 (actions -> ACTIONS block .)
    CONDITIONS      reduce using rule 12 (actions -> ACTIONS block .)
    ACTIONS         reduce using rule 12 (actions -> ACTIONS block .)
    COMMENT         reduce using rule 12 (actions -> ACTIONS block .)
    DEDENT          reduce using rule 12 (actions -> ACTIONS block .)


state 61

    (21) block -> NEWLINE INDENT . statements DEDENT
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statement -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    ANNOTATION      shift and go to state 28
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    NEWLINE         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    statements                     shift and go to state 82
    statement                      shift and go to state 83
    simple_stmt                    shift and go to state 84
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 62

    (16) simple_stmt -> expr NEWLINE .

    NEWLINE         reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    EVENT           reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    CONDITIONS      reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    ACTIONS         reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    COMMENT         reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    DEDENT          reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    ASSIGN          reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    *               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    /               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    +               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    -               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    COMPARE         reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    ,               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    )               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    ]               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    ANNOTATION      reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    (               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    INTEGER         reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    FLOAT           reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    [               reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    TIME            reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    NAME            reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    GLOBAL_VAR      reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    PLAYER_VAR      reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    NUMBER          reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    VALUE           reduce using rule 16 (simple_stmt -> expr NEWLINE .)
    ACTION          reduce using rule 16 (simple_stmt -> expr NEWLINE .)


state 63

    (48) compare -> compare COMPARE . arith_expr
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    arith_expr                     shift and go to state 85
    term                           shift and go to state 32
    value                          shift and go to state 73
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 64

    (25) expr -> ANNOTATION expr .

    NEWLINE         reduce using rule 25 (expr -> ANNOTATION expr .)
    EVENT           reduce using rule 25 (expr -> ANNOTATION expr .)
    CONDITIONS      reduce using rule 25 (expr -> ANNOTATION expr .)
    ACTIONS         reduce using rule 25 (expr -> ANNOTATION expr .)
    COMMENT         reduce using rule 25 (expr -> ANNOTATION expr .)
    DEDENT          reduce using rule 25 (expr -> ANNOTATION expr .)
    ASSIGN          reduce using rule 25 (expr -> ANNOTATION expr .)
    *               reduce using rule 25 (expr -> ANNOTATION expr .)
    /               reduce using rule 25 (expr -> ANNOTATION expr .)
    +               reduce using rule 25 (expr -> ANNOTATION expr .)
    -               reduce using rule 25 (expr -> ANNOTATION expr .)
    COMPARE         reduce using rule 25 (expr -> ANNOTATION expr .)
    ,               reduce using rule 25 (expr -> ANNOTATION expr .)
    )               reduce using rule 25 (expr -> ANNOTATION expr .)
    ]               reduce using rule 25 (expr -> ANNOTATION expr .)
    ANNOTATION      reduce using rule 25 (expr -> ANNOTATION expr .)
    (               reduce using rule 25 (expr -> ANNOTATION expr .)
    INTEGER         reduce using rule 25 (expr -> ANNOTATION expr .)
    FLOAT           reduce using rule 25 (expr -> ANNOTATION expr .)
    [               reduce using rule 25 (expr -> ANNOTATION expr .)
    TIME            reduce using rule 25 (expr -> ANNOTATION expr .)
    NAME            reduce using rule 25 (expr -> ANNOTATION expr .)
    GLOBAL_VAR      reduce using rule 25 (expr -> ANNOTATION expr .)
    PLAYER_VAR      reduce using rule 25 (expr -> ANNOTATION expr .)
    NUMBER          reduce using rule 25 (expr -> ANNOTATION expr .)
    VALUE           reduce using rule 25 (expr -> ANNOTATION expr .)
    ACTION          reduce using rule 25 (expr -> ANNOTATION expr .)


state 65

    (27) arith_expr -> arith_expr + . arith_expr
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    arith_expr                     shift and go to state 86
    term                           shift and go to state 32
    value                          shift and go to state 73
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 66

    (28) arith_expr -> arith_expr - . arith_expr
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    arith_expr                     shift and go to state 87
    term                           shift and go to state 32
    value                          shift and go to state 73
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 67

    (62) vector -> COMPARE value . , value , value COMPARE

    ,               shift and go to state 88


state 68

    (49) assign -> value ASSIGN . compare
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    value                          shift and go to state 73
    compare                        shift and go to state 89
    arith_expr                     shift and go to state 29
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 69

    (30) term -> term * . term
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    term                           shift and go to state 90
    value                          shift and go to state 73
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 70

    (31) term -> term / . term
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NEWLINE         reduce using rule 65 (empty -> .)
    EVENT           reduce using rule 65 (empty -> .)
    CONDITIONS      reduce using rule 65 (empty -> .)
    ACTIONS         reduce using rule 65 (empty -> .)
    DEDENT          reduce using rule 65 (empty -> .)
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    ANNOTATION      reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    term                           shift and go to state 91
    value                          shift and go to state 73
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 71

    (46) unary -> - value .

    ASSIGN          reduce using rule 46 (unary -> - value .)
    *               reduce using rule 46 (unary -> - value .)
    /               reduce using rule 46 (unary -> - value .)
    +               reduce using rule 46 (unary -> - value .)
    -               reduce using rule 46 (unary -> - value .)
    COMPARE         reduce using rule 46 (unary -> - value .)
    NEWLINE         reduce using rule 46 (unary -> - value .)
    EVENT           reduce using rule 46 (unary -> - value .)
    CONDITIONS      reduce using rule 46 (unary -> - value .)
    ACTIONS         reduce using rule 46 (unary -> - value .)
    COMMENT         reduce using rule 46 (unary -> - value .)
    DEDENT          reduce using rule 46 (unary -> - value .)
    ,               reduce using rule 46 (unary -> - value .)
    )               reduce using rule 46 (unary -> - value .)
    ]               reduce using rule 46 (unary -> - value .)
    ANNOTATION      reduce using rule 46 (unary -> - value .)
    (               reduce using rule 46 (unary -> - value .)
    INTEGER         reduce using rule 46 (unary -> - value .)
    FLOAT           reduce using rule 46 (unary -> - value .)
    [               reduce using rule 46 (unary -> - value .)
    TIME            reduce using rule 46 (unary -> - value .)
    NAME            reduce using rule 46 (unary -> - value .)
    GLOBAL_VAR      reduce using rule 46 (unary -> - value .)
    PLAYER_VAR      reduce using rule 46 (unary -> - value .)
    NUMBER          reduce using rule 46 (unary -> - value .)
    VALUE           reduce using rule 46 (unary -> - value .)
    ACTION          reduce using rule 46 (unary -> - value .)


state 72

    (39) value -> ( compare . )
    (48) compare -> compare . COMPARE arith_expr

    )               shift and go to state 92
    COMPARE         shift and go to state 63


state 73

    (29) term -> value .

    *               reduce using rule 29 (term -> value .)
    /               reduce using rule 29 (term -> value .)
    +               reduce using rule 29 (term -> value .)
    -               reduce using rule 29 (term -> value .)
    )               reduce using rule 29 (term -> value .)
    COMPARE         reduce using rule 29 (term -> value .)
    NEWLINE         reduce using rule 29 (term -> value .)
    EVENT           reduce using rule 29 (term -> value .)
    CONDITIONS      reduce using rule 29 (term -> value .)
    ACTIONS         reduce using rule 29 (term -> value .)
    COMMENT         reduce using rule 29 (term -> value .)
    DEDENT          reduce using rule 29 (term -> value .)
    ASSIGN          reduce using rule 29 (term -> value .)
    ,               reduce using rule 29 (term -> value .)
    ]               reduce using rule 29 (term -> value .)
    ANNOTATION      reduce using rule 29 (term -> value .)
    (               reduce using rule 29 (term -> value .)
    INTEGER         reduce using rule 29 (term -> value .)
    FLOAT           reduce using rule 29 (term -> value .)
    [               reduce using rule 29 (term -> value .)
    TIME            reduce using rule 29 (term -> value .)
    NAME            reduce using rule 29 (term -> value .)
    GLOBAL_VAR      reduce using rule 29 (term -> value .)
    PLAYER_VAR      reduce using rule 29 (term -> value .)
    NUMBER          reduce using rule 29 (term -> value .)
    VALUE           reduce using rule 29 (term -> value .)
    ACTION          reduce using rule 29 (term -> value .)


state 74

    (63) array -> [ value_list . ]

    ]               shift and go to state 93


state 75

    (44) value_list -> value .
    (45) value_list -> value . , value_list

    ]               reduce using rule 44 (value_list -> value .)
    )               reduce using rule 44 (value_list -> value .)
    ,               shift and go to state 94


state 76

    (50) number_expr -> NUMBER after_expr .

    ASSIGN          reduce using rule 50 (number_expr -> NUMBER after_expr .)
    *               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    /               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    +               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    -               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    COMPARE         reduce using rule 50 (number_expr -> NUMBER after_expr .)
    NEWLINE         reduce using rule 50 (number_expr -> NUMBER after_expr .)
    EVENT           reduce using rule 50 (number_expr -> NUMBER after_expr .)
    CONDITIONS      reduce using rule 50 (number_expr -> NUMBER after_expr .)
    ACTIONS         reduce using rule 50 (number_expr -> NUMBER after_expr .)
    COMMENT         reduce using rule 50 (number_expr -> NUMBER after_expr .)
    DEDENT          reduce using rule 50 (number_expr -> NUMBER after_expr .)
    ,               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    )               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    ]               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    ANNOTATION      reduce using rule 50 (number_expr -> NUMBER after_expr .)
    (               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    INTEGER         reduce using rule 50 (number_expr -> NUMBER after_expr .)
    FLOAT           reduce using rule 50 (number_expr -> NUMBER after_expr .)
    [               reduce using rule 50 (number_expr -> NUMBER after_expr .)
    TIME            reduce using rule 50 (number_expr -> NUMBER after_expr .)
    NAME            reduce using rule 50 (number_expr -> NUMBER after_expr .)
    GLOBAL_VAR      reduce using rule 50 (number_expr -> NUMBER after_expr .)
    PLAYER_VAR      reduce using rule 50 (number_expr -> NUMBER after_expr .)
    NUMBER          reduce using rule 50 (number_expr -> NUMBER after_expr .)
    VALUE           reduce using rule 50 (number_expr -> NUMBER after_expr .)
    ACTION          reduce using rule 50 (number_expr -> NUMBER after_expr .)


state 77

    (41) after_expr -> ( . value_list )
    (39) value -> ( . compare )
    (44) value_list -> . value
    (45) value_list -> . value , value_list
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ,               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]

    value_list                     shift and go to state 95
    compare                        shift and go to state 72
    value                          shift and go to state 96
    arith_expr                     shift and go to state 29
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    term                           shift and go to state 32
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 78

    (42) after_expr -> block .

    NEWLINE         reduce using rule 42 (after_expr -> block .)
    EVENT           reduce using rule 42 (after_expr -> block .)
    CONDITIONS      reduce using rule 42 (after_expr -> block .)
    ACTIONS         reduce using rule 42 (after_expr -> block .)
    COMMENT         reduce using rule 42 (after_expr -> block .)
    DEDENT          reduce using rule 42 (after_expr -> block .)
    ASSIGN          reduce using rule 42 (after_expr -> block .)
    *               reduce using rule 42 (after_expr -> block .)
    /               reduce using rule 42 (after_expr -> block .)
    +               reduce using rule 42 (after_expr -> block .)
    -               reduce using rule 42 (after_expr -> block .)
    COMPARE         reduce using rule 42 (after_expr -> block .)
    ,               reduce using rule 42 (after_expr -> block .)
    )               reduce using rule 42 (after_expr -> block .)
    ]               reduce using rule 42 (after_expr -> block .)
    ANNOTATION      reduce using rule 42 (after_expr -> block .)
    (               reduce using rule 42 (after_expr -> block .)
    INTEGER         reduce using rule 42 (after_expr -> block .)
    FLOAT           reduce using rule 42 (after_expr -> block .)
    [               reduce using rule 42 (after_expr -> block .)
    TIME            reduce using rule 42 (after_expr -> block .)
    NAME            reduce using rule 42 (after_expr -> block .)
    GLOBAL_VAR      reduce using rule 42 (after_expr -> block .)
    PLAYER_VAR      reduce using rule 42 (after_expr -> block .)
    NUMBER          reduce using rule 42 (after_expr -> block .)
    VALUE           reduce using rule 42 (after_expr -> block .)
    ACTION          reduce using rule 42 (after_expr -> block .)


state 79

    (43) after_expr -> NEWLINE .
    (21) block -> NEWLINE . INDENT statements DEDENT

    NEWLINE         reduce using rule 43 (after_expr -> NEWLINE .)
    EVENT           reduce using rule 43 (after_expr -> NEWLINE .)
    CONDITIONS      reduce using rule 43 (after_expr -> NEWLINE .)
    ACTIONS         reduce using rule 43 (after_expr -> NEWLINE .)
    COMMENT         reduce using rule 43 (after_expr -> NEWLINE .)
    DEDENT          reduce using rule 43 (after_expr -> NEWLINE .)
    ASSIGN          reduce using rule 43 (after_expr -> NEWLINE .)
    *               reduce using rule 43 (after_expr -> NEWLINE .)
    /               reduce using rule 43 (after_expr -> NEWLINE .)
    +               reduce using rule 43 (after_expr -> NEWLINE .)
    -               reduce using rule 43 (after_expr -> NEWLINE .)
    COMPARE         reduce using rule 43 (after_expr -> NEWLINE .)
    ,               reduce using rule 43 (after_expr -> NEWLINE .)
    )               reduce using rule 43 (after_expr -> NEWLINE .)
    ]               reduce using rule 43 (after_expr -> NEWLINE .)
    ANNOTATION      reduce using rule 43 (after_expr -> NEWLINE .)
    (               reduce using rule 43 (after_expr -> NEWLINE .)
    INTEGER         reduce using rule 43 (after_expr -> NEWLINE .)
    FLOAT           reduce using rule 43 (after_expr -> NEWLINE .)
    [               reduce using rule 43 (after_expr -> NEWLINE .)
    TIME            reduce using rule 43 (after_expr -> NEWLINE .)
    NAME            reduce using rule 43 (after_expr -> NEWLINE .)
    GLOBAL_VAR      reduce using rule 43 (after_expr -> NEWLINE .)
    PLAYER_VAR      reduce using rule 43 (after_expr -> NEWLINE .)
    NUMBER          reduce using rule 43 (after_expr -> NEWLINE .)
    VALUE           reduce using rule 43 (after_expr -> NEWLINE .)
    ACTION          reduce using rule 43 (after_expr -> NEWLINE .)
    INDENT          shift and go to state 61


state 80

    (51) value_expr -> VALUE after_expr .

    ASSIGN          reduce using rule 51 (value_expr -> VALUE after_expr .)
    *               reduce using rule 51 (value_expr -> VALUE after_expr .)
    /               reduce using rule 51 (value_expr -> VALUE after_expr .)
    +               reduce using rule 51 (value_expr -> VALUE after_expr .)
    -               reduce using rule 51 (value_expr -> VALUE after_expr .)
    COMPARE         reduce using rule 51 (value_expr -> VALUE after_expr .)
    NEWLINE         reduce using rule 51 (value_expr -> VALUE after_expr .)
    EVENT           reduce using rule 51 (value_expr -> VALUE after_expr .)
    CONDITIONS      reduce using rule 51 (value_expr -> VALUE after_expr .)
    ACTIONS         reduce using rule 51 (value_expr -> VALUE after_expr .)
    COMMENT         reduce using rule 51 (value_expr -> VALUE after_expr .)
    DEDENT          reduce using rule 51 (value_expr -> VALUE after_expr .)
    ,               reduce using rule 51 (value_expr -> VALUE after_expr .)
    )               reduce using rule 51 (value_expr -> VALUE after_expr .)
    ]               reduce using rule 51 (value_expr -> VALUE after_expr .)
    ANNOTATION      reduce using rule 51 (value_expr -> VALUE after_expr .)
    (               reduce using rule 51 (value_expr -> VALUE after_expr .)
    INTEGER         reduce using rule 51 (value_expr -> VALUE after_expr .)
    FLOAT           reduce using rule 51 (value_expr -> VALUE after_expr .)
    [               reduce using rule 51 (value_expr -> VALUE after_expr .)
    TIME            reduce using rule 51 (value_expr -> VALUE after_expr .)
    NAME            reduce using rule 51 (value_expr -> VALUE after_expr .)
    GLOBAL_VAR      reduce using rule 51 (value_expr -> VALUE after_expr .)
    PLAYER_VAR      reduce using rule 51 (value_expr -> VALUE after_expr .)
    NUMBER          reduce using rule 51 (value_expr -> VALUE after_expr .)
    VALUE           reduce using rule 51 (value_expr -> VALUE after_expr .)
    ACTION          reduce using rule 51 (value_expr -> VALUE after_expr .)


state 81

    (52) action_expr -> ACTION after_expr .

    ASSIGN          reduce using rule 52 (action_expr -> ACTION after_expr .)
    *               reduce using rule 52 (action_expr -> ACTION after_expr .)
    /               reduce using rule 52 (action_expr -> ACTION after_expr .)
    +               reduce using rule 52 (action_expr -> ACTION after_expr .)
    -               reduce using rule 52 (action_expr -> ACTION after_expr .)
    COMPARE         reduce using rule 52 (action_expr -> ACTION after_expr .)
    NEWLINE         reduce using rule 52 (action_expr -> ACTION after_expr .)
    EVENT           reduce using rule 52 (action_expr -> ACTION after_expr .)
    CONDITIONS      reduce using rule 52 (action_expr -> ACTION after_expr .)
    ACTIONS         reduce using rule 52 (action_expr -> ACTION after_expr .)
    COMMENT         reduce using rule 52 (action_expr -> ACTION after_expr .)
    DEDENT          reduce using rule 52 (action_expr -> ACTION after_expr .)
    ,               reduce using rule 52 (action_expr -> ACTION after_expr .)
    )               reduce using rule 52 (action_expr -> ACTION after_expr .)
    ]               reduce using rule 52 (action_expr -> ACTION after_expr .)
    ANNOTATION      reduce using rule 52 (action_expr -> ACTION after_expr .)
    (               reduce using rule 52 (action_expr -> ACTION after_expr .)
    INTEGER         reduce using rule 52 (action_expr -> ACTION after_expr .)
    FLOAT           reduce using rule 52 (action_expr -> ACTION after_expr .)
    [               reduce using rule 52 (action_expr -> ACTION after_expr .)
    TIME            reduce using rule 52 (action_expr -> ACTION after_expr .)
    NAME            reduce using rule 52 (action_expr -> ACTION after_expr .)
    GLOBAL_VAR      reduce using rule 52 (action_expr -> ACTION after_expr .)
    PLAYER_VAR      reduce using rule 52 (action_expr -> ACTION after_expr .)
    NUMBER          reduce using rule 52 (action_expr -> ACTION after_expr .)
    VALUE           reduce using rule 52 (action_expr -> ACTION after_expr .)
    ACTION          reduce using rule 52 (action_expr -> ACTION after_expr .)


state 82

    (21) block -> NEWLINE INDENT statements . DEDENT
    (13) statements -> statements . statement
    (15) statement -> . simple_stmt
    (16) simple_stmt -> . expr NEWLINE
    (17) simple_stmt -> . expr
    (23) expr -> . compare
    (24) expr -> . assign
    (25) expr -> . ANNOTATION expr
    (47) compare -> . arith_expr
    (48) compare -> . compare COMPARE arith_expr
    (49) assign -> . value ASSIGN compare
    (26) arith_expr -> . term
    (27) arith_expr -> . arith_expr + arith_expr
    (28) arith_expr -> . arith_expr - arith_expr
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (29) term -> . value
    (30) term -> . term * term
    (31) term -> . term / term
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for DEDENT resolved as shift
  ! shift/reduce conflict for ANNOTATION resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for TIME resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
  ! shift/reduce conflict for ACTION resolved as shift
    DEDENT          shift and go to state 97
    ANNOTATION      shift and go to state 28
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ASSIGN          reduce using rule 65 (empty -> .)
    *               reduce using rule 65 (empty -> .)
    /               reduce using rule 65 (empty -> .)
    +               reduce using rule 65 (empty -> .)
    NEWLINE         reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! -               [ reduce using rule 65 (empty -> .) ]
  ! COMPARE         [ reduce using rule 65 (empty -> .) ]
  ! DEDENT          [ reduce using rule 65 (empty -> .) ]
  ! ANNOTATION      [ reduce using rule 65 (empty -> .) ]
  ! (               [ reduce using rule 65 (empty -> .) ]
  ! INTEGER         [ reduce using rule 65 (empty -> .) ]
  ! FLOAT           [ reduce using rule 65 (empty -> .) ]
  ! [               [ reduce using rule 65 (empty -> .) ]
  ! TIME            [ reduce using rule 65 (empty -> .) ]
  ! COMMENT         [ reduce using rule 65 (empty -> .) ]
  ! NAME            [ reduce using rule 65 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 65 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 65 (empty -> .) ]
  ! NUMBER          [ reduce using rule 65 (empty -> .) ]
  ! VALUE           [ reduce using rule 65 (empty -> .) ]
  ! ACTION          [ reduce using rule 65 (empty -> .) ]

    statement                      shift and go to state 98
    simple_stmt                    shift and go to state 84
    expr                           shift and go to state 25
    compare                        shift and go to state 26
    assign                         shift and go to state 27
    arith_expr                     shift and go to state 29
    value                          shift and go to state 31
    term                           shift and go to state 32
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 83

    (14) statements -> statement .

    DEDENT          reduce using rule 14 (statements -> statement .)
    ANNOTATION      reduce using rule 14 (statements -> statement .)
    (               reduce using rule 14 (statements -> statement .)
    INTEGER         reduce using rule 14 (statements -> statement .)
    FLOAT           reduce using rule 14 (statements -> statement .)
    COMPARE         reduce using rule 14 (statements -> statement .)
    -               reduce using rule 14 (statements -> statement .)
    [               reduce using rule 14 (statements -> statement .)
    TIME            reduce using rule 14 (statements -> statement .)
    COMMENT         reduce using rule 14 (statements -> statement .)
    NAME            reduce using rule 14 (statements -> statement .)
    GLOBAL_VAR      reduce using rule 14 (statements -> statement .)
    PLAYER_VAR      reduce using rule 14 (statements -> statement .)
    NUMBER          reduce using rule 14 (statements -> statement .)
    VALUE           reduce using rule 14 (statements -> statement .)
    ACTION          reduce using rule 14 (statements -> statement .)
    NEWLINE         reduce using rule 14 (statements -> statement .)
    +               reduce using rule 14 (statements -> statement .)
    ASSIGN          reduce using rule 14 (statements -> statement .)
    *               reduce using rule 14 (statements -> statement .)
    /               reduce using rule 14 (statements -> statement .)


state 84

    (15) statement -> simple_stmt .

    DEDENT          reduce using rule 15 (statement -> simple_stmt .)
    ANNOTATION      reduce using rule 15 (statement -> simple_stmt .)
    (               reduce using rule 15 (statement -> simple_stmt .)
    INTEGER         reduce using rule 15 (statement -> simple_stmt .)
    FLOAT           reduce using rule 15 (statement -> simple_stmt .)
    COMPARE         reduce using rule 15 (statement -> simple_stmt .)
    -               reduce using rule 15 (statement -> simple_stmt .)
    [               reduce using rule 15 (statement -> simple_stmt .)
    TIME            reduce using rule 15 (statement -> simple_stmt .)
    COMMENT         reduce using rule 15 (statement -> simple_stmt .)
    NAME            reduce using rule 15 (statement -> simple_stmt .)
    GLOBAL_VAR      reduce using rule 15 (statement -> simple_stmt .)
    PLAYER_VAR      reduce using rule 15 (statement -> simple_stmt .)
    NUMBER          reduce using rule 15 (statement -> simple_stmt .)
    VALUE           reduce using rule 15 (statement -> simple_stmt .)
    ACTION          reduce using rule 15 (statement -> simple_stmt .)
    NEWLINE         reduce using rule 15 (statement -> simple_stmt .)
    +               reduce using rule 15 (statement -> simple_stmt .)
    ASSIGN          reduce using rule 15 (statement -> simple_stmt .)
    *               reduce using rule 15 (statement -> simple_stmt .)
    /               reduce using rule 15 (statement -> simple_stmt .)


state 85

    (48) compare -> compare COMPARE arith_expr .
    (27) arith_expr -> arith_expr . + arith_expr
    (28) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    COMPARE         reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    NEWLINE         reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    EVENT           reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    CONDITIONS      reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    ACTIONS         reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    COMMENT         reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    DEDENT          reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    ASSIGN          reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    *               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    /               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    ,               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    )               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    ]               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    ANNOTATION      reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    (               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    INTEGER         reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    FLOAT           reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    [               reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    TIME            reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    NAME            reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    GLOBAL_VAR      reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    PLAYER_VAR      reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    NUMBER          reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    VALUE           reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    ACTION          reduce using rule 48 (compare -> compare COMPARE arith_expr .)
    +               shift and go to state 65
    -               shift and go to state 66

  ! +               [ reduce using rule 48 (compare -> compare COMPARE arith_expr .) ]
  ! -               [ reduce using rule 48 (compare -> compare COMPARE arith_expr .) ]


state 86

    (27) arith_expr -> arith_expr + arith_expr .
    (27) arith_expr -> arith_expr . + arith_expr
    (28) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    COMPARE         reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    NEWLINE         reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    EVENT           reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    CONDITIONS      reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    ACTIONS         reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    COMMENT         reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    DEDENT          reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    ASSIGN          reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    *               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    /               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    ,               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    )               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    ]               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    ANNOTATION      reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    (               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    INTEGER         reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    FLOAT           reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    [               reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    TIME            reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    NAME            reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    GLOBAL_VAR      reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    PLAYER_VAR      reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    NUMBER          reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    VALUE           reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    ACTION          reduce using rule 27 (arith_expr -> arith_expr + arith_expr .)
    +               shift and go to state 65
    -               shift and go to state 66

  ! +               [ reduce using rule 27 (arith_expr -> arith_expr + arith_expr .) ]
  ! -               [ reduce using rule 27 (arith_expr -> arith_expr + arith_expr .) ]


state 87

    (28) arith_expr -> arith_expr - arith_expr .
    (27) arith_expr -> arith_expr . + arith_expr
    (28) arith_expr -> arith_expr . - arith_expr

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    COMPARE         reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    NEWLINE         reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    EVENT           reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    CONDITIONS      reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    ACTIONS         reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    COMMENT         reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    DEDENT          reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    ASSIGN          reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    *               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    /               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    ,               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    )               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    ]               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    ANNOTATION      reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    (               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    INTEGER         reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    FLOAT           reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    [               reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    TIME            reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    NAME            reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    GLOBAL_VAR      reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    PLAYER_VAR      reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    NUMBER          reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    VALUE           reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    ACTION          reduce using rule 28 (arith_expr -> arith_expr - arith_expr .)
    +               shift and go to state 65
    -               shift and go to state 66

  ! +               [ reduce using rule 28 (arith_expr -> arith_expr - arith_expr .) ]
  ! -               [ reduce using rule 28 (arith_expr -> arith_expr - arith_expr .) ]


state 88

    (62) vector -> COMPARE value , . value , value COMPARE
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ,               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

    value                          shift and go to state 99
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 89

    (49) assign -> value ASSIGN compare .
    (48) compare -> compare . COMPARE arith_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    NEWLINE         reduce using rule 49 (assign -> value ASSIGN compare .)
    EVENT           reduce using rule 49 (assign -> value ASSIGN compare .)
    CONDITIONS      reduce using rule 49 (assign -> value ASSIGN compare .)
    ACTIONS         reduce using rule 49 (assign -> value ASSIGN compare .)
    COMMENT         reduce using rule 49 (assign -> value ASSIGN compare .)
    DEDENT          reduce using rule 49 (assign -> value ASSIGN compare .)
    ASSIGN          reduce using rule 49 (assign -> value ASSIGN compare .)
    *               reduce using rule 49 (assign -> value ASSIGN compare .)
    /               reduce using rule 49 (assign -> value ASSIGN compare .)
    +               reduce using rule 49 (assign -> value ASSIGN compare .)
    -               reduce using rule 49 (assign -> value ASSIGN compare .)
    ,               reduce using rule 49 (assign -> value ASSIGN compare .)
    )               reduce using rule 49 (assign -> value ASSIGN compare .)
    ]               reduce using rule 49 (assign -> value ASSIGN compare .)
    ANNOTATION      reduce using rule 49 (assign -> value ASSIGN compare .)
    (               reduce using rule 49 (assign -> value ASSIGN compare .)
    INTEGER         reduce using rule 49 (assign -> value ASSIGN compare .)
    FLOAT           reduce using rule 49 (assign -> value ASSIGN compare .)
    [               reduce using rule 49 (assign -> value ASSIGN compare .)
    TIME            reduce using rule 49 (assign -> value ASSIGN compare .)
    NAME            reduce using rule 49 (assign -> value ASSIGN compare .)
    GLOBAL_VAR      reduce using rule 49 (assign -> value ASSIGN compare .)
    PLAYER_VAR      reduce using rule 49 (assign -> value ASSIGN compare .)
    NUMBER          reduce using rule 49 (assign -> value ASSIGN compare .)
    VALUE           reduce using rule 49 (assign -> value ASSIGN compare .)
    ACTION          reduce using rule 49 (assign -> value ASSIGN compare .)
    COMPARE         shift and go to state 63

  ! COMPARE         [ reduce using rule 49 (assign -> value ASSIGN compare .) ]


state 90

    (30) term -> term * term .
    (30) term -> term . * term
    (31) term -> term . / term

  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    +               reduce using rule 30 (term -> term * term .)
    -               reduce using rule 30 (term -> term * term .)
    COMPARE         reduce using rule 30 (term -> term * term .)
    NEWLINE         reduce using rule 30 (term -> term * term .)
    EVENT           reduce using rule 30 (term -> term * term .)
    CONDITIONS      reduce using rule 30 (term -> term * term .)
    ACTIONS         reduce using rule 30 (term -> term * term .)
    COMMENT         reduce using rule 30 (term -> term * term .)
    DEDENT          reduce using rule 30 (term -> term * term .)
    ASSIGN          reduce using rule 30 (term -> term * term .)
    ,               reduce using rule 30 (term -> term * term .)
    )               reduce using rule 30 (term -> term * term .)
    ]               reduce using rule 30 (term -> term * term .)
    ANNOTATION      reduce using rule 30 (term -> term * term .)
    (               reduce using rule 30 (term -> term * term .)
    INTEGER         reduce using rule 30 (term -> term * term .)
    FLOAT           reduce using rule 30 (term -> term * term .)
    [               reduce using rule 30 (term -> term * term .)
    TIME            reduce using rule 30 (term -> term * term .)
    NAME            reduce using rule 30 (term -> term * term .)
    GLOBAL_VAR      reduce using rule 30 (term -> term * term .)
    PLAYER_VAR      reduce using rule 30 (term -> term * term .)
    NUMBER          reduce using rule 30 (term -> term * term .)
    VALUE           reduce using rule 30 (term -> term * term .)
    ACTION          reduce using rule 30 (term -> term * term .)
    *               shift and go to state 69
    /               shift and go to state 70

  ! *               [ reduce using rule 30 (term -> term * term .) ]
  ! /               [ reduce using rule 30 (term -> term * term .) ]


state 91

    (31) term -> term / term .
    (30) term -> term . * term
    (31) term -> term . / term

  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    +               reduce using rule 31 (term -> term / term .)
    -               reduce using rule 31 (term -> term / term .)
    COMPARE         reduce using rule 31 (term -> term / term .)
    NEWLINE         reduce using rule 31 (term -> term / term .)
    EVENT           reduce using rule 31 (term -> term / term .)
    CONDITIONS      reduce using rule 31 (term -> term / term .)
    ACTIONS         reduce using rule 31 (term -> term / term .)
    COMMENT         reduce using rule 31 (term -> term / term .)
    DEDENT          reduce using rule 31 (term -> term / term .)
    ASSIGN          reduce using rule 31 (term -> term / term .)
    ,               reduce using rule 31 (term -> term / term .)
    )               reduce using rule 31 (term -> term / term .)
    ]               reduce using rule 31 (term -> term / term .)
    ANNOTATION      reduce using rule 31 (term -> term / term .)
    (               reduce using rule 31 (term -> term / term .)
    INTEGER         reduce using rule 31 (term -> term / term .)
    FLOAT           reduce using rule 31 (term -> term / term .)
    [               reduce using rule 31 (term -> term / term .)
    TIME            reduce using rule 31 (term -> term / term .)
    NAME            reduce using rule 31 (term -> term / term .)
    GLOBAL_VAR      reduce using rule 31 (term -> term / term .)
    PLAYER_VAR      reduce using rule 31 (term -> term / term .)
    NUMBER          reduce using rule 31 (term -> term / term .)
    VALUE           reduce using rule 31 (term -> term / term .)
    ACTION          reduce using rule 31 (term -> term / term .)
    *               shift and go to state 69
    /               shift and go to state 70

  ! *               [ reduce using rule 31 (term -> term / term .) ]
  ! /               [ reduce using rule 31 (term -> term / term .) ]


state 92

    (39) value -> ( compare ) .

    ASSIGN          reduce using rule 39 (value -> ( compare ) .)
    *               reduce using rule 39 (value -> ( compare ) .)
    /               reduce using rule 39 (value -> ( compare ) .)
    +               reduce using rule 39 (value -> ( compare ) .)
    -               reduce using rule 39 (value -> ( compare ) .)
    COMPARE         reduce using rule 39 (value -> ( compare ) .)
    NEWLINE         reduce using rule 39 (value -> ( compare ) .)
    EVENT           reduce using rule 39 (value -> ( compare ) .)
    CONDITIONS      reduce using rule 39 (value -> ( compare ) .)
    ACTIONS         reduce using rule 39 (value -> ( compare ) .)
    COMMENT         reduce using rule 39 (value -> ( compare ) .)
    DEDENT          reduce using rule 39 (value -> ( compare ) .)
    ,               reduce using rule 39 (value -> ( compare ) .)
    )               reduce using rule 39 (value -> ( compare ) .)
    ]               reduce using rule 39 (value -> ( compare ) .)
    ANNOTATION      reduce using rule 39 (value -> ( compare ) .)
    (               reduce using rule 39 (value -> ( compare ) .)
    INTEGER         reduce using rule 39 (value -> ( compare ) .)
    FLOAT           reduce using rule 39 (value -> ( compare ) .)
    [               reduce using rule 39 (value -> ( compare ) .)
    TIME            reduce using rule 39 (value -> ( compare ) .)
    NAME            reduce using rule 39 (value -> ( compare ) .)
    GLOBAL_VAR      reduce using rule 39 (value -> ( compare ) .)
    PLAYER_VAR      reduce using rule 39 (value -> ( compare ) .)
    NUMBER          reduce using rule 39 (value -> ( compare ) .)
    VALUE           reduce using rule 39 (value -> ( compare ) .)
    ACTION          reduce using rule 39 (value -> ( compare ) .)


state 93

    (63) array -> [ value_list ] .

    ASSIGN          reduce using rule 63 (array -> [ value_list ] .)
    *               reduce using rule 63 (array -> [ value_list ] .)
    /               reduce using rule 63 (array -> [ value_list ] .)
    +               reduce using rule 63 (array -> [ value_list ] .)
    -               reduce using rule 63 (array -> [ value_list ] .)
    COMPARE         reduce using rule 63 (array -> [ value_list ] .)
    NEWLINE         reduce using rule 63 (array -> [ value_list ] .)
    EVENT           reduce using rule 63 (array -> [ value_list ] .)
    CONDITIONS      reduce using rule 63 (array -> [ value_list ] .)
    ACTIONS         reduce using rule 63 (array -> [ value_list ] .)
    COMMENT         reduce using rule 63 (array -> [ value_list ] .)
    DEDENT          reduce using rule 63 (array -> [ value_list ] .)
    ,               reduce using rule 63 (array -> [ value_list ] .)
    )               reduce using rule 63 (array -> [ value_list ] .)
    ]               reduce using rule 63 (array -> [ value_list ] .)
    ANNOTATION      reduce using rule 63 (array -> [ value_list ] .)
    (               reduce using rule 63 (array -> [ value_list ] .)
    INTEGER         reduce using rule 63 (array -> [ value_list ] .)
    FLOAT           reduce using rule 63 (array -> [ value_list ] .)
    [               reduce using rule 63 (array -> [ value_list ] .)
    TIME            reduce using rule 63 (array -> [ value_list ] .)
    NAME            reduce using rule 63 (array -> [ value_list ] .)
    GLOBAL_VAR      reduce using rule 63 (array -> [ value_list ] .)
    PLAYER_VAR      reduce using rule 63 (array -> [ value_list ] .)
    NUMBER          reduce using rule 63 (array -> [ value_list ] .)
    VALUE           reduce using rule 63 (array -> [ value_list ] .)
    ACTION          reduce using rule 63 (array -> [ value_list ] .)


state 94

    (45) value_list -> value , . value_list
    (44) value_list -> . value
    (45) value_list -> . value , value_list
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    ,               reduce using rule 65 (empty -> .)
    ]               reduce using rule 65 (empty -> .)
    )               reduce using rule 65 (empty -> .)
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

    value                          shift and go to state 75
    value_list                     shift and go to state 100
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 95

    (41) after_expr -> ( value_list . )

    )               shift and go to state 101


state 96

    (44) value_list -> value .
    (45) value_list -> value . , value_list
    (29) term -> value .

  ! reduce/reduce conflict for ) resolved using rule 29 (term -> value .)
    ,               shift and go to state 94
    *               reduce using rule 29 (term -> value .)
    /               reduce using rule 29 (term -> value .)
    +               reduce using rule 29 (term -> value .)
    -               reduce using rule 29 (term -> value .)
    )               reduce using rule 29 (term -> value .)
    COMPARE         reduce using rule 29 (term -> value .)

  ! )               [ reduce using rule 44 (value_list -> value .) ]


state 97

    (21) block -> NEWLINE INDENT statements DEDENT .

    NEWLINE         reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    EVENT           reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    CONDITIONS      reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    ACTIONS         reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    COMMENT         reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    DEDENT          reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    ASSIGN          reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    *               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    /               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    +               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    -               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    COMPARE         reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    ,               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    )               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    ]               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    ANNOTATION      reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    (               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    INTEGER         reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    FLOAT           reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    [               reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    TIME            reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    NAME            reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    GLOBAL_VAR      reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    PLAYER_VAR      reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    NUMBER          reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    VALUE           reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)
    ACTION          reduce using rule 21 (block -> NEWLINE INDENT statements DEDENT .)


state 98

    (13) statements -> statements statement .

    DEDENT          reduce using rule 13 (statements -> statements statement .)
    ANNOTATION      reduce using rule 13 (statements -> statements statement .)
    (               reduce using rule 13 (statements -> statements statement .)
    INTEGER         reduce using rule 13 (statements -> statements statement .)
    FLOAT           reduce using rule 13 (statements -> statements statement .)
    COMPARE         reduce using rule 13 (statements -> statements statement .)
    -               reduce using rule 13 (statements -> statements statement .)
    [               reduce using rule 13 (statements -> statements statement .)
    TIME            reduce using rule 13 (statements -> statements statement .)
    COMMENT         reduce using rule 13 (statements -> statements statement .)
    NAME            reduce using rule 13 (statements -> statements statement .)
    GLOBAL_VAR      reduce using rule 13 (statements -> statements statement .)
    PLAYER_VAR      reduce using rule 13 (statements -> statements statement .)
    NUMBER          reduce using rule 13 (statements -> statements statement .)
    VALUE           reduce using rule 13 (statements -> statements statement .)
    ACTION          reduce using rule 13 (statements -> statements statement .)
    NEWLINE         reduce using rule 13 (statements -> statements statement .)
    +               reduce using rule 13 (statements -> statements statement .)
    ASSIGN          reduce using rule 13 (statements -> statements statement .)
    *               reduce using rule 13 (statements -> statements statement .)
    /               reduce using rule 13 (statements -> statements statement .)


state 99

    (62) vector -> COMPARE value , value . , value COMPARE

    ,               shift and go to state 102


state 100

    (45) value_list -> value , value_list .

    ]               reduce using rule 45 (value_list -> value , value_list .)
    )               reduce using rule 45 (value_list -> value , value_list .)


state 101

    (41) after_expr -> ( value_list ) .

    NEWLINE         reduce using rule 41 (after_expr -> ( value_list ) .)
    EVENT           reduce using rule 41 (after_expr -> ( value_list ) .)
    CONDITIONS      reduce using rule 41 (after_expr -> ( value_list ) .)
    ACTIONS         reduce using rule 41 (after_expr -> ( value_list ) .)
    COMMENT         reduce using rule 41 (after_expr -> ( value_list ) .)
    DEDENT          reduce using rule 41 (after_expr -> ( value_list ) .)
    ASSIGN          reduce using rule 41 (after_expr -> ( value_list ) .)
    *               reduce using rule 41 (after_expr -> ( value_list ) .)
    /               reduce using rule 41 (after_expr -> ( value_list ) .)
    +               reduce using rule 41 (after_expr -> ( value_list ) .)
    -               reduce using rule 41 (after_expr -> ( value_list ) .)
    COMPARE         reduce using rule 41 (after_expr -> ( value_list ) .)
    ,               reduce using rule 41 (after_expr -> ( value_list ) .)
    )               reduce using rule 41 (after_expr -> ( value_list ) .)
    ]               reduce using rule 41 (after_expr -> ( value_list ) .)
    ANNOTATION      reduce using rule 41 (after_expr -> ( value_list ) .)
    (               reduce using rule 41 (after_expr -> ( value_list ) .)
    INTEGER         reduce using rule 41 (after_expr -> ( value_list ) .)
    FLOAT           reduce using rule 41 (after_expr -> ( value_list ) .)
    [               reduce using rule 41 (after_expr -> ( value_list ) .)
    TIME            reduce using rule 41 (after_expr -> ( value_list ) .)
    NAME            reduce using rule 41 (after_expr -> ( value_list ) .)
    GLOBAL_VAR      reduce using rule 41 (after_expr -> ( value_list ) .)
    PLAYER_VAR      reduce using rule 41 (after_expr -> ( value_list ) .)
    NUMBER          reduce using rule 41 (after_expr -> ( value_list ) .)
    VALUE           reduce using rule 41 (after_expr -> ( value_list ) .)
    ACTION          reduce using rule 41 (after_expr -> ( value_list ) .)


state 102

    (62) vector -> COMPARE value , value , . value COMPARE
    (32) value -> . variable
    (33) value -> . compound_stmt
    (34) value -> . number_const
    (35) value -> . vector
    (36) value -> . unary
    (37) value -> . array
    (38) value -> . time
    (39) value -> . ( compare )
    (40) value -> . empty
    (56) variable -> . name
    (57) variable -> . global_var
    (58) variable -> . player_var
    (18) compound_stmt -> . number_expr
    (19) compound_stmt -> . value_expr
    (20) compound_stmt -> . action_expr
    (54) number_const -> . INTEGER
    (55) number_const -> . FLOAT
    (62) vector -> . COMPARE value , value , value COMPARE
    (46) unary -> . - value
    (63) array -> . [ value_list ]
    (53) time -> . TIME
    (64) empty -> . COMMENT
    (65) empty -> .
    (59) name -> . NAME
    (60) global_var -> . GLOBAL_VAR
    (61) player_var -> . PLAYER_VAR
    (50) number_expr -> . NUMBER after_expr
    (51) value_expr -> . VALUE after_expr
    (52) action_expr -> . ACTION after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    (               shift and go to state 41
    INTEGER         shift and go to state 49
    FLOAT           shift and go to state 50
    COMPARE         shift and go to state 30
    -               shift and go to state 33
    [               shift and go to state 51
    TIME            shift and go to state 52
    COMMENT         shift and go to state 16
    NAME            shift and go to state 53
    GLOBAL_VAR      shift and go to state 54
    PLAYER_VAR      shift and go to state 55
    NUMBER          shift and go to state 56
    VALUE           shift and go to state 57
    ACTION          shift and go to state 58

  ! COMPARE         [ reduce using rule 65 (empty -> .) ]

    value                          shift and go to state 103
    variable                       shift and go to state 34
    compound_stmt                  shift and go to state 35
    number_const                   shift and go to state 36
    vector                         shift and go to state 37
    unary                          shift and go to state 38
    array                          shift and go to state 39
    time                           shift and go to state 40
    empty                          shift and go to state 42
    name                           shift and go to state 43
    global_var                     shift and go to state 44
    player_var                     shift and go to state 45
    number_expr                    shift and go to state 46
    value_expr                     shift and go to state 47
    action_expr                    shift and go to state 48

state 103

    (62) vector -> COMPARE value , value , value . COMPARE

    COMPARE         shift and go to state 104


state 104

    (62) vector -> COMPARE value , value , value COMPARE .

    ASSIGN          reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    *               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    /               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    +               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    -               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    COMPARE         reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    NEWLINE         reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    EVENT           reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    CONDITIONS      reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    ACTIONS         reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    COMMENT         reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    DEDENT          reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    ,               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    )               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    ]               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    ANNOTATION      reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    (               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    INTEGER         reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    FLOAT           reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    [               reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    TIME            reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    NAME            reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    GLOBAL_VAR      reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    PLAYER_VAR      reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    NUMBER          reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    VALUE           reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)
    ACTION          reduce using rule 62 (vector -> COMPARE value , value , value COMPARE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for - in state 13 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 13 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 13 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 13 resolved as shift
WARNING: shift/reduce conflict for - in state 14 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 14 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 14 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 14 resolved as shift
WARNING: shift/reduce conflict for - in state 15 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 15 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 15 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 15 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 25 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 26 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 28 resolved as shift
WARNING: shift/reduce conflict for - in state 28 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 28 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 28 resolved as shift
WARNING: shift/reduce conflict for ( in state 28 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 28 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 28 resolved as shift
WARNING: shift/reduce conflict for [ in state 28 resolved as shift
WARNING: shift/reduce conflict for TIME in state 28 resolved as shift
WARNING: shift/reduce conflict for NAME in state 28 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 28 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 28 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 28 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 28 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 28 resolved as shift
WARNING: shift/reduce conflict for + in state 29 resolved as shift
WARNING: shift/reduce conflict for - in state 29 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 31 resolved as shift
WARNING: shift/reduce conflict for * in state 32 resolved as shift
WARNING: shift/reduce conflict for / in state 32 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 33 resolved as shift
WARNING: shift/reduce conflict for - in state 33 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 33 resolved as shift
WARNING: shift/reduce conflict for ( in state 33 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 33 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 33 resolved as shift
WARNING: shift/reduce conflict for [ in state 33 resolved as shift
WARNING: shift/reduce conflict for TIME in state 33 resolved as shift
WARNING: shift/reduce conflict for NAME in state 33 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 33 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 33 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 33 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 33 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 33 resolved as shift
WARNING: shift/reduce conflict for - in state 41 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 41 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 56 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 56 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 56 resolved as shift
WARNING: shift/reduce conflict for ( in state 56 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 56 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 56 resolved as shift
WARNING: shift/reduce conflict for [ in state 56 resolved as shift
WARNING: shift/reduce conflict for TIME in state 56 resolved as shift
WARNING: shift/reduce conflict for NAME in state 56 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 56 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 56 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 56 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 57 resolved as shift
WARNING: shift/reduce conflict for - in state 57 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 57 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 57 resolved as shift
WARNING: shift/reduce conflict for ( in state 57 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for [ in state 57 resolved as shift
WARNING: shift/reduce conflict for TIME in state 57 resolved as shift
WARNING: shift/reduce conflict for NAME in state 57 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 57 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 57 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 57 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 58 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 58 resolved as shift
WARNING: shift/reduce conflict for - in state 58 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 58 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 58 resolved as shift
WARNING: shift/reduce conflict for ( in state 58 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for [ in state 58 resolved as shift
WARNING: shift/reduce conflict for TIME in state 58 resolved as shift
WARNING: shift/reduce conflict for NAME in state 58 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 58 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 58 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 58 resolved as shift
WARNING: shift/reduce conflict for - in state 61 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 61 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 61 resolved as shift
WARNING: shift/reduce conflict for ( in state 61 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 61 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 61 resolved as shift
WARNING: shift/reduce conflict for [ in state 61 resolved as shift
WARNING: shift/reduce conflict for TIME in state 61 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 61 resolved as shift
WARNING: shift/reduce conflict for NAME in state 61 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 61 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 61 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 61 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 63 resolved as shift
WARNING: shift/reduce conflict for - in state 63 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 63 resolved as shift
WARNING: shift/reduce conflict for ( in state 63 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 63 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 63 resolved as shift
WARNING: shift/reduce conflict for [ in state 63 resolved as shift
WARNING: shift/reduce conflict for TIME in state 63 resolved as shift
WARNING: shift/reduce conflict for NAME in state 63 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 63 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 63 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 65 resolved as shift
WARNING: shift/reduce conflict for - in state 65 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 65 resolved as shift
WARNING: shift/reduce conflict for ( in state 65 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 65 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 65 resolved as shift
WARNING: shift/reduce conflict for [ in state 65 resolved as shift
WARNING: shift/reduce conflict for TIME in state 65 resolved as shift
WARNING: shift/reduce conflict for NAME in state 65 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 65 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 65 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 65 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 66 resolved as shift
WARNING: shift/reduce conflict for - in state 66 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 66 resolved as shift
WARNING: shift/reduce conflict for ( in state 66 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for [ in state 66 resolved as shift
WARNING: shift/reduce conflict for TIME in state 66 resolved as shift
WARNING: shift/reduce conflict for NAME in state 66 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 66 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 66 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 66 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 68 resolved as shift
WARNING: shift/reduce conflict for - in state 68 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 68 resolved as shift
WARNING: shift/reduce conflict for ( in state 68 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 68 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 68 resolved as shift
WARNING: shift/reduce conflict for [ in state 68 resolved as shift
WARNING: shift/reduce conflict for TIME in state 68 resolved as shift
WARNING: shift/reduce conflict for NAME in state 68 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 68 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 68 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 68 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 69 resolved as shift
WARNING: shift/reduce conflict for - in state 69 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 69 resolved as shift
WARNING: shift/reduce conflict for ( in state 69 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 69 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 69 resolved as shift
WARNING: shift/reduce conflict for [ in state 69 resolved as shift
WARNING: shift/reduce conflict for TIME in state 69 resolved as shift
WARNING: shift/reduce conflict for NAME in state 69 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 69 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 69 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 69 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 70 resolved as shift
WARNING: shift/reduce conflict for - in state 70 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 70 resolved as shift
WARNING: shift/reduce conflict for ( in state 70 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 70 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 70 resolved as shift
WARNING: shift/reduce conflict for [ in state 70 resolved as shift
WARNING: shift/reduce conflict for TIME in state 70 resolved as shift
WARNING: shift/reduce conflict for NAME in state 70 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 70 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 70 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 70 resolved as shift
WARNING: shift/reduce conflict for - in state 77 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 77 resolved as shift
WARNING: shift/reduce conflict for - in state 82 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 82 resolved as shift
WARNING: shift/reduce conflict for DEDENT in state 82 resolved as shift
WARNING: shift/reduce conflict for ANNOTATION in state 82 resolved as shift
WARNING: shift/reduce conflict for ( in state 82 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 82 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for [ in state 82 resolved as shift
WARNING: shift/reduce conflict for TIME in state 82 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 82 resolved as shift
WARNING: shift/reduce conflict for NAME in state 82 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 82 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 82 resolved as shift
WARNING: shift/reduce conflict for ACTION in state 82 resolved as shift
WARNING: shift/reduce conflict for + in state 85 resolved as shift
WARNING: shift/reduce conflict for - in state 85 resolved as shift
WARNING: shift/reduce conflict for + in state 86 resolved as shift
WARNING: shift/reduce conflict for - in state 86 resolved as shift
WARNING: shift/reduce conflict for + in state 87 resolved as shift
WARNING: shift/reduce conflict for - in state 87 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 89 resolved as shift
WARNING: shift/reduce conflict for * in state 90 resolved as shift
WARNING: shift/reduce conflict for / in state 90 resolved as shift
WARNING: shift/reduce conflict for * in state 91 resolved as shift
WARNING: shift/reduce conflict for / in state 91 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 102 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (term -> value)
WARNING: rejected rule (value_list -> value) in state 96
