Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACTION
    BOOLEAN
    EOF
    EVENT_TYPE
    FUNC
    MAP
    QUOTE
    WHITESPACE

Grammar

Rule 0     S' -> ruleset
Rule 1     ruleset -> rule
Rule 2     ruleset -> rule ruleset
Rule 3     rule -> RULE
Rule 4     rule -> RULE NEWLINE INDENT ruleblock DEDENT
Rule 5     ruleblock -> event ruleblock
Rule 6     ruleblock -> conditions ruleblock
Rule 7     ruleblock -> actions ruleblock
Rule 8     ruleblock -> empty
Rule 9     event -> EVENT block
Rule 10    conditions -> CONDITIONS block
Rule 11    actions -> ACTIONS block
Rule 12    statements -> statements statement
Rule 13    statements -> statement
Rule 14    statement -> simple_stmt
Rule 15    simple_stmt -> expr_list NEWLINE
Rule 16    simple_stmt -> expr_list
Rule 17    compound_stmt -> number_expr
Rule 18    compound_stmt -> value_expr
Rule 19    block -> NEWLINE INDENT statements DEDENT
Rule 20    block -> simple_stmt
Rule 21    expr_list -> compare_expr
Rule 22    expr_list -> assign_expr
Rule 23    expr_list -> COMMENT_TAG expr_list
Rule 24    expr -> value
Rule 25    value -> variable
Rule 26    value -> compound_stmt
Rule 27    value -> number_const
Rule 28    value -> vector
Rule 29    value -> array
Rule 30    value -> empty
Rule 31    after_expr -> ( value_list )
Rule 32    after_expr -> block
Rule 33    after_expr -> NEWLINE
Rule 34    value_list -> value
Rule 35    value_list -> value , value_list
Rule 36    compare_expr -> expr
Rule 37    compare_expr -> compare_expr COMPARE expr
Rule 38    assign_expr -> value ASSIGN value
Rule 39    number_expr -> NUMBER after_expr
Rule 40    value_expr -> VALUE after_expr
Rule 41    number_const -> INTEGER
Rule 42    number_const -> FLOAT
Rule 43    variable -> name
Rule 44    variable -> global_var
Rule 45    variable -> player_var
Rule 46    name -> NAME
Rule 47    global_var -> GLOBAL_VAR
Rule 48    player_var -> PLAYER_VAR
Rule 49    vector -> COMPARE value , value , value COMPARE
Rule 50    array -> [ value_list ]
Rule 51    empty -> COMMENT
Rule 52    empty -> <empty>

Terminals, with rules where they appear

(                    : 31
)                    : 31
,                    : 35 49 49
ACTION               : 
ACTIONS              : 11
ASSIGN               : 38
BOOLEAN              : 
COMMENT              : 51
COMMENT_TAG          : 23
COMPARE              : 37 49 49
CONDITIONS           : 10
DEDENT               : 4 19
EOF                  : 
EVENT                : 9
EVENT_TYPE           : 
FLOAT                : 42
FUNC                 : 
GLOBAL_VAR           : 47
INDENT               : 4 19
INTEGER              : 41
MAP                  : 
NAME                 : 46
NEWLINE              : 4 15 19 33
NUMBER               : 39
PLAYER_VAR           : 48
QUOTE                : 
RULE                 : 3 4
VALUE                : 40
WHITESPACE           : 
[                    : 50
]                    : 50
error                : 

Nonterminals, with rules where they appear

actions              : 7
after_expr           : 39 40
array                : 29
assign_expr          : 22
block                : 9 10 11 32
compare_expr         : 21 37
compound_stmt        : 26
conditions           : 6
empty                : 8 30
event                : 5
expr                 : 36 37
expr_list            : 15 16 23
global_var           : 44
name                 : 43
number_const         : 27
number_expr          : 17
player_var           : 45
rule                 : 1 2
ruleblock            : 4 5 6 7
ruleset              : 2 0
simple_stmt          : 14 20
statement            : 12 13
statements           : 12 19
value                : 24 34 35 38 38 49 49 49
value_expr           : 18
value_list           : 31 35 50
variable             : 25
vector               : 28

Parsing method: LALR

state 0

    (0) S' -> . ruleset
    (1) ruleset -> . rule
    (2) ruleset -> . rule ruleset
    (3) rule -> . RULE
    (4) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

    RULE            shift and go to state 3

    ruleset                        shift and go to state 1
    rule                           shift and go to state 2

state 1

    (0) S' -> ruleset .



state 2

    (1) ruleset -> rule .
    (2) ruleset -> rule . ruleset
    (1) ruleset -> . rule
    (2) ruleset -> . rule ruleset
    (3) rule -> . RULE
    (4) rule -> . RULE NEWLINE INDENT ruleblock DEDENT

    $end            reduce using rule 1 (ruleset -> rule .)
    RULE            shift and go to state 3

    rule                           shift and go to state 2
    ruleset                        shift and go to state 4

state 3

    (3) rule -> RULE .
    (4) rule -> RULE . NEWLINE INDENT ruleblock DEDENT

    RULE            reduce using rule 3 (rule -> RULE .)
    $end            reduce using rule 3 (rule -> RULE .)
    NEWLINE         shift and go to state 5


state 4

    (2) ruleset -> rule ruleset .

    $end            reduce using rule 2 (ruleset -> rule ruleset .)


state 5

    (4) rule -> RULE NEWLINE . INDENT ruleblock DEDENT

    INDENT          shift and go to state 6


state 6

    (4) rule -> RULE NEWLINE INDENT . ruleblock DEDENT
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . empty
    (9) event -> . EVENT block
    (10) conditions -> . CONDITIONS block
    (11) actions -> . ACTIONS block
    (51) empty -> . COMMENT
    (52) empty -> .

    EVENT           shift and go to state 12
    CONDITIONS      shift and go to state 13
    ACTIONS         shift and go to state 14
    COMMENT         shift and go to state 15
    DEDENT          reduce using rule 52 (empty -> .)

    ruleblock                      shift and go to state 7
    event                          shift and go to state 8
    conditions                     shift and go to state 9
    actions                        shift and go to state 10
    empty                          shift and go to state 11

state 7

    (4) rule -> RULE NEWLINE INDENT ruleblock . DEDENT

    DEDENT          shift and go to state 16


state 8

    (5) ruleblock -> event . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . empty
    (9) event -> . EVENT block
    (10) conditions -> . CONDITIONS block
    (11) actions -> . ACTIONS block
    (51) empty -> . COMMENT
    (52) empty -> .

    EVENT           shift and go to state 12
    CONDITIONS      shift and go to state 13
    ACTIONS         shift and go to state 14
    COMMENT         shift and go to state 15
    DEDENT          reduce using rule 52 (empty -> .)

    event                          shift and go to state 8
    ruleblock                      shift and go to state 17
    conditions                     shift and go to state 9
    actions                        shift and go to state 10
    empty                          shift and go to state 11

state 9

    (6) ruleblock -> conditions . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . empty
    (9) event -> . EVENT block
    (10) conditions -> . CONDITIONS block
    (11) actions -> . ACTIONS block
    (51) empty -> . COMMENT
    (52) empty -> .

    EVENT           shift and go to state 12
    CONDITIONS      shift and go to state 13
    ACTIONS         shift and go to state 14
    COMMENT         shift and go to state 15
    DEDENT          reduce using rule 52 (empty -> .)

    conditions                     shift and go to state 9
    ruleblock                      shift and go to state 18
    event                          shift and go to state 8
    actions                        shift and go to state 10
    empty                          shift and go to state 11

state 10

    (7) ruleblock -> actions . ruleblock
    (5) ruleblock -> . event ruleblock
    (6) ruleblock -> . conditions ruleblock
    (7) ruleblock -> . actions ruleblock
    (8) ruleblock -> . empty
    (9) event -> . EVENT block
    (10) conditions -> . CONDITIONS block
    (11) actions -> . ACTIONS block
    (51) empty -> . COMMENT
    (52) empty -> .

    EVENT           shift and go to state 12
    CONDITIONS      shift and go to state 13
    ACTIONS         shift and go to state 14
    COMMENT         shift and go to state 15
    DEDENT          reduce using rule 52 (empty -> .)

    actions                        shift and go to state 10
    ruleblock                      shift and go to state 19
    event                          shift and go to state 8
    conditions                     shift and go to state 9
    empty                          shift and go to state 11

state 11

    (8) ruleblock -> empty .

    DEDENT          reduce using rule 8 (ruleblock -> empty .)


state 12

    (9) event -> EVENT . block
    (19) block -> . NEWLINE INDENT statements DEDENT
    (20) block -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    NEWLINE         shift and go to state 21
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ASSIGN          reduce using rule 52 (empty -> .)
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]

    block                          shift and go to state 20
    simple_stmt                    shift and go to state 22
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 13

    (10) conditions -> CONDITIONS . block
    (19) block -> . NEWLINE INDENT statements DEDENT
    (20) block -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    NEWLINE         shift and go to state 21
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ASSIGN          reduce using rule 52 (empty -> .)
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]

    block                          shift and go to state 49
    simple_stmt                    shift and go to state 22
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 14

    (11) actions -> ACTIONS . block
    (19) block -> . NEWLINE INDENT statements DEDENT
    (20) block -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    NEWLINE         shift and go to state 21
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ASSIGN          reduce using rule 52 (empty -> .)
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! NEWLINE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]

    block                          shift and go to state 50
    simple_stmt                    shift and go to state 22
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 15

    (51) empty -> COMMENT .

    DEDENT          reduce using rule 51 (empty -> COMMENT .)
    ASSIGN          reduce using rule 51 (empty -> COMMENT .)
    COMPARE         reduce using rule 51 (empty -> COMMENT .)
    NEWLINE         reduce using rule 51 (empty -> COMMENT .)
    EVENT           reduce using rule 51 (empty -> COMMENT .)
    CONDITIONS      reduce using rule 51 (empty -> COMMENT .)
    ACTIONS         reduce using rule 51 (empty -> COMMENT .)
    COMMENT         reduce using rule 51 (empty -> COMMENT .)
    ,               reduce using rule 51 (empty -> COMMENT .)
    ]               reduce using rule 51 (empty -> COMMENT .)
    COMMENT_TAG     reduce using rule 51 (empty -> COMMENT .)
    INTEGER         reduce using rule 51 (empty -> COMMENT .)
    FLOAT           reduce using rule 51 (empty -> COMMENT .)
    [               reduce using rule 51 (empty -> COMMENT .)
    NAME            reduce using rule 51 (empty -> COMMENT .)
    GLOBAL_VAR      reduce using rule 51 (empty -> COMMENT .)
    PLAYER_VAR      reduce using rule 51 (empty -> COMMENT .)
    NUMBER          reduce using rule 51 (empty -> COMMENT .)
    VALUE           reduce using rule 51 (empty -> COMMENT .)
    )               reduce using rule 51 (empty -> COMMENT .)


state 16

    (4) rule -> RULE NEWLINE INDENT ruleblock DEDENT .

    RULE            reduce using rule 4 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)
    $end            reduce using rule 4 (rule -> RULE NEWLINE INDENT ruleblock DEDENT .)


state 17

    (5) ruleblock -> event ruleblock .

    DEDENT          reduce using rule 5 (ruleblock -> event ruleblock .)


state 18

    (6) ruleblock -> conditions ruleblock .

    DEDENT          reduce using rule 6 (ruleblock -> conditions ruleblock .)


state 19

    (7) ruleblock -> actions ruleblock .

    DEDENT          reduce using rule 7 (ruleblock -> actions ruleblock .)


state 20

    (9) event -> EVENT block .

    EVENT           reduce using rule 9 (event -> EVENT block .)
    CONDITIONS      reduce using rule 9 (event -> EVENT block .)
    ACTIONS         reduce using rule 9 (event -> EVENT block .)
    COMMENT         reduce using rule 9 (event -> EVENT block .)
    DEDENT          reduce using rule 9 (event -> EVENT block .)


state 21

    (19) block -> NEWLINE . INDENT statements DEDENT

    INDENT          shift and go to state 51


state 22

    (20) block -> simple_stmt .

    EVENT           reduce using rule 20 (block -> simple_stmt .)
    CONDITIONS      reduce using rule 20 (block -> simple_stmt .)
    ACTIONS         reduce using rule 20 (block -> simple_stmt .)
    COMMENT         reduce using rule 20 (block -> simple_stmt .)
    DEDENT          reduce using rule 20 (block -> simple_stmt .)
    NEWLINE         reduce using rule 20 (block -> simple_stmt .)
    ASSIGN          reduce using rule 20 (block -> simple_stmt .)
    COMPARE         reduce using rule 20 (block -> simple_stmt .)
    ,               reduce using rule 20 (block -> simple_stmt .)
    ]               reduce using rule 20 (block -> simple_stmt .)
    COMMENT_TAG     reduce using rule 20 (block -> simple_stmt .)
    INTEGER         reduce using rule 20 (block -> simple_stmt .)
    FLOAT           reduce using rule 20 (block -> simple_stmt .)
    [               reduce using rule 20 (block -> simple_stmt .)
    NAME            reduce using rule 20 (block -> simple_stmt .)
    GLOBAL_VAR      reduce using rule 20 (block -> simple_stmt .)
    PLAYER_VAR      reduce using rule 20 (block -> simple_stmt .)
    NUMBER          reduce using rule 20 (block -> simple_stmt .)
    VALUE           reduce using rule 20 (block -> simple_stmt .)
    )               reduce using rule 20 (block -> simple_stmt .)


state 23

    (15) simple_stmt -> expr_list . NEWLINE
    (16) simple_stmt -> expr_list .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 52
    EVENT           reduce using rule 16 (simple_stmt -> expr_list .)
    CONDITIONS      reduce using rule 16 (simple_stmt -> expr_list .)
    ACTIONS         reduce using rule 16 (simple_stmt -> expr_list .)
    COMMENT         reduce using rule 16 (simple_stmt -> expr_list .)
    DEDENT          reduce using rule 16 (simple_stmt -> expr_list .)
    ASSIGN          reduce using rule 16 (simple_stmt -> expr_list .)
    COMPARE         reduce using rule 16 (simple_stmt -> expr_list .)
    ,               reduce using rule 16 (simple_stmt -> expr_list .)
    ]               reduce using rule 16 (simple_stmt -> expr_list .)
    COMMENT_TAG     reduce using rule 16 (simple_stmt -> expr_list .)
    INTEGER         reduce using rule 16 (simple_stmt -> expr_list .)
    FLOAT           reduce using rule 16 (simple_stmt -> expr_list .)
    [               reduce using rule 16 (simple_stmt -> expr_list .)
    NAME            reduce using rule 16 (simple_stmt -> expr_list .)
    GLOBAL_VAR      reduce using rule 16 (simple_stmt -> expr_list .)
    PLAYER_VAR      reduce using rule 16 (simple_stmt -> expr_list .)
    NUMBER          reduce using rule 16 (simple_stmt -> expr_list .)
    VALUE           reduce using rule 16 (simple_stmt -> expr_list .)
    )               reduce using rule 16 (simple_stmt -> expr_list .)

  ! NEWLINE         [ reduce using rule 16 (simple_stmt -> expr_list .) ]


state 24

    (21) expr_list -> compare_expr .
    (37) compare_expr -> compare_expr . COMPARE expr

  ! shift/reduce conflict for COMPARE resolved as shift
    NEWLINE         reduce using rule 21 (expr_list -> compare_expr .)
    EVENT           reduce using rule 21 (expr_list -> compare_expr .)
    CONDITIONS      reduce using rule 21 (expr_list -> compare_expr .)
    ACTIONS         reduce using rule 21 (expr_list -> compare_expr .)
    COMMENT         reduce using rule 21 (expr_list -> compare_expr .)
    DEDENT          reduce using rule 21 (expr_list -> compare_expr .)
    ASSIGN          reduce using rule 21 (expr_list -> compare_expr .)
    ,               reduce using rule 21 (expr_list -> compare_expr .)
    ]               reduce using rule 21 (expr_list -> compare_expr .)
    COMMENT_TAG     reduce using rule 21 (expr_list -> compare_expr .)
    INTEGER         reduce using rule 21 (expr_list -> compare_expr .)
    FLOAT           reduce using rule 21 (expr_list -> compare_expr .)
    [               reduce using rule 21 (expr_list -> compare_expr .)
    NAME            reduce using rule 21 (expr_list -> compare_expr .)
    GLOBAL_VAR      reduce using rule 21 (expr_list -> compare_expr .)
    PLAYER_VAR      reduce using rule 21 (expr_list -> compare_expr .)
    NUMBER          reduce using rule 21 (expr_list -> compare_expr .)
    VALUE           reduce using rule 21 (expr_list -> compare_expr .)
    )               reduce using rule 21 (expr_list -> compare_expr .)
    COMPARE         shift and go to state 53

  ! COMPARE         [ reduce using rule 21 (expr_list -> compare_expr .) ]


state 25

    (22) expr_list -> assign_expr .

    NEWLINE         reduce using rule 22 (expr_list -> assign_expr .)
    EVENT           reduce using rule 22 (expr_list -> assign_expr .)
    CONDITIONS      reduce using rule 22 (expr_list -> assign_expr .)
    ACTIONS         reduce using rule 22 (expr_list -> assign_expr .)
    COMMENT         reduce using rule 22 (expr_list -> assign_expr .)
    DEDENT          reduce using rule 22 (expr_list -> assign_expr .)
    ASSIGN          reduce using rule 22 (expr_list -> assign_expr .)
    COMPARE         reduce using rule 22 (expr_list -> assign_expr .)
    ,               reduce using rule 22 (expr_list -> assign_expr .)
    ]               reduce using rule 22 (expr_list -> assign_expr .)
    COMMENT_TAG     reduce using rule 22 (expr_list -> assign_expr .)
    INTEGER         reduce using rule 22 (expr_list -> assign_expr .)
    FLOAT           reduce using rule 22 (expr_list -> assign_expr .)
    [               reduce using rule 22 (expr_list -> assign_expr .)
    NAME            reduce using rule 22 (expr_list -> assign_expr .)
    GLOBAL_VAR      reduce using rule 22 (expr_list -> assign_expr .)
    PLAYER_VAR      reduce using rule 22 (expr_list -> assign_expr .)
    NUMBER          reduce using rule 22 (expr_list -> assign_expr .)
    VALUE           reduce using rule 22 (expr_list -> assign_expr .)
    )               reduce using rule 22 (expr_list -> assign_expr .)


state 26

    (23) expr_list -> COMMENT_TAG . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for COMMENT_TAG resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    NEWLINE         reduce using rule 52 (empty -> .)
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    ASSIGN          reduce using rule 52 (empty -> .)
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT_TAG     [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    expr_list                      shift and go to state 54
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 27

    (36) compare_expr -> expr .

    COMPARE         reduce using rule 36 (compare_expr -> expr .)
    NEWLINE         reduce using rule 36 (compare_expr -> expr .)
    EVENT           reduce using rule 36 (compare_expr -> expr .)
    CONDITIONS      reduce using rule 36 (compare_expr -> expr .)
    ACTIONS         reduce using rule 36 (compare_expr -> expr .)
    COMMENT         reduce using rule 36 (compare_expr -> expr .)
    DEDENT          reduce using rule 36 (compare_expr -> expr .)
    ASSIGN          reduce using rule 36 (compare_expr -> expr .)
    ,               reduce using rule 36 (compare_expr -> expr .)
    ]               reduce using rule 36 (compare_expr -> expr .)
    COMMENT_TAG     reduce using rule 36 (compare_expr -> expr .)
    INTEGER         reduce using rule 36 (compare_expr -> expr .)
    FLOAT           reduce using rule 36 (compare_expr -> expr .)
    [               reduce using rule 36 (compare_expr -> expr .)
    NAME            reduce using rule 36 (compare_expr -> expr .)
    GLOBAL_VAR      reduce using rule 36 (compare_expr -> expr .)
    PLAYER_VAR      reduce using rule 36 (compare_expr -> expr .)
    NUMBER          reduce using rule 36 (compare_expr -> expr .)
    VALUE           reduce using rule 36 (compare_expr -> expr .)
    )               reduce using rule 36 (compare_expr -> expr .)


state 28

    (49) vector -> COMPARE . value , value , value COMPARE
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ,               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

    value                          shift and go to state 55
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 29

    (38) assign_expr -> value . ASSIGN value
    (24) expr -> value .

  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 56
    COMPARE         reduce using rule 24 (expr -> value .)
    NEWLINE         reduce using rule 24 (expr -> value .)
    EVENT           reduce using rule 24 (expr -> value .)
    CONDITIONS      reduce using rule 24 (expr -> value .)
    ACTIONS         reduce using rule 24 (expr -> value .)
    COMMENT         reduce using rule 24 (expr -> value .)
    DEDENT          reduce using rule 24 (expr -> value .)
    ,               reduce using rule 24 (expr -> value .)
    ]               reduce using rule 24 (expr -> value .)
    COMMENT_TAG     reduce using rule 24 (expr -> value .)
    INTEGER         reduce using rule 24 (expr -> value .)
    FLOAT           reduce using rule 24 (expr -> value .)
    [               reduce using rule 24 (expr -> value .)
    NAME            reduce using rule 24 (expr -> value .)
    GLOBAL_VAR      reduce using rule 24 (expr -> value .)
    PLAYER_VAR      reduce using rule 24 (expr -> value .)
    NUMBER          reduce using rule 24 (expr -> value .)
    VALUE           reduce using rule 24 (expr -> value .)
    )               reduce using rule 24 (expr -> value .)

  ! ASSIGN          [ reduce using rule 24 (expr -> value .) ]


state 30

    (25) value -> variable .

    ASSIGN          reduce using rule 25 (value -> variable .)
    COMPARE         reduce using rule 25 (value -> variable .)
    NEWLINE         reduce using rule 25 (value -> variable .)
    EVENT           reduce using rule 25 (value -> variable .)
    CONDITIONS      reduce using rule 25 (value -> variable .)
    ACTIONS         reduce using rule 25 (value -> variable .)
    COMMENT         reduce using rule 25 (value -> variable .)
    DEDENT          reduce using rule 25 (value -> variable .)
    ,               reduce using rule 25 (value -> variable .)
    ]               reduce using rule 25 (value -> variable .)
    COMMENT_TAG     reduce using rule 25 (value -> variable .)
    INTEGER         reduce using rule 25 (value -> variable .)
    FLOAT           reduce using rule 25 (value -> variable .)
    [               reduce using rule 25 (value -> variable .)
    NAME            reduce using rule 25 (value -> variable .)
    GLOBAL_VAR      reduce using rule 25 (value -> variable .)
    PLAYER_VAR      reduce using rule 25 (value -> variable .)
    NUMBER          reduce using rule 25 (value -> variable .)
    VALUE           reduce using rule 25 (value -> variable .)
    )               reduce using rule 25 (value -> variable .)


state 31

    (26) value -> compound_stmt .

    ASSIGN          reduce using rule 26 (value -> compound_stmt .)
    COMPARE         reduce using rule 26 (value -> compound_stmt .)
    NEWLINE         reduce using rule 26 (value -> compound_stmt .)
    EVENT           reduce using rule 26 (value -> compound_stmt .)
    CONDITIONS      reduce using rule 26 (value -> compound_stmt .)
    ACTIONS         reduce using rule 26 (value -> compound_stmt .)
    COMMENT         reduce using rule 26 (value -> compound_stmt .)
    DEDENT          reduce using rule 26 (value -> compound_stmt .)
    ,               reduce using rule 26 (value -> compound_stmt .)
    ]               reduce using rule 26 (value -> compound_stmt .)
    COMMENT_TAG     reduce using rule 26 (value -> compound_stmt .)
    INTEGER         reduce using rule 26 (value -> compound_stmt .)
    FLOAT           reduce using rule 26 (value -> compound_stmt .)
    [               reduce using rule 26 (value -> compound_stmt .)
    NAME            reduce using rule 26 (value -> compound_stmt .)
    GLOBAL_VAR      reduce using rule 26 (value -> compound_stmt .)
    PLAYER_VAR      reduce using rule 26 (value -> compound_stmt .)
    NUMBER          reduce using rule 26 (value -> compound_stmt .)
    VALUE           reduce using rule 26 (value -> compound_stmt .)
    )               reduce using rule 26 (value -> compound_stmt .)


state 32

    (27) value -> number_const .

    ASSIGN          reduce using rule 27 (value -> number_const .)
    COMPARE         reduce using rule 27 (value -> number_const .)
    NEWLINE         reduce using rule 27 (value -> number_const .)
    EVENT           reduce using rule 27 (value -> number_const .)
    CONDITIONS      reduce using rule 27 (value -> number_const .)
    ACTIONS         reduce using rule 27 (value -> number_const .)
    COMMENT         reduce using rule 27 (value -> number_const .)
    DEDENT          reduce using rule 27 (value -> number_const .)
    ,               reduce using rule 27 (value -> number_const .)
    ]               reduce using rule 27 (value -> number_const .)
    COMMENT_TAG     reduce using rule 27 (value -> number_const .)
    INTEGER         reduce using rule 27 (value -> number_const .)
    FLOAT           reduce using rule 27 (value -> number_const .)
    [               reduce using rule 27 (value -> number_const .)
    NAME            reduce using rule 27 (value -> number_const .)
    GLOBAL_VAR      reduce using rule 27 (value -> number_const .)
    PLAYER_VAR      reduce using rule 27 (value -> number_const .)
    NUMBER          reduce using rule 27 (value -> number_const .)
    VALUE           reduce using rule 27 (value -> number_const .)
    )               reduce using rule 27 (value -> number_const .)


state 33

    (28) value -> vector .

    ASSIGN          reduce using rule 28 (value -> vector .)
    COMPARE         reduce using rule 28 (value -> vector .)
    NEWLINE         reduce using rule 28 (value -> vector .)
    EVENT           reduce using rule 28 (value -> vector .)
    CONDITIONS      reduce using rule 28 (value -> vector .)
    ACTIONS         reduce using rule 28 (value -> vector .)
    COMMENT         reduce using rule 28 (value -> vector .)
    DEDENT          reduce using rule 28 (value -> vector .)
    ,               reduce using rule 28 (value -> vector .)
    ]               reduce using rule 28 (value -> vector .)
    COMMENT_TAG     reduce using rule 28 (value -> vector .)
    INTEGER         reduce using rule 28 (value -> vector .)
    FLOAT           reduce using rule 28 (value -> vector .)
    [               reduce using rule 28 (value -> vector .)
    NAME            reduce using rule 28 (value -> vector .)
    GLOBAL_VAR      reduce using rule 28 (value -> vector .)
    PLAYER_VAR      reduce using rule 28 (value -> vector .)
    NUMBER          reduce using rule 28 (value -> vector .)
    VALUE           reduce using rule 28 (value -> vector .)
    )               reduce using rule 28 (value -> vector .)


state 34

    (29) value -> array .

    ASSIGN          reduce using rule 29 (value -> array .)
    COMPARE         reduce using rule 29 (value -> array .)
    NEWLINE         reduce using rule 29 (value -> array .)
    EVENT           reduce using rule 29 (value -> array .)
    CONDITIONS      reduce using rule 29 (value -> array .)
    ACTIONS         reduce using rule 29 (value -> array .)
    COMMENT         reduce using rule 29 (value -> array .)
    DEDENT          reduce using rule 29 (value -> array .)
    ,               reduce using rule 29 (value -> array .)
    ]               reduce using rule 29 (value -> array .)
    COMMENT_TAG     reduce using rule 29 (value -> array .)
    INTEGER         reduce using rule 29 (value -> array .)
    FLOAT           reduce using rule 29 (value -> array .)
    [               reduce using rule 29 (value -> array .)
    NAME            reduce using rule 29 (value -> array .)
    GLOBAL_VAR      reduce using rule 29 (value -> array .)
    PLAYER_VAR      reduce using rule 29 (value -> array .)
    NUMBER          reduce using rule 29 (value -> array .)
    VALUE           reduce using rule 29 (value -> array .)
    )               reduce using rule 29 (value -> array .)


state 35

    (30) value -> empty .

    ASSIGN          reduce using rule 30 (value -> empty .)
    COMPARE         reduce using rule 30 (value -> empty .)
    NEWLINE         reduce using rule 30 (value -> empty .)
    EVENT           reduce using rule 30 (value -> empty .)
    CONDITIONS      reduce using rule 30 (value -> empty .)
    ACTIONS         reduce using rule 30 (value -> empty .)
    COMMENT         reduce using rule 30 (value -> empty .)
    DEDENT          reduce using rule 30 (value -> empty .)
    ,               reduce using rule 30 (value -> empty .)
    ]               reduce using rule 30 (value -> empty .)
    COMMENT_TAG     reduce using rule 30 (value -> empty .)
    INTEGER         reduce using rule 30 (value -> empty .)
    FLOAT           reduce using rule 30 (value -> empty .)
    [               reduce using rule 30 (value -> empty .)
    NAME            reduce using rule 30 (value -> empty .)
    GLOBAL_VAR      reduce using rule 30 (value -> empty .)
    PLAYER_VAR      reduce using rule 30 (value -> empty .)
    NUMBER          reduce using rule 30 (value -> empty .)
    VALUE           reduce using rule 30 (value -> empty .)
    )               reduce using rule 30 (value -> empty .)


state 36

    (43) variable -> name .

    ASSIGN          reduce using rule 43 (variable -> name .)
    COMPARE         reduce using rule 43 (variable -> name .)
    NEWLINE         reduce using rule 43 (variable -> name .)
    EVENT           reduce using rule 43 (variable -> name .)
    CONDITIONS      reduce using rule 43 (variable -> name .)
    ACTIONS         reduce using rule 43 (variable -> name .)
    COMMENT         reduce using rule 43 (variable -> name .)
    DEDENT          reduce using rule 43 (variable -> name .)
    ,               reduce using rule 43 (variable -> name .)
    ]               reduce using rule 43 (variable -> name .)
    COMMENT_TAG     reduce using rule 43 (variable -> name .)
    INTEGER         reduce using rule 43 (variable -> name .)
    FLOAT           reduce using rule 43 (variable -> name .)
    [               reduce using rule 43 (variable -> name .)
    NAME            reduce using rule 43 (variable -> name .)
    GLOBAL_VAR      reduce using rule 43 (variable -> name .)
    PLAYER_VAR      reduce using rule 43 (variable -> name .)
    NUMBER          reduce using rule 43 (variable -> name .)
    VALUE           reduce using rule 43 (variable -> name .)
    )               reduce using rule 43 (variable -> name .)


state 37

    (44) variable -> global_var .

    ASSIGN          reduce using rule 44 (variable -> global_var .)
    COMPARE         reduce using rule 44 (variable -> global_var .)
    NEWLINE         reduce using rule 44 (variable -> global_var .)
    EVENT           reduce using rule 44 (variable -> global_var .)
    CONDITIONS      reduce using rule 44 (variable -> global_var .)
    ACTIONS         reduce using rule 44 (variable -> global_var .)
    COMMENT         reduce using rule 44 (variable -> global_var .)
    DEDENT          reduce using rule 44 (variable -> global_var .)
    ,               reduce using rule 44 (variable -> global_var .)
    ]               reduce using rule 44 (variable -> global_var .)
    COMMENT_TAG     reduce using rule 44 (variable -> global_var .)
    INTEGER         reduce using rule 44 (variable -> global_var .)
    FLOAT           reduce using rule 44 (variable -> global_var .)
    [               reduce using rule 44 (variable -> global_var .)
    NAME            reduce using rule 44 (variable -> global_var .)
    GLOBAL_VAR      reduce using rule 44 (variable -> global_var .)
    PLAYER_VAR      reduce using rule 44 (variable -> global_var .)
    NUMBER          reduce using rule 44 (variable -> global_var .)
    VALUE           reduce using rule 44 (variable -> global_var .)
    )               reduce using rule 44 (variable -> global_var .)


state 38

    (45) variable -> player_var .

    ASSIGN          reduce using rule 45 (variable -> player_var .)
    COMPARE         reduce using rule 45 (variable -> player_var .)
    NEWLINE         reduce using rule 45 (variable -> player_var .)
    EVENT           reduce using rule 45 (variable -> player_var .)
    CONDITIONS      reduce using rule 45 (variable -> player_var .)
    ACTIONS         reduce using rule 45 (variable -> player_var .)
    COMMENT         reduce using rule 45 (variable -> player_var .)
    DEDENT          reduce using rule 45 (variable -> player_var .)
    ,               reduce using rule 45 (variable -> player_var .)
    ]               reduce using rule 45 (variable -> player_var .)
    COMMENT_TAG     reduce using rule 45 (variable -> player_var .)
    INTEGER         reduce using rule 45 (variable -> player_var .)
    FLOAT           reduce using rule 45 (variable -> player_var .)
    [               reduce using rule 45 (variable -> player_var .)
    NAME            reduce using rule 45 (variable -> player_var .)
    GLOBAL_VAR      reduce using rule 45 (variable -> player_var .)
    PLAYER_VAR      reduce using rule 45 (variable -> player_var .)
    NUMBER          reduce using rule 45 (variable -> player_var .)
    VALUE           reduce using rule 45 (variable -> player_var .)
    )               reduce using rule 45 (variable -> player_var .)


state 39

    (17) compound_stmt -> number_expr .

    ASSIGN          reduce using rule 17 (compound_stmt -> number_expr .)
    COMPARE         reduce using rule 17 (compound_stmt -> number_expr .)
    NEWLINE         reduce using rule 17 (compound_stmt -> number_expr .)
    EVENT           reduce using rule 17 (compound_stmt -> number_expr .)
    CONDITIONS      reduce using rule 17 (compound_stmt -> number_expr .)
    ACTIONS         reduce using rule 17 (compound_stmt -> number_expr .)
    COMMENT         reduce using rule 17 (compound_stmt -> number_expr .)
    DEDENT          reduce using rule 17 (compound_stmt -> number_expr .)
    ,               reduce using rule 17 (compound_stmt -> number_expr .)
    ]               reduce using rule 17 (compound_stmt -> number_expr .)
    COMMENT_TAG     reduce using rule 17 (compound_stmt -> number_expr .)
    INTEGER         reduce using rule 17 (compound_stmt -> number_expr .)
    FLOAT           reduce using rule 17 (compound_stmt -> number_expr .)
    [               reduce using rule 17 (compound_stmt -> number_expr .)
    NAME            reduce using rule 17 (compound_stmt -> number_expr .)
    GLOBAL_VAR      reduce using rule 17 (compound_stmt -> number_expr .)
    PLAYER_VAR      reduce using rule 17 (compound_stmt -> number_expr .)
    NUMBER          reduce using rule 17 (compound_stmt -> number_expr .)
    VALUE           reduce using rule 17 (compound_stmt -> number_expr .)
    )               reduce using rule 17 (compound_stmt -> number_expr .)


state 40

    (18) compound_stmt -> value_expr .

    ASSIGN          reduce using rule 18 (compound_stmt -> value_expr .)
    COMPARE         reduce using rule 18 (compound_stmt -> value_expr .)
    NEWLINE         reduce using rule 18 (compound_stmt -> value_expr .)
    EVENT           reduce using rule 18 (compound_stmt -> value_expr .)
    CONDITIONS      reduce using rule 18 (compound_stmt -> value_expr .)
    ACTIONS         reduce using rule 18 (compound_stmt -> value_expr .)
    COMMENT         reduce using rule 18 (compound_stmt -> value_expr .)
    DEDENT          reduce using rule 18 (compound_stmt -> value_expr .)
    ,               reduce using rule 18 (compound_stmt -> value_expr .)
    ]               reduce using rule 18 (compound_stmt -> value_expr .)
    COMMENT_TAG     reduce using rule 18 (compound_stmt -> value_expr .)
    INTEGER         reduce using rule 18 (compound_stmt -> value_expr .)
    FLOAT           reduce using rule 18 (compound_stmt -> value_expr .)
    [               reduce using rule 18 (compound_stmt -> value_expr .)
    NAME            reduce using rule 18 (compound_stmt -> value_expr .)
    GLOBAL_VAR      reduce using rule 18 (compound_stmt -> value_expr .)
    PLAYER_VAR      reduce using rule 18 (compound_stmt -> value_expr .)
    NUMBER          reduce using rule 18 (compound_stmt -> value_expr .)
    VALUE           reduce using rule 18 (compound_stmt -> value_expr .)
    )               reduce using rule 18 (compound_stmt -> value_expr .)


state 41

    (41) number_const -> INTEGER .

    ASSIGN          reduce using rule 41 (number_const -> INTEGER .)
    COMPARE         reduce using rule 41 (number_const -> INTEGER .)
    NEWLINE         reduce using rule 41 (number_const -> INTEGER .)
    EVENT           reduce using rule 41 (number_const -> INTEGER .)
    CONDITIONS      reduce using rule 41 (number_const -> INTEGER .)
    ACTIONS         reduce using rule 41 (number_const -> INTEGER .)
    COMMENT         reduce using rule 41 (number_const -> INTEGER .)
    DEDENT          reduce using rule 41 (number_const -> INTEGER .)
    ,               reduce using rule 41 (number_const -> INTEGER .)
    ]               reduce using rule 41 (number_const -> INTEGER .)
    COMMENT_TAG     reduce using rule 41 (number_const -> INTEGER .)
    INTEGER         reduce using rule 41 (number_const -> INTEGER .)
    FLOAT           reduce using rule 41 (number_const -> INTEGER .)
    [               reduce using rule 41 (number_const -> INTEGER .)
    NAME            reduce using rule 41 (number_const -> INTEGER .)
    GLOBAL_VAR      reduce using rule 41 (number_const -> INTEGER .)
    PLAYER_VAR      reduce using rule 41 (number_const -> INTEGER .)
    NUMBER          reduce using rule 41 (number_const -> INTEGER .)
    VALUE           reduce using rule 41 (number_const -> INTEGER .)
    )               reduce using rule 41 (number_const -> INTEGER .)


state 42

    (42) number_const -> FLOAT .

    ASSIGN          reduce using rule 42 (number_const -> FLOAT .)
    COMPARE         reduce using rule 42 (number_const -> FLOAT .)
    NEWLINE         reduce using rule 42 (number_const -> FLOAT .)
    EVENT           reduce using rule 42 (number_const -> FLOAT .)
    CONDITIONS      reduce using rule 42 (number_const -> FLOAT .)
    ACTIONS         reduce using rule 42 (number_const -> FLOAT .)
    COMMENT         reduce using rule 42 (number_const -> FLOAT .)
    DEDENT          reduce using rule 42 (number_const -> FLOAT .)
    ,               reduce using rule 42 (number_const -> FLOAT .)
    ]               reduce using rule 42 (number_const -> FLOAT .)
    COMMENT_TAG     reduce using rule 42 (number_const -> FLOAT .)
    INTEGER         reduce using rule 42 (number_const -> FLOAT .)
    FLOAT           reduce using rule 42 (number_const -> FLOAT .)
    [               reduce using rule 42 (number_const -> FLOAT .)
    NAME            reduce using rule 42 (number_const -> FLOAT .)
    GLOBAL_VAR      reduce using rule 42 (number_const -> FLOAT .)
    PLAYER_VAR      reduce using rule 42 (number_const -> FLOAT .)
    NUMBER          reduce using rule 42 (number_const -> FLOAT .)
    VALUE           reduce using rule 42 (number_const -> FLOAT .)
    )               reduce using rule 42 (number_const -> FLOAT .)


state 43

    (50) array -> [ . value_list ]
    (34) value_list -> . value
    (35) value_list -> . value , value_list
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

    value_list                     shift and go to state 57
    value                          shift and go to state 58
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 44

    (46) name -> NAME .

    ASSIGN          reduce using rule 46 (name -> NAME .)
    COMPARE         reduce using rule 46 (name -> NAME .)
    NEWLINE         reduce using rule 46 (name -> NAME .)
    EVENT           reduce using rule 46 (name -> NAME .)
    CONDITIONS      reduce using rule 46 (name -> NAME .)
    ACTIONS         reduce using rule 46 (name -> NAME .)
    COMMENT         reduce using rule 46 (name -> NAME .)
    DEDENT          reduce using rule 46 (name -> NAME .)
    ,               reduce using rule 46 (name -> NAME .)
    ]               reduce using rule 46 (name -> NAME .)
    COMMENT_TAG     reduce using rule 46 (name -> NAME .)
    INTEGER         reduce using rule 46 (name -> NAME .)
    FLOAT           reduce using rule 46 (name -> NAME .)
    [               reduce using rule 46 (name -> NAME .)
    NAME            reduce using rule 46 (name -> NAME .)
    GLOBAL_VAR      reduce using rule 46 (name -> NAME .)
    PLAYER_VAR      reduce using rule 46 (name -> NAME .)
    NUMBER          reduce using rule 46 (name -> NAME .)
    VALUE           reduce using rule 46 (name -> NAME .)
    )               reduce using rule 46 (name -> NAME .)


state 45

    (47) global_var -> GLOBAL_VAR .

    ASSIGN          reduce using rule 47 (global_var -> GLOBAL_VAR .)
    COMPARE         reduce using rule 47 (global_var -> GLOBAL_VAR .)
    NEWLINE         reduce using rule 47 (global_var -> GLOBAL_VAR .)
    EVENT           reduce using rule 47 (global_var -> GLOBAL_VAR .)
    CONDITIONS      reduce using rule 47 (global_var -> GLOBAL_VAR .)
    ACTIONS         reduce using rule 47 (global_var -> GLOBAL_VAR .)
    COMMENT         reduce using rule 47 (global_var -> GLOBAL_VAR .)
    DEDENT          reduce using rule 47 (global_var -> GLOBAL_VAR .)
    ,               reduce using rule 47 (global_var -> GLOBAL_VAR .)
    ]               reduce using rule 47 (global_var -> GLOBAL_VAR .)
    COMMENT_TAG     reduce using rule 47 (global_var -> GLOBAL_VAR .)
    INTEGER         reduce using rule 47 (global_var -> GLOBAL_VAR .)
    FLOAT           reduce using rule 47 (global_var -> GLOBAL_VAR .)
    [               reduce using rule 47 (global_var -> GLOBAL_VAR .)
    NAME            reduce using rule 47 (global_var -> GLOBAL_VAR .)
    GLOBAL_VAR      reduce using rule 47 (global_var -> GLOBAL_VAR .)
    PLAYER_VAR      reduce using rule 47 (global_var -> GLOBAL_VAR .)
    NUMBER          reduce using rule 47 (global_var -> GLOBAL_VAR .)
    VALUE           reduce using rule 47 (global_var -> GLOBAL_VAR .)
    )               reduce using rule 47 (global_var -> GLOBAL_VAR .)


state 46

    (48) player_var -> PLAYER_VAR .

    ASSIGN          reduce using rule 48 (player_var -> PLAYER_VAR .)
    COMPARE         reduce using rule 48 (player_var -> PLAYER_VAR .)
    NEWLINE         reduce using rule 48 (player_var -> PLAYER_VAR .)
    EVENT           reduce using rule 48 (player_var -> PLAYER_VAR .)
    CONDITIONS      reduce using rule 48 (player_var -> PLAYER_VAR .)
    ACTIONS         reduce using rule 48 (player_var -> PLAYER_VAR .)
    COMMENT         reduce using rule 48 (player_var -> PLAYER_VAR .)
    DEDENT          reduce using rule 48 (player_var -> PLAYER_VAR .)
    ,               reduce using rule 48 (player_var -> PLAYER_VAR .)
    ]               reduce using rule 48 (player_var -> PLAYER_VAR .)
    COMMENT_TAG     reduce using rule 48 (player_var -> PLAYER_VAR .)
    INTEGER         reduce using rule 48 (player_var -> PLAYER_VAR .)
    FLOAT           reduce using rule 48 (player_var -> PLAYER_VAR .)
    [               reduce using rule 48 (player_var -> PLAYER_VAR .)
    NAME            reduce using rule 48 (player_var -> PLAYER_VAR .)
    GLOBAL_VAR      reduce using rule 48 (player_var -> PLAYER_VAR .)
    PLAYER_VAR      reduce using rule 48 (player_var -> PLAYER_VAR .)
    NUMBER          reduce using rule 48 (player_var -> PLAYER_VAR .)
    VALUE           reduce using rule 48 (player_var -> PLAYER_VAR .)
    )               reduce using rule 48 (player_var -> PLAYER_VAR .)


state 47

    (39) number_expr -> NUMBER . after_expr
    (31) after_expr -> . ( value_list )
    (32) after_expr -> . block
    (33) after_expr -> . NEWLINE
    (19) block -> . NEWLINE INDENT statements DEDENT
    (20) block -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for COMMENT_TAG resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    (               shift and go to state 60
    NEWLINE         shift and go to state 62
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    ASSIGN          reduce using rule 52 (empty -> .)
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! NEWLINE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT_TAG     [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    after_expr                     shift and go to state 59
    block                          shift and go to state 61
    simple_stmt                    shift and go to state 22
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 48

    (40) value_expr -> VALUE . after_expr
    (31) after_expr -> . ( value_list )
    (32) after_expr -> . block
    (33) after_expr -> . NEWLINE
    (19) block -> . NEWLINE INDENT statements DEDENT
    (20) block -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for COMMENT_TAG resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    (               shift and go to state 60
    NEWLINE         shift and go to state 62
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    ASSIGN          reduce using rule 52 (empty -> .)
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! NEWLINE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT_TAG     [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    after_expr                     shift and go to state 63
    block                          shift and go to state 61
    simple_stmt                    shift and go to state 22
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 49

    (10) conditions -> CONDITIONS block .

    EVENT           reduce using rule 10 (conditions -> CONDITIONS block .)
    CONDITIONS      reduce using rule 10 (conditions -> CONDITIONS block .)
    ACTIONS         reduce using rule 10 (conditions -> CONDITIONS block .)
    COMMENT         reduce using rule 10 (conditions -> CONDITIONS block .)
    DEDENT          reduce using rule 10 (conditions -> CONDITIONS block .)


state 50

    (11) actions -> ACTIONS block .

    EVENT           reduce using rule 11 (actions -> ACTIONS block .)
    CONDITIONS      reduce using rule 11 (actions -> ACTIONS block .)
    ACTIONS         reduce using rule 11 (actions -> ACTIONS block .)
    COMMENT         reduce using rule 11 (actions -> ACTIONS block .)
    DEDENT          reduce using rule 11 (actions -> ACTIONS block .)


state 51

    (19) block -> NEWLINE INDENT . statements DEDENT
    (12) statements -> . statements statement
    (13) statements -> . statement
    (14) statement -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for COMMENT_TAG resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ASSIGN          reduce using rule 52 (empty -> .)
    NEWLINE         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! COMMENT_TAG     [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    statements                     shift and go to state 64
    statement                      shift and go to state 65
    simple_stmt                    shift and go to state 66
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 52

    (15) simple_stmt -> expr_list NEWLINE .

    EVENT           reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    CONDITIONS      reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    ACTIONS         reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    COMMENT         reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    DEDENT          reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    NEWLINE         reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    ASSIGN          reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    COMPARE         reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    ,               reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    ]               reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    COMMENT_TAG     reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    INTEGER         reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    FLOAT           reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    [               reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    NAME            reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    GLOBAL_VAR      reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    PLAYER_VAR      reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    NUMBER          reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    VALUE           reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)
    )               reduce using rule 15 (simple_stmt -> expr_list NEWLINE .)


state 53

    (37) compare_expr -> compare_expr COMPARE . expr
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    NEWLINE         reduce using rule 52 (empty -> .)
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    ASSIGN          reduce using rule 52 (empty -> .)
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    COMMENT_TAG     reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    expr                           shift and go to state 67
    value                          shift and go to state 68
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 54

    (23) expr_list -> COMMENT_TAG expr_list .

    NEWLINE         reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    EVENT           reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    CONDITIONS      reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    ACTIONS         reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    COMMENT         reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    DEDENT          reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    ASSIGN          reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    COMPARE         reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    ,               reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    ]               reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    COMMENT_TAG     reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    INTEGER         reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    FLOAT           reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    [               reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    NAME            reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    GLOBAL_VAR      reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    PLAYER_VAR      reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    NUMBER          reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    VALUE           reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)
    )               reduce using rule 23 (expr_list -> COMMENT_TAG expr_list .)


state 55

    (49) vector -> COMPARE value . , value , value COMPARE

    ,               shift and go to state 69


state 56

    (38) assign_expr -> value ASSIGN . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    NEWLINE         reduce using rule 52 (empty -> .)
    EVENT           reduce using rule 52 (empty -> .)
    CONDITIONS      reduce using rule 52 (empty -> .)
    ACTIONS         reduce using rule 52 (empty -> .)
    DEDENT          reduce using rule 52 (empty -> .)
    ASSIGN          reduce using rule 52 (empty -> .)
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    COMMENT_TAG     reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    value                          shift and go to state 70
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 57

    (50) array -> [ value_list . ]

    ]               shift and go to state 71


state 58

    (34) value_list -> value .
    (35) value_list -> value . , value_list

    ]               reduce using rule 34 (value_list -> value .)
    )               reduce using rule 34 (value_list -> value .)
    ,               shift and go to state 72


state 59

    (39) number_expr -> NUMBER after_expr .

    ASSIGN          reduce using rule 39 (number_expr -> NUMBER after_expr .)
    COMPARE         reduce using rule 39 (number_expr -> NUMBER after_expr .)
    NEWLINE         reduce using rule 39 (number_expr -> NUMBER after_expr .)
    EVENT           reduce using rule 39 (number_expr -> NUMBER after_expr .)
    CONDITIONS      reduce using rule 39 (number_expr -> NUMBER after_expr .)
    ACTIONS         reduce using rule 39 (number_expr -> NUMBER after_expr .)
    COMMENT         reduce using rule 39 (number_expr -> NUMBER after_expr .)
    DEDENT          reduce using rule 39 (number_expr -> NUMBER after_expr .)
    ,               reduce using rule 39 (number_expr -> NUMBER after_expr .)
    ]               reduce using rule 39 (number_expr -> NUMBER after_expr .)
    COMMENT_TAG     reduce using rule 39 (number_expr -> NUMBER after_expr .)
    INTEGER         reduce using rule 39 (number_expr -> NUMBER after_expr .)
    FLOAT           reduce using rule 39 (number_expr -> NUMBER after_expr .)
    [               reduce using rule 39 (number_expr -> NUMBER after_expr .)
    NAME            reduce using rule 39 (number_expr -> NUMBER after_expr .)
    GLOBAL_VAR      reduce using rule 39 (number_expr -> NUMBER after_expr .)
    PLAYER_VAR      reduce using rule 39 (number_expr -> NUMBER after_expr .)
    NUMBER          reduce using rule 39 (number_expr -> NUMBER after_expr .)
    VALUE           reduce using rule 39 (number_expr -> NUMBER after_expr .)
    )               reduce using rule 39 (number_expr -> NUMBER after_expr .)


state 60

    (31) after_expr -> ( . value_list )
    (34) value_list -> . value
    (35) value_list -> . value , value_list
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ,               reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

    value_list                     shift and go to state 73
    value                          shift and go to state 58
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 61

    (32) after_expr -> block .

    NEWLINE         reduce using rule 32 (after_expr -> block .)
    EVENT           reduce using rule 32 (after_expr -> block .)
    CONDITIONS      reduce using rule 32 (after_expr -> block .)
    ACTIONS         reduce using rule 32 (after_expr -> block .)
    COMMENT         reduce using rule 32 (after_expr -> block .)
    DEDENT          reduce using rule 32 (after_expr -> block .)
    ASSIGN          reduce using rule 32 (after_expr -> block .)
    COMPARE         reduce using rule 32 (after_expr -> block .)
    ,               reduce using rule 32 (after_expr -> block .)
    ]               reduce using rule 32 (after_expr -> block .)
    COMMENT_TAG     reduce using rule 32 (after_expr -> block .)
    INTEGER         reduce using rule 32 (after_expr -> block .)
    FLOAT           reduce using rule 32 (after_expr -> block .)
    [               reduce using rule 32 (after_expr -> block .)
    NAME            reduce using rule 32 (after_expr -> block .)
    GLOBAL_VAR      reduce using rule 32 (after_expr -> block .)
    PLAYER_VAR      reduce using rule 32 (after_expr -> block .)
    NUMBER          reduce using rule 32 (after_expr -> block .)
    VALUE           reduce using rule 32 (after_expr -> block .)
    )               reduce using rule 32 (after_expr -> block .)


state 62

    (33) after_expr -> NEWLINE .
    (19) block -> NEWLINE . INDENT statements DEDENT

    NEWLINE         reduce using rule 33 (after_expr -> NEWLINE .)
    EVENT           reduce using rule 33 (after_expr -> NEWLINE .)
    CONDITIONS      reduce using rule 33 (after_expr -> NEWLINE .)
    ACTIONS         reduce using rule 33 (after_expr -> NEWLINE .)
    COMMENT         reduce using rule 33 (after_expr -> NEWLINE .)
    DEDENT          reduce using rule 33 (after_expr -> NEWLINE .)
    ASSIGN          reduce using rule 33 (after_expr -> NEWLINE .)
    COMPARE         reduce using rule 33 (after_expr -> NEWLINE .)
    ,               reduce using rule 33 (after_expr -> NEWLINE .)
    ]               reduce using rule 33 (after_expr -> NEWLINE .)
    COMMENT_TAG     reduce using rule 33 (after_expr -> NEWLINE .)
    INTEGER         reduce using rule 33 (after_expr -> NEWLINE .)
    FLOAT           reduce using rule 33 (after_expr -> NEWLINE .)
    [               reduce using rule 33 (after_expr -> NEWLINE .)
    NAME            reduce using rule 33 (after_expr -> NEWLINE .)
    GLOBAL_VAR      reduce using rule 33 (after_expr -> NEWLINE .)
    PLAYER_VAR      reduce using rule 33 (after_expr -> NEWLINE .)
    NUMBER          reduce using rule 33 (after_expr -> NEWLINE .)
    VALUE           reduce using rule 33 (after_expr -> NEWLINE .)
    )               reduce using rule 33 (after_expr -> NEWLINE .)
    INDENT          shift and go to state 51


state 63

    (40) value_expr -> VALUE after_expr .

    ASSIGN          reduce using rule 40 (value_expr -> VALUE after_expr .)
    COMPARE         reduce using rule 40 (value_expr -> VALUE after_expr .)
    NEWLINE         reduce using rule 40 (value_expr -> VALUE after_expr .)
    EVENT           reduce using rule 40 (value_expr -> VALUE after_expr .)
    CONDITIONS      reduce using rule 40 (value_expr -> VALUE after_expr .)
    ACTIONS         reduce using rule 40 (value_expr -> VALUE after_expr .)
    COMMENT         reduce using rule 40 (value_expr -> VALUE after_expr .)
    DEDENT          reduce using rule 40 (value_expr -> VALUE after_expr .)
    ,               reduce using rule 40 (value_expr -> VALUE after_expr .)
    ]               reduce using rule 40 (value_expr -> VALUE after_expr .)
    COMMENT_TAG     reduce using rule 40 (value_expr -> VALUE after_expr .)
    INTEGER         reduce using rule 40 (value_expr -> VALUE after_expr .)
    FLOAT           reduce using rule 40 (value_expr -> VALUE after_expr .)
    [               reduce using rule 40 (value_expr -> VALUE after_expr .)
    NAME            reduce using rule 40 (value_expr -> VALUE after_expr .)
    GLOBAL_VAR      reduce using rule 40 (value_expr -> VALUE after_expr .)
    PLAYER_VAR      reduce using rule 40 (value_expr -> VALUE after_expr .)
    NUMBER          reduce using rule 40 (value_expr -> VALUE after_expr .)
    VALUE           reduce using rule 40 (value_expr -> VALUE after_expr .)
    )               reduce using rule 40 (value_expr -> VALUE after_expr .)


state 64

    (19) block -> NEWLINE INDENT statements . DEDENT
    (12) statements -> statements . statement
    (14) statement -> . simple_stmt
    (15) simple_stmt -> . expr_list NEWLINE
    (16) simple_stmt -> . expr_list
    (21) expr_list -> . compare_expr
    (22) expr_list -> . assign_expr
    (23) expr_list -> . COMMENT_TAG expr_list
    (36) compare_expr -> . expr
    (37) compare_expr -> . compare_expr COMPARE expr
    (38) assign_expr -> . value ASSIGN value
    (24) expr -> . value
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
  ! shift/reduce conflict for DEDENT resolved as shift
  ! shift/reduce conflict for COMMENT_TAG resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for GLOBAL_VAR resolved as shift
  ! shift/reduce conflict for PLAYER_VAR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VALUE resolved as shift
    DEDENT          shift and go to state 74
    COMMENT_TAG     shift and go to state 26
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ASSIGN          reduce using rule 52 (empty -> .)
    NEWLINE         reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMPARE         [ reduce using rule 52 (empty -> .) ]
  ! DEDENT          [ reduce using rule 52 (empty -> .) ]
  ! COMMENT_TAG     [ reduce using rule 52 (empty -> .) ]
  ! INTEGER         [ reduce using rule 52 (empty -> .) ]
  ! FLOAT           [ reduce using rule 52 (empty -> .) ]
  ! [               [ reduce using rule 52 (empty -> .) ]
  ! COMMENT         [ reduce using rule 52 (empty -> .) ]
  ! NAME            [ reduce using rule 52 (empty -> .) ]
  ! GLOBAL_VAR      [ reduce using rule 52 (empty -> .) ]
  ! PLAYER_VAR      [ reduce using rule 52 (empty -> .) ]
  ! NUMBER          [ reduce using rule 52 (empty -> .) ]
  ! VALUE           [ reduce using rule 52 (empty -> .) ]

    statement                      shift and go to state 75
    simple_stmt                    shift and go to state 66
    expr_list                      shift and go to state 23
    compare_expr                   shift and go to state 24
    assign_expr                    shift and go to state 25
    expr                           shift and go to state 27
    value                          shift and go to state 29
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 65

    (13) statements -> statement .

    DEDENT          reduce using rule 13 (statements -> statement .)
    COMMENT_TAG     reduce using rule 13 (statements -> statement .)
    INTEGER         reduce using rule 13 (statements -> statement .)
    FLOAT           reduce using rule 13 (statements -> statement .)
    COMPARE         reduce using rule 13 (statements -> statement .)
    [               reduce using rule 13 (statements -> statement .)
    COMMENT         reduce using rule 13 (statements -> statement .)
    NAME            reduce using rule 13 (statements -> statement .)
    GLOBAL_VAR      reduce using rule 13 (statements -> statement .)
    PLAYER_VAR      reduce using rule 13 (statements -> statement .)
    NUMBER          reduce using rule 13 (statements -> statement .)
    VALUE           reduce using rule 13 (statements -> statement .)
    NEWLINE         reduce using rule 13 (statements -> statement .)
    ASSIGN          reduce using rule 13 (statements -> statement .)


state 66

    (14) statement -> simple_stmt .

    DEDENT          reduce using rule 14 (statement -> simple_stmt .)
    COMMENT_TAG     reduce using rule 14 (statement -> simple_stmt .)
    INTEGER         reduce using rule 14 (statement -> simple_stmt .)
    FLOAT           reduce using rule 14 (statement -> simple_stmt .)
    COMPARE         reduce using rule 14 (statement -> simple_stmt .)
    [               reduce using rule 14 (statement -> simple_stmt .)
    COMMENT         reduce using rule 14 (statement -> simple_stmt .)
    NAME            reduce using rule 14 (statement -> simple_stmt .)
    GLOBAL_VAR      reduce using rule 14 (statement -> simple_stmt .)
    PLAYER_VAR      reduce using rule 14 (statement -> simple_stmt .)
    NUMBER          reduce using rule 14 (statement -> simple_stmt .)
    VALUE           reduce using rule 14 (statement -> simple_stmt .)
    NEWLINE         reduce using rule 14 (statement -> simple_stmt .)
    ASSIGN          reduce using rule 14 (statement -> simple_stmt .)


state 67

    (37) compare_expr -> compare_expr COMPARE expr .

    COMPARE         reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    NEWLINE         reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    EVENT           reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    CONDITIONS      reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    ACTIONS         reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    COMMENT         reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    DEDENT          reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    ASSIGN          reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    ,               reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    ]               reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    COMMENT_TAG     reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    INTEGER         reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    FLOAT           reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    [               reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    NAME            reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    GLOBAL_VAR      reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    PLAYER_VAR      reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    NUMBER          reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    VALUE           reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)
    )               reduce using rule 37 (compare_expr -> compare_expr COMPARE expr .)


state 68

    (24) expr -> value .

    NEWLINE         reduce using rule 24 (expr -> value .)
    EVENT           reduce using rule 24 (expr -> value .)
    CONDITIONS      reduce using rule 24 (expr -> value .)
    ACTIONS         reduce using rule 24 (expr -> value .)
    COMMENT         reduce using rule 24 (expr -> value .)
    DEDENT          reduce using rule 24 (expr -> value .)
    ASSIGN          reduce using rule 24 (expr -> value .)
    COMPARE         reduce using rule 24 (expr -> value .)
    ,               reduce using rule 24 (expr -> value .)
    ]               reduce using rule 24 (expr -> value .)
    COMMENT_TAG     reduce using rule 24 (expr -> value .)
    INTEGER         reduce using rule 24 (expr -> value .)
    FLOAT           reduce using rule 24 (expr -> value .)
    [               reduce using rule 24 (expr -> value .)
    NAME            reduce using rule 24 (expr -> value .)
    GLOBAL_VAR      reduce using rule 24 (expr -> value .)
    PLAYER_VAR      reduce using rule 24 (expr -> value .)
    NUMBER          reduce using rule 24 (expr -> value .)
    VALUE           reduce using rule 24 (expr -> value .)
    )               reduce using rule 24 (expr -> value .)


state 69

    (49) vector -> COMPARE value , . value , value COMPARE
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ,               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

    value                          shift and go to state 76
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 70

    (38) assign_expr -> value ASSIGN value .

    NEWLINE         reduce using rule 38 (assign_expr -> value ASSIGN value .)
    EVENT           reduce using rule 38 (assign_expr -> value ASSIGN value .)
    CONDITIONS      reduce using rule 38 (assign_expr -> value ASSIGN value .)
    ACTIONS         reduce using rule 38 (assign_expr -> value ASSIGN value .)
    COMMENT         reduce using rule 38 (assign_expr -> value ASSIGN value .)
    DEDENT          reduce using rule 38 (assign_expr -> value ASSIGN value .)
    ASSIGN          reduce using rule 38 (assign_expr -> value ASSIGN value .)
    COMPARE         reduce using rule 38 (assign_expr -> value ASSIGN value .)
    ,               reduce using rule 38 (assign_expr -> value ASSIGN value .)
    ]               reduce using rule 38 (assign_expr -> value ASSIGN value .)
    COMMENT_TAG     reduce using rule 38 (assign_expr -> value ASSIGN value .)
    INTEGER         reduce using rule 38 (assign_expr -> value ASSIGN value .)
    FLOAT           reduce using rule 38 (assign_expr -> value ASSIGN value .)
    [               reduce using rule 38 (assign_expr -> value ASSIGN value .)
    NAME            reduce using rule 38 (assign_expr -> value ASSIGN value .)
    GLOBAL_VAR      reduce using rule 38 (assign_expr -> value ASSIGN value .)
    PLAYER_VAR      reduce using rule 38 (assign_expr -> value ASSIGN value .)
    NUMBER          reduce using rule 38 (assign_expr -> value ASSIGN value .)
    VALUE           reduce using rule 38 (assign_expr -> value ASSIGN value .)
    )               reduce using rule 38 (assign_expr -> value ASSIGN value .)


state 71

    (50) array -> [ value_list ] .

    ASSIGN          reduce using rule 50 (array -> [ value_list ] .)
    COMPARE         reduce using rule 50 (array -> [ value_list ] .)
    NEWLINE         reduce using rule 50 (array -> [ value_list ] .)
    EVENT           reduce using rule 50 (array -> [ value_list ] .)
    CONDITIONS      reduce using rule 50 (array -> [ value_list ] .)
    ACTIONS         reduce using rule 50 (array -> [ value_list ] .)
    COMMENT         reduce using rule 50 (array -> [ value_list ] .)
    DEDENT          reduce using rule 50 (array -> [ value_list ] .)
    ,               reduce using rule 50 (array -> [ value_list ] .)
    ]               reduce using rule 50 (array -> [ value_list ] .)
    COMMENT_TAG     reduce using rule 50 (array -> [ value_list ] .)
    INTEGER         reduce using rule 50 (array -> [ value_list ] .)
    FLOAT           reduce using rule 50 (array -> [ value_list ] .)
    [               reduce using rule 50 (array -> [ value_list ] .)
    NAME            reduce using rule 50 (array -> [ value_list ] .)
    GLOBAL_VAR      reduce using rule 50 (array -> [ value_list ] .)
    PLAYER_VAR      reduce using rule 50 (array -> [ value_list ] .)
    NUMBER          reduce using rule 50 (array -> [ value_list ] .)
    VALUE           reduce using rule 50 (array -> [ value_list ] .)
    )               reduce using rule 50 (array -> [ value_list ] .)


state 72

    (35) value_list -> value , . value_list
    (34) value_list -> . value
    (35) value_list -> . value , value_list
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    ,               reduce using rule 52 (empty -> .)
    ]               reduce using rule 52 (empty -> .)
    )               reduce using rule 52 (empty -> .)
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

    value                          shift and go to state 58
    value_list                     shift and go to state 77
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 73

    (31) after_expr -> ( value_list . )

    )               shift and go to state 78


state 74

    (19) block -> NEWLINE INDENT statements DEDENT .

    EVENT           reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    CONDITIONS      reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    ACTIONS         reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    COMMENT         reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    DEDENT          reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    NEWLINE         reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    ASSIGN          reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    COMPARE         reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    ,               reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    ]               reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    COMMENT_TAG     reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    INTEGER         reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    FLOAT           reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    [               reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    NAME            reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    GLOBAL_VAR      reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    PLAYER_VAR      reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    NUMBER          reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    VALUE           reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)
    )               reduce using rule 19 (block -> NEWLINE INDENT statements DEDENT .)


state 75

    (12) statements -> statements statement .

    DEDENT          reduce using rule 12 (statements -> statements statement .)
    COMMENT_TAG     reduce using rule 12 (statements -> statements statement .)
    INTEGER         reduce using rule 12 (statements -> statements statement .)
    FLOAT           reduce using rule 12 (statements -> statements statement .)
    COMPARE         reduce using rule 12 (statements -> statements statement .)
    [               reduce using rule 12 (statements -> statements statement .)
    COMMENT         reduce using rule 12 (statements -> statements statement .)
    NAME            reduce using rule 12 (statements -> statements statement .)
    GLOBAL_VAR      reduce using rule 12 (statements -> statements statement .)
    PLAYER_VAR      reduce using rule 12 (statements -> statements statement .)
    NUMBER          reduce using rule 12 (statements -> statements statement .)
    VALUE           reduce using rule 12 (statements -> statements statement .)
    NEWLINE         reduce using rule 12 (statements -> statements statement .)
    ASSIGN          reduce using rule 12 (statements -> statements statement .)


state 76

    (49) vector -> COMPARE value , value . , value COMPARE

    ,               shift and go to state 79


state 77

    (35) value_list -> value , value_list .

    ]               reduce using rule 35 (value_list -> value , value_list .)
    )               reduce using rule 35 (value_list -> value , value_list .)


state 78

    (31) after_expr -> ( value_list ) .

    NEWLINE         reduce using rule 31 (after_expr -> ( value_list ) .)
    EVENT           reduce using rule 31 (after_expr -> ( value_list ) .)
    CONDITIONS      reduce using rule 31 (after_expr -> ( value_list ) .)
    ACTIONS         reduce using rule 31 (after_expr -> ( value_list ) .)
    COMMENT         reduce using rule 31 (after_expr -> ( value_list ) .)
    DEDENT          reduce using rule 31 (after_expr -> ( value_list ) .)
    ASSIGN          reduce using rule 31 (after_expr -> ( value_list ) .)
    COMPARE         reduce using rule 31 (after_expr -> ( value_list ) .)
    ,               reduce using rule 31 (after_expr -> ( value_list ) .)
    ]               reduce using rule 31 (after_expr -> ( value_list ) .)
    COMMENT_TAG     reduce using rule 31 (after_expr -> ( value_list ) .)
    INTEGER         reduce using rule 31 (after_expr -> ( value_list ) .)
    FLOAT           reduce using rule 31 (after_expr -> ( value_list ) .)
    [               reduce using rule 31 (after_expr -> ( value_list ) .)
    NAME            reduce using rule 31 (after_expr -> ( value_list ) .)
    GLOBAL_VAR      reduce using rule 31 (after_expr -> ( value_list ) .)
    PLAYER_VAR      reduce using rule 31 (after_expr -> ( value_list ) .)
    NUMBER          reduce using rule 31 (after_expr -> ( value_list ) .)
    VALUE           reduce using rule 31 (after_expr -> ( value_list ) .)
    )               reduce using rule 31 (after_expr -> ( value_list ) .)


state 79

    (49) vector -> COMPARE value , value , . value COMPARE
    (25) value -> . variable
    (26) value -> . compound_stmt
    (27) value -> . number_const
    (28) value -> . vector
    (29) value -> . array
    (30) value -> . empty
    (43) variable -> . name
    (44) variable -> . global_var
    (45) variable -> . player_var
    (17) compound_stmt -> . number_expr
    (18) compound_stmt -> . value_expr
    (41) number_const -> . INTEGER
    (42) number_const -> . FLOAT
    (49) vector -> . COMPARE value , value , value COMPARE
    (50) array -> . [ value_list ]
    (51) empty -> . COMMENT
    (52) empty -> .
    (46) name -> . NAME
    (47) global_var -> . GLOBAL_VAR
    (48) player_var -> . PLAYER_VAR
    (39) number_expr -> . NUMBER after_expr
    (40) value_expr -> . VALUE after_expr

  ! shift/reduce conflict for COMPARE resolved as shift
    INTEGER         shift and go to state 41
    FLOAT           shift and go to state 42
    COMPARE         shift and go to state 28
    [               shift and go to state 43
    COMMENT         shift and go to state 15
    NAME            shift and go to state 44
    GLOBAL_VAR      shift and go to state 45
    PLAYER_VAR      shift and go to state 46
    NUMBER          shift and go to state 47
    VALUE           shift and go to state 48

  ! COMPARE         [ reduce using rule 52 (empty -> .) ]

    value                          shift and go to state 80
    variable                       shift and go to state 30
    compound_stmt                  shift and go to state 31
    number_const                   shift and go to state 32
    vector                         shift and go to state 33
    array                          shift and go to state 34
    empty                          shift and go to state 35
    name                           shift and go to state 36
    global_var                     shift and go to state 37
    player_var                     shift and go to state 38
    number_expr                    shift and go to state 39
    value_expr                     shift and go to state 40

state 80

    (49) vector -> COMPARE value , value , value . COMPARE

    COMPARE         shift and go to state 81


state 81

    (49) vector -> COMPARE value , value , value COMPARE .

    ASSIGN          reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    COMPARE         reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    NEWLINE         reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    EVENT           reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    CONDITIONS      reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    ACTIONS         reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    COMMENT         reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    DEDENT          reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    ,               reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    ]               reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    COMMENT_TAG     reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    INTEGER         reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    FLOAT           reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    [               reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    NAME            reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    GLOBAL_VAR      reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    PLAYER_VAR      reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    NUMBER          reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    VALUE           reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)
    )               reduce using rule 49 (vector -> COMPARE value , value , value COMPARE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMPARE in state 12 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 12 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 12 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 13 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 13 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 13 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 14 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 14 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 14 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 23 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 24 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 26 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 26 resolved as shift
WARNING: shift/reduce conflict for COMMENT_TAG in state 26 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 26 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 26 resolved as shift
WARNING: shift/reduce conflict for [ in state 26 resolved as shift
WARNING: shift/reduce conflict for NAME in state 26 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 26 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 26 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 26 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 26 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 29 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 47 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 47 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 47 resolved as shift
WARNING: shift/reduce conflict for COMMENT_TAG in state 47 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for [ in state 47 resolved as shift
WARNING: shift/reduce conflict for NAME in state 47 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 47 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 47 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 47 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 47 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 48 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 48 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 48 resolved as shift
WARNING: shift/reduce conflict for COMMENT_TAG in state 48 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 48 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 48 resolved as shift
WARNING: shift/reduce conflict for [ in state 48 resolved as shift
WARNING: shift/reduce conflict for NAME in state 48 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 48 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 48 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 48 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 48 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMENT_TAG in state 51 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 51 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 51 resolved as shift
WARNING: shift/reduce conflict for [ in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 51 resolved as shift
WARNING: shift/reduce conflict for NAME in state 51 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 51 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 51 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 51 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 51 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 53 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 53 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 53 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 53 resolved as shift
WARNING: shift/reduce conflict for [ in state 53 resolved as shift
WARNING: shift/reduce conflict for NAME in state 53 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 53 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 53 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 53 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 56 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 56 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 56 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 56 resolved as shift
WARNING: shift/reduce conflict for [ in state 56 resolved as shift
WARNING: shift/reduce conflict for NAME in state 56 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 56 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 56 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 64 resolved as shift
WARNING: shift/reduce conflict for DEDENT in state 64 resolved as shift
WARNING: shift/reduce conflict for COMMENT_TAG in state 64 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 64 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 64 resolved as shift
WARNING: shift/reduce conflict for [ in state 64 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 64 resolved as shift
WARNING: shift/reduce conflict for NAME in state 64 resolved as shift
WARNING: shift/reduce conflict for GLOBAL_VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for PLAYER_VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 64 resolved as shift
WARNING: shift/reduce conflict for VALUE in state 64 resolved as shift
WARNING: shift/reduce conflict for COMPARE in state 79 resolved as shift
